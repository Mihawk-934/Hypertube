{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from '../../containers/Home/MoviesList/api';\nexport const movies = (movies, nbPage) => {\n  return {\n    type: actionTypes.MOVIES,\n    newMovies: movies,\n    nbPage: nbPage\n  };\n};\nexport const popular = page => {\n  return dispatch => {\n    axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=1e32f5c452c2267d5367589e9864ab1c&language=fr&page=${page}`).then(response => {\n      dispatch(movies(response.data.results, response.data.total_pages));\n    }).catch(err => console.log(err));\n  };\n};\nexport const filtres = filtres => {\n  // return dispatch => {\n  //     let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}1${PATH_ADULT}${PATH_LANGUE}fr`;\n  //     if (!!filtres.genre.value)\n  //         url += `&with_genres=${filtres.genre.value}`;\n  //     if (!!filtres.years.value)\n  //         url += `&primary_release_year=${filtres.years.value}`;\n  //     if (!!filtres.sortby.value)\n  //         url += `&sort_by=${filtres.sortby.value}`;\n  //     axios.get(url)\n  //         .then(response => {\n  //             dispatch(movies(response.data.results));\n  //         })\n  //         .catch(err => console.log(err));\n  // }\n  return {\n    type: actionTypes.FILTRES,\n    filtres: filtres\n  };\n};\nexport const textSearch = textSearch => {\n  return {\n    type: actionTypes.FILTRES,\n    textSearch: filtres\n  }; // return dispatch => {\n  //     if (!!textSearch) {\n  //         axios.get(`${PATH_BASE}${PATH_SEARCH}${PATH_MOVIE}${API_KEY}${PATH_PAGE}1${PATH_LANGUE}fr${PATH_ADULT}\"&query=${textSearch}`)\n  //             .then(response => {\n  //                 dispatch(movies(response.data.results));\n  //             })\n  //             .catch(err => console.log(err));\n  //     }\n  //     else \n  //        dispatch(popular());\n  // }\n};","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/actions/filtres.js"],"names":["actionTypes","axios","API_KEY","PATH_BASE","PATH_DISCOVER","PATH_MOVIE","PATH_SEARCH","PATH_PAGE","PATH_ADULT","PATH_LANGUE","movies","nbPage","type","MOVIES","newMovies","popular","page","dispatch","get","then","response","data","results","total_pages","catch","err","console","log","filtres","FILTRES","textSearch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,aAA7B,EAA4CC,UAA5C,EAAwDC,WAAxD,EAAqEC,SAArE,EAAgFC,UAAhF,EAA4FC,WAA5F,QAAgH,sCAAhH;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACA,MAAD,EAASC,MAAT,KAAoB;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEZ,WAAW,CAACa,MADf;AAEHC,IAAAA,SAAS,EAAEJ,MAFR;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMI,OAAO,GAAIC,IAAD,IAAU;AAC7B,SAAOC,QAAQ,IAAI;AACfhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,wGAAuGF,IAAK,EAAvH,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACP,MAAM,CAACU,QAAQ,CAACC,IAAT,CAAcC,OAAf,EAAwBF,QAAQ,CAACC,IAAT,CAAcE,WAAtC,CAAP,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,OAAO,GAAIA,OAAD,IAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO;AACHhB,IAAAA,IAAI,EAAEZ,WAAW,CAAC6B,OADf;AAEJD,IAAAA,OAAO,EAAEA;AAFL,GAAP;AAIH,CAnBM;AAqBP,OAAO,MAAME,UAAU,GAAIA,UAAD,IAAgB;AACtC,SAAO;AACHlB,IAAAA,IAAI,EAAEZ,WAAW,CAAC6B,OADf;AAEHC,IAAAA,UAAU,EAAEF;AAFT,GAAP,CADsC,CAKtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAhBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from  '../../containers/Home/MoviesList/api';\n\nexport const movies = (movies, nbPage) => {\n    return {\n        type: actionTypes.MOVIES,\n        newMovies: movies,\n        nbPage: nbPage,\n    }\n};\n\nexport const popular = (page) => {\n    return dispatch => {\n        axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=1e32f5c452c2267d5367589e9864ab1c&language=fr&page=${page}`)\n            .then(response => {\n                dispatch(movies(response.data.results, response.data.total_pages));\n            })\n            .catch(err => console.log(err));\n    }\n};\n\nexport const filtres = (filtres) => {\n    // return dispatch => {\n    //     let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}1${PATH_ADULT}${PATH_LANGUE}fr`;\n    //     if (!!filtres.genre.value)\n    //         url += `&with_genres=${filtres.genre.value}`;\n    //     if (!!filtres.years.value)\n    //         url += `&primary_release_year=${filtres.years.value}`;\n    //     if (!!filtres.sortby.value)\n    //         url += `&sort_by=${filtres.sortby.value}`;\n    //     axios.get(url)\n    //         .then(response => {\n    //             dispatch(movies(response.data.results));\n    //         })\n    //         .catch(err => console.log(err));\n    // }\n    return {\n        type: actionTypes.FILTRES,\n       filtres: filtres\n    }\n};\n\nexport const textSearch = (textSearch) => {\n    return {\n        type: actionTypes.FILTRES,\n        textSearch: filtres\n    }\n    // return dispatch => {\n    //     if (!!textSearch) {\n    //         axios.get(`${PATH_BASE}${PATH_SEARCH}${PATH_MOVIE}${API_KEY}${PATH_PAGE}1${PATH_LANGUE}fr${PATH_ADULT}\"&query=${textSearch}`)\n    //             .then(response => {\n    //                 dispatch(movies(response.data.results));\n    //             })\n    //             .catch(err => console.log(err));\n    //     }\n    //     else \n    //        dispatch(popular());\n    // }\n};"]},"metadata":{},"sourceType":"module"}