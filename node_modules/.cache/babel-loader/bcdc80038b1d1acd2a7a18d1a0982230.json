{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from '../../containers/Home/MoviesList/api';\nexport const genre = genre => {\n  return {\n    type: actionTypes.GENRE,\n    genre: genre\n  };\n};\nexport const ordre = ordre => {\n  return {\n    type: actionTypes.ORDRE,\n    ordre: ordre\n  };\n};\nexport const years = years => {\n  return {\n    type: actionTypes.YEARS,\n    years: years\n  };\n};\nexport const textSearch = textSearch => {\n  return {\n    type: actionTypes.TEXT_SEARCH,\n    textSearch: textSearch\n  };\n};\nexport const movies = movies => {\n  return {\n    type: actionTypes.MOVIES,\n    movies: movies\n  };\n};\nexport const filtres = filtres => {\n  return dispatch => {\n    let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_ADULT}${PATH_LANGUE}fr`;\n    if (!!filtres.genre.value) url += `&with_genres=${filtres.genre.value}`;\n    if (!!filtres.years.value) url += `&primary_release_year=${filtres.years.value}`;\n    if (!!filtres.sortby.value) url += `&sort_by=${filtres.sortby.value}`;\n    axios.get(url).then(response => {\n      dispatch(movies(response.data.results));\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/actions/filtres.js"],"names":["actionTypes","axios","API_KEY","PATH_BASE","PATH_DISCOVER","PATH_MOVIE","PATH_SEARCH","PATH_PAGE","PATH_ADULT","PATH_LANGUE","genre","type","GENRE","ordre","ORDRE","years","YEARS","textSearch","TEXT_SEARCH","movies","MOVIES","filtres","dispatch","url","state","page","value","sortby","get","then","response","data","results","catch","err","console","log"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,aAA7B,EAA4CC,UAA5C,EAAwDC,WAAxD,EAAqEC,SAArE,EAAgFC,UAAhF,EAA4FC,WAA5F,QAAgH,sCAAhH;AACA,OAAO,MAAMC,KAAK,GAAIA,KAAD,IAAW;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEX,WAAW,CAACY,KADf;AAEHF,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,KAAK,GAAIA,KAAD,IAAW;AAC5B,SAAO;AACHF,IAAAA,IAAI,EAAEX,WAAW,CAACc,KADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,KAAK,GAAIA,KAAD,IAAW;AAC5B,SAAO;AACHJ,IAAAA,IAAI,EAAEX,WAAW,CAACgB,KADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,UAAU,GAAIA,UAAD,IAAgB;AACtC,SAAO;AACHN,IAAAA,IAAI,EAAEX,WAAW,CAACkB,WADf;AAEHD,IAAAA,UAAU,EAAEA;AAFT,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAIA,MAAD,IAAY;AAC9B,SAAO;AACHR,IAAAA,IAAI,EAAEX,WAAW,CAACoB,MADf;AAEHD,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,OAAO,GAAIA,OAAD,IAAa;AAChC,SAAOC,QAAQ,IAAI;AACf,QAAIC,GAAG,GAAI,GAAEpB,SAAU,GAAEC,aAAc,GAAEC,UAAW,GAAEH,OAAQ,GAAEK,SAAU,GAAE,KAAKiB,KAAL,CAAWC,IAAK,GAAEjB,UAAW,GAAEC,WAAY,IAAvH;AACA,QAAI,CAAC,CAACY,OAAO,CAACX,KAAR,CAAcgB,KAApB,EACIH,GAAG,IAAK,gBAAeF,OAAO,CAACX,KAAR,CAAcgB,KAAM,EAA3C;AACJ,QAAI,CAAC,CAACL,OAAO,CAACN,KAAR,CAAcW,KAApB,EACIH,GAAG,IAAK,yBAAwBF,OAAO,CAACN,KAAR,CAAcW,KAAM,EAApD;AACJ,QAAI,CAAC,CAACL,OAAO,CAACM,MAAR,CAAeD,KAArB,EACIH,GAAG,IAAK,YAAWF,OAAO,CAACM,MAAR,CAAeD,KAAM,EAAxC;AACJzB,IAAAA,KAAK,CAAC2B,GAAN,CAAUL,GAAV,EACKM,IADL,CACUC,QAAQ,IAAI;AACdR,MAAAA,QAAQ,CAACH,MAAM,CAACW,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAP,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,GAbD;AAcH,CAfM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from  '../../containers/Home/MoviesList/api';\nexport const genre = (genre) => {\n    return {\n        type: actionTypes.GENRE,\n        genre: genre\n    };\n};\n\nexport const ordre = (ordre) => {\n    return {\n        type: actionTypes.ORDRE,\n        ordre: ordre\n    };\n};\n\nexport const years = (years) => {\n    return {\n        type: actionTypes.YEARS,\n        years: years\n    };\n};\n\nexport const textSearch = (textSearch) => {\n    return {\n        type: actionTypes.TEXT_SEARCH,\n        textSearch: textSearch\n    }; \n};\n\nexport const movies = (movies) => {\n    return {\n        type: actionTypes.MOVIES,\n        movies: movies\n    }\n};\n\nexport const filtres = (filtres) => {\n    return dispatch => {\n        let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_ADULT}${PATH_LANGUE}fr`;\n        if (!!filtres.genre.value)\n            url += `&with_genres=${filtres.genre.value}`;\n        if (!!filtres.years.value)\n            url += `&primary_release_year=${filtres.years.value}`;\n        if (!!filtres.sortby.value)\n            url += `&sort_by=${filtres.sortby.value}`;\n        axios.get(url)\n            .then(response => {\n                dispatch(movies(response.data.results));\n            })\n            .catch(err => console.log(err))\n    }\n}"]},"metadata":{},"sourceType":"module"}