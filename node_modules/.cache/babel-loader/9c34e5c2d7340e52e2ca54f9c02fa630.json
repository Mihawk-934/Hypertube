{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap'; // import axios from 'axios';\n// import Video from './Video/Video';\n// import Slider from './Slider/Slider';\n// import Presentation from './Presentation/Presentation';\n\nimport './Movie.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass MovieId extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n\n    this.infoMovie = () => {// this.setState({id: this.props.match.params.id}, () => {\n      //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos,credits&language=fr&include_adult=false&page=1`)\n      //         .then(response => \n      //             this.setState({movie : response.data, genre : response.data.genres, years: response.data.release_date.substr(0, 4)}, console.log(response.data))\n      //         )\n      //         .catch(error => console.log(error));\n      //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`)\n      //         .then(response => {\n      //             let acteurs = response.data.cast.splice(0, 4);\n      //             acteurs = acteurs.map(acteur => {\n      //                 return {\n      //                     ...acteur,\n      //                     img: true\n      //                 }\n      //             })\n      //             this.setState({acteurs: acteurs})\n      //         })\n      //         .catch(err => console.log(err))\n      //     window.scrollTo(0, 0);\n      // });\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    Aos.init();\n    this._isMounted = true;\n    if (this._isMounted) this.props.movieData();\n  }\n\n  componentDidUpdate(prevProps) {// if (this.props.match.params.id !== prevProps.match.params.id)\n    // this.infoMovie();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let movieBackdropStyles = null; // if (!!this.state.movie.backdrop_path) {\n    //     movieBackdropStyles = {\n    //         backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n    //         backgroundRepeat: 'no-repeat',\n    //         backgroundSize:'cover',\n    //         minHeight:'100vh',\n    //         backgroundColor: 'black',\n    //         backgroundPosition:'center' \n    //     };\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      style: movieBackdropStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-aos\": \"flip-left\",\n      \"data-aos-duration\": \"2000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    errorServor: state.auth.errorServor,\n    registerSuccess: state.auth.registerSuccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    movieData: () => dispatch(actions.movieData())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MovieId));","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx"],"names":["React","Component","withRouter","Container","Aos","connect","actions","MovieId","_isMounted","infoMovie","submit","e","preventDefault","componentDidMount","init","props","movieData","componentDidUpdate","prevProps","componentWillUnmount","render","movieBackdropStyles","mapStateToProps","state","errorServor","auth","registerSuccess","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;AACA;AACA;AACA;;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,kBAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BO,UAD4B,GACf,KADe;;AAAA,SAqB5BC,SArB4B,GAqBhB,MAAM,CACd;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA3C2B;;AAAA,SA6C5BC,MA7C4B,GA6ClBC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF;AACH,KA/C2B;AAAA;;AAI5BC,EAAAA,iBAAiB,GAAI;AACjBT,IAAAA,GAAG,CAACU,IAAJ;AACA,SAAKN,UAAL,GAAkB,IAAlB;AACA,QAAI,KAAKA,UAAT,EAEI,KAAKO,KAAL,CAAWC,SAAX;AACP;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa,CAC3B;AACI;AACP;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKX,UAAL,GAAkB,KAAlB;AACH;;AA8BDY,EAAAA,MAAM,GAAI;AACN,QAAIC,mBAAmB,GAAG,IAA1B,CADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAEA,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,kBAAS,WAAd;AAA0B,2BAAkB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAgBH;;AA9E2B;;AA+E/B;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD,WADnB;AAELE,IAAAA,eAAe,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAFvB,GAAP;AAID,CALH;;AAOE,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHZ,IAAAA,SAAS,EAAE,MAAMY,QAAQ,CAACtB,OAAO,CAACU,SAAR,EAAD;AADtB,GAAP;AAGH,CAJC;;AAMF,eAAed,UAAU,CAACG,OAAO,CAACiB,eAAD,EAAkBK,kBAAlB,CAAP,CAA8CpB,OAA9C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n// import axios from 'axios';\n// import Video from './Video/Video';\n// import Slider from './Slider/Slider';\n// import Presentation from './Presentation/Presentation';\nimport './Movie.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\n\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/index'\n\nclass MovieId extends Component {\n    _isMounted = false;\n    \n\n    componentDidMount () {\n        Aos.init();\n        this._isMounted = true;\n        if (this._isMounted)\n\n            this.props.movieData();\n    };\n\n    componentDidUpdate (prevProps) {\n        // if (this.props.match.params.id !== prevProps.match.params.id)\n            // this.infoMovie();\n    };\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    };\n\n    infoMovie = () => {\n        // this.setState({id: this.props.match.params.id}, () => {\n        //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos,credits&language=fr&include_adult=false&page=1`)\n        //         .then(response => \n        //             this.setState({movie : response.data, genre : response.data.genres, years: response.data.release_date.substr(0, 4)}, console.log(response.data))\n        //         )\n                \n        //         .catch(error => console.log(error));\n        //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`)\n        //         .then(response => {\n        //             let acteurs = response.data.cast.splice(0, 4);\n        //             acteurs = acteurs.map(acteur => {\n        //                 return {\n        //                     ...acteur,\n        //                     img: true\n        //                 }\n        //             })\n        //             this.setState({acteurs: acteurs})\n        //         })\n        //         .catch(err => console.log(err))\n        //     window.scrollTo(0, 0);\n        // });\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n    };\n\n    render () { \n        let movieBackdropStyles = null;\n        // if (!!this.state.movie.backdrop_path) {\n        //     movieBackdropStyles = {\n        //         backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n        //         backgroundRepeat: 'no-repeat',\n        //         backgroundSize:'cover',\n        //         minHeight:'100vh',\n        //         backgroundColor: 'black',\n        //         backgroundPosition:'center' \n        //     };\n        // }\n\n        return (\n            <div className=\"Page\" style={movieBackdropStyles}>\n                <Container className='Container'>\n                    <div data-aos=\"flip-left\" data-aos-duration=\"2000\">\n                        {/* {this.state.movie && <Presentation\n                        movie={this.state.movie}\n                        youtubeKey={this.state.youtubeKey}\n                        years={this.state.years}\n                        acteurs={this.state.movie.credits.cast} \n                        genre={this.state.genre}/>}\n                        {this.state.youtubeKey && <Video id={this.state.youtubeKey}/>} */}\n                        {/* <Slider idMovie={this.state.id}/> */}\n                    </div>\n                </Container>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n      errorServor: state.auth.errorServor,\n      registerSuccess: state.auth.registerSuccess\n    };\n  };\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n        movieData: () => dispatch(actions.movieData())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (MovieId));\n"]},"metadata":{},"sourceType":"module"}