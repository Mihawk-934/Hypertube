{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\nimport axios from 'axios';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      page: 1,\n      hasMore: true,\n      nbPage: 0\n    };\n\n    this.newMovie = () => {\n      if (this.state.nbPage !== 0 && this.state.page > this.state.nbPage) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      } //action requete.\n      //recuperer nbPage\n\n\n      thi;\n      axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=1e32f5c452c2267d5367589e9864ab1c&language=fr&page=${this.state.page}`).then(response => {\n        this.setState({\n          nbPage: response.data.total_pages\n        }, () => {\n          console.log(response);\n          this.setState(prevState => ({\n            movies: [...this.state.movies, ...response.data.results],\n            page: prevState.page + 1\n          }));\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.newMovie();\n  }\n\n  render() {\n    let movies = null;\n    if (this.state.movies !== null && this.state.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.state.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n    if (this.state.movies.length === 0) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.state.movies.length // next={this.props.popular(this.props.page)}\n      ,\n      next: this.newMovie,\n      hasMore: this.state.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 58\n        }\n      }, \"Yay! Vous avez tout vu\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.filtres.page,\n    hasMore: state.filtres.hasMore,\n    movies: state.filtres.movies,\n    nbPage: state.filtres.nbPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: page => dispatch(actions.popular(page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","InfiniteScroll","connect","MovieItems","actions","axios","MoviesList","state","movies","page","hasMore","nbPage","newMovie","setState","thi","get","then","response","data","total_pages","console","log","prevState","results","catch","err","componentDidMount","render","length","clicked","color","textAlign","mapStateToProps","filtres","mapDispatchToProps","dispatch","popular"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nimport axios from 'axios';\n\nclass MoviesList extends Component {\n\n  state = {\n    movies: [],\n    page: 1,\n    hasMore: true,\n    nbPage: 0\n  }\n  componentDidMount () {\n    this.newMovie();\n  }\n\n  newMovie = () => {\n    if (this.state.nbPage !== 0 && this.state.page > this.state.nbPage) {\n      this.setState({ hasMore: false });\n      return;\n    }\n    //action requete.\n    //recuperer nbPage\n    thi\n    axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=1e32f5c452c2267d5367589e9864ab1c&language=fr&page=${this.state.page}`)\n      .then(response => {\n        this.setState({ nbPage: response.data.total_pages }, () => {\n        console.log(response)\n          this.setState(prevState => ({movies: [...this.state.movies, ...response.data.results], page: prevState.page + 1}));\n        });\n      })\n      .catch(err => { console.log(err)})\n  };\n\n  render() {\n    let movies = null;\n    if (this.state.movies !== null && this.state.movies.length > 0) \n      movies = <MovieItems movies={this.state.movies} clicked={() => this.clicked()}/>\n    if (this.state.movies.length === 0)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat.</p>\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength={this.state.movies.length}\n          // next={this.props.popular(this.props.page)}\n          next={this.newMovie}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! Vous avez tout vu</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.filtres.page,\n    hasMore: state.filtres.hasMore,\n    movies: state.filtres.movies,\n    nbPage: state.filtres.nbPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: (page) => dispatch(actions.popular(page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);"]},"metadata":{},"sourceType":"module"}