{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/Sidebar/SearchBar/SearchBar.jsx\";\nimport React, { Component } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles'; // import SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    color: 'white',\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'white'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n}));\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSearchChange = e => {\n      this.props.actionTextSearch(e.target.value);\n    };\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputBase, {\n      placeholder: \"Search\\u2026\",\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      },\n      onChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    textSearch: state.filtres.textSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actionTextSearch: textSearch => dispatch(actions.textSearch(textSearch))\n  };\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/Sidebar/SearchBar/SearchBar.jsx"],"names":["React","Component","InputBase","fade","makeStyles","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","color","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","SearchBar","handleSearchChange","e","props","actionTextSearch","target","value","render","classes","root","input","mapStateToProps","state","textSearch","filtres","mapDispatchToProps","dispatch","actions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,0BAAjC,C,CACA;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACpCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,YAAY,EAAEH,KAAK,CAACI,KAAN,CAAYD,YAFpB;AAGNE,IAAAA,eAAe,EAAER,IAAI,CAACG,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAHf;AAIN,eAAW;AACTH,MAAAA,eAAe,EAAER,IAAI,CAACG,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADZ,KAJL;AAONC,IAAAA,UAAU,EAAE,CAPN;AAQNC,IAAAA,KAAK,EAAE,MARD;AASN,KAACV,KAAK,CAACW,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BH,MAAAA,UAAU,EAAET,KAAK,CAACa,OAAN,CAAc,CAAd,CADgB;AAE5BH,MAAAA,KAAK,EAAE;AAFqB;AATxB,GAD4B;AAepCI,EAAAA,UAAU,EAAE;AACVJ,IAAAA,KAAK,EAAEV,KAAK,CAACa,OAAN,CAAc,CAAd,CADG;AAEVE,IAAAA,KAAK,EAAC,OAFI;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVd,IAAAA,QAAQ,EAAE,UAJA;AAKVe,IAAAA,aAAa,EAAE,MALL;AAMVC,IAAAA,OAAO,EAAE,MANC;AAOVC,IAAAA,UAAU,EAAE,QAPF;AAQVC,IAAAA,cAAc,EAAE;AARN,GAfwB;AAyBpCC,EAAAA,SAAS,EAAE;AACTN,IAAAA,KAAK,EAAE;AADE,GAzByB;AA4BpCO,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAEvB,KAAK,CAACa,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADC;AAEVW,IAAAA,UAAU,EAAExB,KAAK,CAACyB,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAFF;AAGVhB,IAAAA,KAAK,EAAE,MAHG;AAIV,KAACV,KAAK,CAACW,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,KAAK,EAAE,GADqB;AAE5B,iBAAW;AACTA,QAAAA,KAAK,EAAE;AADE;AAFiB;AAJpB;AA5BwB,CAAL,CAAN,CAA5B;;AAyCA,MAAMiB,SAAN,SAAwBhC,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAEhCiC,kBAFgC,GAEVC,CAAD,IAAO;AAC1B,WAAKC,KAAL,CAAWC,gBAAX,CAA4BF,CAAC,CAACG,MAAF,CAASC,KAArC;AACD,KAJ+B;AAAA;;AAMhCC,EAAAA,MAAM,GAAI;AACR,UAAMC,OAAO,GAAGpC,SAAS,EAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAEoC,OAAO,CAAClC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,cADd;AAEE,MAAA,OAAO,EAAE;AACPmC,QAAAA,IAAI,EAAED,OAAO,CAACd,SADP;AAEPgB,QAAAA,KAAK,EAAEF,OAAO,CAACb;AAFR,OAFX;AAME,MAAA,QAAQ,EAAE,KAAKM,kBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADF;AAeD;;AAvB+B;;AAwBjC;;AAED,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACHC,IAAAA,UAAU,EAAGD,KAAK,CAACE,OAAN,CAAcD;AADxB,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHZ,IAAAA,gBAAgB,EAAGS,UAAD,IAAgBG,QAAQ,CAACC,OAAO,CAACJ,UAAR,CAAmBA,UAAnB,CAAD;AADvC,GAAP;AAGD,CAJD;;AAMA,eAAeb,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n// import SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n   search: {\n     position: 'relative',\n     borderRadius: theme.shape.borderRadius,\n     backgroundColor: fade(theme.palette.common.white, 0.15),\n     '&:hover': {\n       backgroundColor: fade(theme.palette.common.white, 0.25),\n     },\n     marginLeft: 0,\n     width: '100%',\n     [theme.breakpoints.up('sm')]: {\n       marginLeft: theme.spacing(1),\n       width: 'auto',\n     },\n   },\n   searchIcon: {\n     width: theme.spacing(7),\n     color:'white',\n     height: '100%',\n     position: 'absolute',\n     pointerEvents: 'none',\n     display: 'flex',\n     alignItems: 'center',\n     justifyContent: 'center',\n   },\n   inputRoot: {\n     color: 'white',\n   },\n   inputInput: {\n     padding: theme.spacing(1, 1, 1, 7),\n     transition: theme.transitions.create('width'),\n     width: '100%',\n     [theme.breakpoints.up('sm')]: {\n       width: 120,\n       '&:focus': {\n         width: 200,\n       },\n     },\n   },\n }));\n\nclass SearchBar extends Component {\n  \n  handleSearchChange = (e) => {\n    this.props.actionTextSearch(e.target.value);\n  };\n\n  render () {\n    const classes = useStyles();\n    return (\n      <div className={classes.search}>\n      {/* <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div> */}\n      <InputBase\n        placeholder=\"Searchâ€¦\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        onChange={this.handleSearchChange}\n      />\n    </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n      textSearch : state.filtres.textSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      actionTextSearch: (textSearch) => dispatch(actions.textSearch(textSearch)),\n  };\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}