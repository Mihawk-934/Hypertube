{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport { withRouter } from 'react-router-dom';\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n  componentDidMount() {\n    this.props.popular();\n  }\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.props.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n    if (this.props.movies.length === 0) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat pour: \\\"\", this.props.textSearch, \"\\\".\");\n    let asyncPagination = null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: \"1000\",\n      next: asyncPagination // hasMore={this.state.hasMore}\n      ,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 58\n        }\n      }, \"Yay! You have seen it all\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.filtres.movies\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: () => dispatch(actions.popular()),\n    actionTextSearch: () => dispatch(actions.textSearch(''))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MoviesList));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","InfiniteScroll","connect","withRouter","MovieItems","actions","MoviesList","componentDidMount","props","popular","render","movies","length","clicked","color","textSearch","asyncPagination","textAlign","mapStateToProps","state","filtres","mapDispatchToProps","dispatch","actionTextSearch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;;AAGA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAEjCO,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,OAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,IAAb;AACA,QAAI,KAAKH,KAAL,CAAWG,MAAX,KAAsB,IAAtB,IAA8B,KAAKH,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,GAA2B,CAA7D,EACED,MAAM,gBAAG,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAA/B;AAAuC,MAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACF,QAAI,KAAKL,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,KAA6B,CAAjC,EACED,MAAM,gBAAG;AAAG,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAwD,KAAKN,KAAL,CAAWO,UAAnE,QAAT;AAEF,QAAIC,eAAe,GAAG,IAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAC,MADb;AAEE,MAAA,IAAI,EAAEA,eAFR,CAGE;AAHF;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAKE,MAAA,UAAU,eAAE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAnC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGN,MANH,CADF,CADF;AAYD;;AA3BgC;;AA8BnC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,MAAM,EAAEQ,KAAK,CAACC,OAAN,CAAcT;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA,OAAO,EAAE,MAAMa,QAAQ,CAACjB,OAAO,CAACI,OAAR,EAAD,CADlB;AAELc,IAAAA,gBAAgB,EAAE,MAAMD,QAAQ,CAACjB,OAAO,CAACU,UAAR,CAAmB,EAAnB,CAAD;AAF3B,GAAP;AAID,CALD;;AAOA,eAAeZ,UAAU,CAACD,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,UAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport { withRouter } from 'react-router-dom';\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\n\nclass MoviesList extends Component {\n\n  componentDidMount () {\n    this.props.popular();\n  }\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) \n      movies = <MovieItems movies={this.props.movies} clicked={() => this.clicked()}/>\n    if (this.props.movies.length === 0)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat pour: \"{this.props.textSearch}\".</p>\n    \n    let asyncPagination = null;\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength='1000'\n          next={asyncPagination}\n          // hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! You have seen it all</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.filtres.movies,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: () => dispatch(actions.popular()),\n    actionTextSearch: () => dispatch(actions.textSearch(''))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MoviesList));"]},"metadata":{},"sourceType":"module"}