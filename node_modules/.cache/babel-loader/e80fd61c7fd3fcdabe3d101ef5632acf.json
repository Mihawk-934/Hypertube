{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\nimport axios from 'axios';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: 0,\n      hasMore: true\n    };\n\n    this.newMovie = () => {\n      if (this.props.nbPage !== 0 && this.state.page > this.props.nbPage) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      }\n\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }), () => {\n        this.props.popular(this.state.page);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.newMovie();\n  }\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.props.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n    if (this.props.movies.length === 0) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.movies.length // next={this.props.popular(this.props.page)}\n      ,\n      next: this.newMovie,\n      hasMore: this.state.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 58\n        }\n      }, \"Yay! Vous avez tout vu\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.filtres.page,\n    hasMore: state.filtres.hasMore,\n    movies: state.filtres.movies,\n    nbPage: state.filtres.nbPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: page => dispatch(actions.popular(page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","InfiniteScroll","connect","MovieItems","actions","axios","MoviesList","state","page","hasMore","newMovie","props","nbPage","setState","prevState","popular","componentDidMount","render","movies","length","clicked","color","textAlign","mapStateToProps","filtres","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nimport axios from 'axios';\n\nclass MoviesList extends Component {\n\n  state = {\n    page: 0,\n    hasMore: true,\n  }\n  \n  componentDidMount () {\n    this.newMovie();\n  }\n\n  newMovie = () => {\n    if (this.props.nbPage !== 0 && this.state.page > this.props.nbPage) {\n      this.setState({ hasMore: false });\n      return;\n    }\n    this.setState(prevState => ({page: prevState.page + 1}), ()=> {\n      this.props.popular(this.state.page);\n    });\n  };\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) \n      movies = <MovieItems movies={this.props.movies} clicked={() => this.clicked()}/>\n    if (this.props.movies.length === 0)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat.</p>\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength={this.props.movies.length}\n          // next={this.props.popular(this.props.page)}\n          next={this.newMovie}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! Vous avez tout vu</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.filtres.page,\n    hasMore: state.filtres.hasMore,\n    movies: state.filtres.movies,\n    nbPage: state.filtres.nbPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: (page) => dispatch(actions.popular(page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);"]},"metadata":{},"sourceType":"module"}