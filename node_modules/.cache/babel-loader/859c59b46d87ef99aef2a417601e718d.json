{"ast":null,"code":"// import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport firebase from '../../fire';\nexport const errorServor = error => {\n  return {\n    type: actionTypes.AUTH_ERROR,\n    error: error\n  };\n};\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('id');\n  localStorage.removeItem('token');\n  localStorage.removeItem('name');\n  localStorage.removeItem('photo');\n  localStorage.removeItem('email');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(authLogout());\n    }, expirationTime * 100000000000);\n  };\n};\nexport const registerSuccess = value => {\n  return {\n    type: actionTypes.REGISTER_SUCCESS\n  };\n};\nexport const initRegisterSuccess = () => {\n  return {\n    type: actionTypes.INIT_REGISTER_SUCCESS\n  };\n};\nexport const auth = (email, password, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData).then(response => {\n      console.log('response    ', response);\n      dispatch(errorServor('Votre compte viens d\\'etre creer, vous allez etre rediriger dans quelques instant'));\n      dispatch(registerSuccess(true));\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      setTimeout(() => {\n        history.push('/home');\n      }, 3000);\n    }).catch(err => {\n      console.log('error   ', err);\n      dispatch(errorServor('Cet email existe Deja!'));\n      dispatch(authFail(err.response.data.error.message));\n    });\n  };\n};\nexport const socialTwitter = (provider, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    firebase.auth().signInWithPopup(provider).then(response => {\n      console.log('socailllAUUUUTHHHHH', response);\n      console.log('33', response.user);\n      localStorage.setItem('id', response.user.uid);\n      localStorage.setItem('token', response.credential.accessToken);\n      localStorage.setItem('name', response.user.displayName);\n      localStorage.setItem('photo', response.additionalUserInfo.profile.profile_image_url);\n      localStorage.setItem('email', response.user.email);\n      localStorage.setItem('show', true);\n      dispatch(authSuccess(response.credential.idToken, response.user.uid));\n      history.push('/home');\n    }).catch(err => {\n      console.log('eerrrr msg = ', err.message);\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const socialAuth = (provider, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    firebase.auth().signInWithPopup(provider).then(response => {\n      console.log('socailllAUUUUTHHHHH', response);\n      console.log('33', response.user);\n      localStorage.setItem('id', response.user.uid);\n      localStorage.setItem('token', response.credential.accessToken);\n      localStorage.setItem('name', response.user.displayName);\n      localStorage.setItem('photo', response.user.photoURL);\n      localStorage.setItem('email', response.user.email);\n      localStorage.setItem('show', true);\n      dispatch(authSuccess(response.credential.idToken, response.user.uid));\n      history.push('/home');\n    }).catch(err => {\n      console.log('eerrrr msg = ', err.message);\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const authLog = (email, password, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData).then(response => {\n      console.log('authlogAction', response);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('id', response.data.localId);\n      localStorage.setItem('show', true);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n      history.push('/home');\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error.message));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    localStorage.removeItem('show');\n    const token = localStorage.getItem('token');\n    const id = localStorage.getItem('id');\n    if (!token) dispatch(authLogout());else dispatch(authSuccess(token, id));\n  };\n};","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/actions/auth.js"],"names":["actionTypes","axios","firebase","errorServor","error","type","AUTH_ERROR","authStart","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","AUTH_FAILED","authLogout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","registerSuccess","value","REGISTER_SUCCESS","initRegisterSuccess","INIT_REGISTER_SUCCESS","auth","email","password","history","authData","returnSecureToken","post","then","response","console","log","data","localId","push","catch","err","message","socialTwitter","provider","signInWithPopup","user","setItem","uid","credential","accessToken","displayName","additionalUserInfo","profile","profile_image_url","socialAuth","photoURL","authLog","expiresIn","authCheckState","getItem","id"],"mappings":"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","sourcesContent":["// import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport firebase from '../../fire';\n\n\nexport const errorServor = (error) => {\n    return {\n        type: actionTypes.AUTH_ERROR,\n        error: error\n    };\n};\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        error: error\n    };\n};\n \nexport const authLogout = () => {\n    localStorage.removeItem('id')\n    localStorage.removeItem('token')\n    localStorage.removeItem('name')\n    localStorage.removeItem('photo')\n    localStorage.removeItem('email')\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(()=>{\n            dispatch(authLogout())\n        },expirationTime*100000000000)\n    }\n}\n\nexport const registerSuccess = (value) => {\n    return {\n        type: actionTypes.REGISTER_SUCCESS\n    };\n}\n\nexport const initRegisterSuccess = () => {\n    return {\n        type: actionTypes.INIT_REGISTER_SUCCESS\n    };\n}\n\nexport const auth = (email, password, history) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData)\n        .then(response => {\n            console.log('response    ',response)\n            dispatch(errorServor('Votre compte viens d\\'etre creer, vous allez etre rediriger dans quelques instant'));\n            dispatch(registerSuccess(true));\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            setTimeout( () => {\n                history.push('/home')\n            }, 3000);\n        })\n        .catch(err => {\n            console.log('error   ', err)\n            dispatch(errorServor('Cet email existe Deja!'));\n            dispatch(authFail(err.response.data.error.message));\n        })\n    };\n};\n\nexport const socialTwitter = (provider,history) => {\n    return dispatch => {\n        dispatch(authStart());\n        firebase.auth().signInWithPopup(provider)\n        .then(response => {\n            console.log('socailllAUUUUTHHHHH',response)\n            console.log('33',response.user)\n            localStorage.setItem('id', response.user.uid)\n            localStorage.setItem('token', response.credential.accessToken)\n            localStorage.setItem('name', response.user.displayName)\n            localStorage.setItem('photo', response.additionalUserInfo.profile.profile_image_url)\n            localStorage.setItem('email', response.user.email)\n            localStorage.setItem('show', true)\n            dispatch(authSuccess(response.credential.idToken, response.user.uid));\n            history.push('/home');\n        })\n        .catch(err => {\n            console.log('eerrrr msg = ', err.message)\n            dispatch(authFail(err.message));\n        })  \n    };\n}\n\nexport const socialAuth = (provider,history) => {\n    return dispatch => {\n        dispatch(authStart());\n        firebase.auth().signInWithPopup(provider)\n        .then(response => {\n            console.log('socailllAUUUUTHHHHH',response)\n            console.log('33',response.user)\n            localStorage.setItem('id', response.user.uid)\n            localStorage.setItem('token', response.credential.accessToken)\n            localStorage.setItem('name', response.user.displayName)\n            localStorage.setItem('photo', response.user.photoURL)\n            localStorage.setItem('email', response.user.email)\n            localStorage.setItem('show', true)\n            dispatch(authSuccess(response.credential.idToken, response.user.uid));\n            history.push('/home');  \n        })\n        .catch(err => {\n            console.log('eerrrr msg = ', err.message)\n            dispatch(authFail(err.message));\n        })  \n    };\n}\n\nexport const authLog = (email, password, history) => {\n\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData)\n        .then(response => {\n            console.log('authlogAction',response);\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('id', response.data.localId)\n            localStorage.setItem('show', true)\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn));\n            history.push('/home');\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.error.message));\n        })\n    };\n};\n\nexport const authCheckState = () => {\n    return (dispatch) => {\n        localStorage.removeItem('show')\n        const token = localStorage.getItem('token');\n        const id = localStorage.getItem('id')\n        if (!token)\n            dispatch(authLogout());\n        else \n            dispatch(authSuccess(token,id));\n    }\n}"]},"metadata":{},"sourceType":"module"}