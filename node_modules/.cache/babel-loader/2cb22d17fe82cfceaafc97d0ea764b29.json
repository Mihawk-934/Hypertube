{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/Login/AuthPhone/AuthPhone.jsx\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport firebase from '../../../../fire';\nimport * as regex from './RegexPhone';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MyInput from '../../../../components/MyInput/MyInput';\nimport MyButton from '../../../../components/MyButton/MyButton';\n\nclass Phone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: null,\n      codeVerification: null,\n      error: {},\n      error1: {},\n      errorCatch: '',\n      disable: true,\n      disable1: true,\n      userId: null,\n      show: false,\n      codeError: null\n    };\n\n    this.handleFormValidcode = () => {\n      let store = '';\n      const error = { ...this.state.error1\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable1: false\n      }) : this.setState({\n        disable1: true\n      }, () => {\n        console.log(this.state.disable1);\n      });\n    };\n\n    this.handleFormValidphone = () => {\n      let store = '';\n      const error = { ...this.state.error\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable: false\n      }) : this.setState({\n        disable: true\n      }, () => {\n        console.log(this.state.disable);\n      });\n    };\n\n    this.handleInputValid = (name_input, value_input) => {\n      let error = { ...this.state.error\n      };\n      let error1 = { ...this.state.error1\n      };\n\n      switch (name_input) {\n        case 'phone':\n          value_input.match(regex.phoneNumber) ? error[name_input] = '' : error[name_input] = \"*votre numero nest pas valid\";\n          break;\n\n        case 'codeVerification':\n          value_input.match(regex.codeVerification) && value_input.length === 6 ? error1[name_input] = '' : error1[name_input] = \"*mauvais format 5chiffre sont attendues\";\n          break;\n\n        default:\n          console.log(\"NUMBER NOT FOUND\");\n      }\n\n      if (name_input === 'phone') this.setState({\n        error: error\n      }, () => {\n        this.handleFormValidphone();\n      });else if (name_input === 'codeVerification') this.setState({\n        error1: error1\n      }, () => {\n        this.handleFormValidcode();\n      });\n    };\n\n    this.handleInput = event => {\n      console.log('456456');\n      const nameInput = event.target.id;\n      const valueInput = event.target.value;\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        this.handleInputValid(nameInput, valueInput);\n      });\n    };\n\n    this.sendCode = e => {\n      e.preventDefault();\n      firebase.auth().languageCode = 'fr';\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      let phoneNumber = this.state.phone;\n      let appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        this.setState({\n          show: true\n        });\n        window.confirmationResult = confirmationResult;\n      }).catch(error => {\n        this.setState({\n          errorCatch: error.message\n        });\n      });\n    };\n\n    this.receiveCode = e => {\n      e.preventDefault();\n      const verificationId = this.state.codeVerification;\n      window.confirmationResult.confirm(verificationId).then(result => {\n        localStorage.setItem('id', result.user.uid);\n        localStorage.setItem('token', result.user.ma);\n        localStorage.setItem('show', true);\n        this.props.onPhone(result.user.ma, result.user.uid);\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          codeError: 'Error'\n        });\n      });\n    };\n  }\n\n  render() {\n    let msgCatch;\n    if (this.state.errorCatch && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 24\n      }\n    }, \"Trop d'essai votre compte a \\xE9t\\xE9 temporairement suspendu. Reesayer plus tard\");\n    if (this.state.codeError) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }\n    }, \"le code ne coresspond pas a celui qui vous a \\xE9t\\xE9 envoyer veuillez ressayer\");\n    if (this.state.show && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 24\n      }\n    }, \"vous recevrez dans quelques instants un code par SMS a taper sur le formulaire ci-dessous\");\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyInput, {\n      label: this.state.show === false ? \"Connexion via Smarthpone\" : \"Entrer Votre Code\",\n      id: this.state.show === false ? \"phone\" : \"codeVerification\",\n      type: \"tel\",\n      placeholder: this.state.show === false ? \"Tapez votre numero de mobile. ex:+33610122325\" : \"Entrer le code de verification\",\n      error: this.state.show === false ? this.state.error.phone : this.state.error1.codeVerification,\n      changed: this.handleInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(MyButton, {\n      id: \"recaptcha-container\",\n      disabled: this.state.disable,\n      clicked: this.state.show === false ? this.sendCode : this.receiveCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), msgCatch);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Phone));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/Login/AuthPhone/AuthPhone.jsx"],"names":["React","Component","Form","firebase","regex","withRouter","actions","connect","MyInput","MyButton","Phone","state","phone","codeVerification","error","error1","errorCatch","disable","disable1","userId","show","codeError","handleFormValidcode","store","values","Object","key","keys","length","setState","console","log","handleFormValidphone","handleInputValid","name_input","value_input","match","phoneNumber","handleInput","event","nameInput","target","id","valueInput","value","sendCode","e","preventDefault","auth","languageCode","window","recaptchaVerifier","RecaptchaVerifier","size","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","message","receiveCode","verificationId","confirm","result","localStorage","setItem","user","uid","ma","props","onPhone","history","push","render","msgCatch","onSubmit","mapDispatchToProps","dispatch","token","authSuccess"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,iCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,QAAP,MAAqB,0CAArB;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAC,IADF;AAEJC,MAAAA,gBAAgB,EAAC,IAFb;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,MAAM,EAAC,EAJH;AAKJC,MAAAA,UAAU,EAAC,EALP;AAMJC,MAAAA,OAAO,EAAC,IANJ;AAOJC,MAAAA,QAAQ,EAAC,IAPL;AAQJC,MAAAA,MAAM,EAAE,IARJ;AASJC,MAAAA,IAAI,EAAE,KATF;AAUJC,MAAAA,SAAS,EAAC;AAVN,KADkB;;AAAA,SAc1BC,mBAd0B,GAcJ,MAAM;AACxB,UAAIC,KAAK,GAAG,EAAZ;AACA,YAAMT,KAAK,GAAG,EAAC,GAAG,KAAKH,KAAL,CAAWI;AAAf,OAAd;AACA,YAAMS,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcV,KAAd,CAAf;;AACA,WAAK,MAAMY,GAAX,IAAkBF,MAAlB,EACID,KAAK,IAAIG,GAAT;;AACJD,MAAAA,MAAM,CAACE,IAAP,CAAYb,KAAZ,EAAmBc,MAAnB,KAA8B,CAA9B,IAAmCL,KAAK,CAACK,MAAN,KAAiB,CAApD,GAAwD,KAAKC,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAC;AAAV,OAAd,CAAxD,GAA0F,KAAKW,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAC;AAAV,OAAd,EAA8B,MAAI;AAACY,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWO,QAAvB;AAAiC,OAApE,CAA1F;AACH,KArByB;;AAAA,SAuB1Bc,oBAvB0B,GAuBH,MAAM;AACzB,UAAIT,KAAK,GAAG,EAAZ;AACA,YAAMT,KAAK,GAAG,EAAC,GAAG,KAAKH,KAAL,CAAWG;AAAf,OAAd;AACA,YAAMU,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcV,KAAd,CAAf;;AACA,WAAK,MAAMY,GAAX,IAAkBF,MAAlB,EACID,KAAK,IAAIG,GAAT;;AACJD,MAAAA,MAAM,CAACE,IAAP,CAAYb,KAAZ,EAAmBc,MAAnB,KAA8B,CAA9B,IAAmCL,KAAK,CAACK,MAAN,KAAiB,CAApD,GAAwD,KAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAC;AAAT,OAAd,CAAxD,GAAyF,KAAKY,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAC;AAAT,OAAd,EAA6B,MAAI;AAACa,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWM,OAAvB;AAAgC,OAAlE,CAAzF;AACH,KA9ByB;;AAAA,SAgC1BgB,gBAhC0B,GAgCP,CAACC,UAAD,EAAYC,WAAZ,KAA4B;AAC3C,UAAIrB,KAAK,GAAG,EAAC,GAAG,KAAKH,KAAL,CAAWG;AAAf,OAAZ;AACA,UAAIC,MAAM,GAAG,EAAC,GAAG,KAAKJ,KAAL,CAAWI;AAAf,OAAb;;AACA,cAAOmB,UAAP;AACI,aAAK,OAAL;AAAcC,UAAAA,WAAW,CAACC,KAAZ,CAAkBhC,KAAK,CAACiC,WAAxB,IAAuCvB,KAAK,CAACoB,UAAD,CAAL,GAAkB,EAAzD,GAA8DpB,KAAK,CAACoB,UAAD,CAAL,GAAoB,8BAAlF;AACV;;AACJ,aAAK,kBAAL;AAAwBC,UAAAA,WAAW,CAACC,KAAZ,CAAkBhC,KAAK,CAACS,gBAAxB,KAA6CsB,WAAW,CAACP,MAAZ,KAAuB,CAApE,GAAwEb,MAAM,CAACmB,UAAD,CAAN,GAAmB,EAA3F,GAAgGnB,MAAM,CAACmB,UAAD,CAAN,GAAqB,yCAArH;AACnB;;AACL;AACIJ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AANR;;AAQA,UAAIG,UAAU,KAAK,OAAnB,EACI,KAAKL,QAAL,CAAc;AAACf,QAAAA,KAAK,EAACA;AAAP,OAAd,EAA6B,MAAM;AAAC,aAAKkB,oBAAL;AAA4B,OAAhE,EADJ,KAEK,IAAIE,UAAU,KAAK,kBAAnB,EACD,KAAKL,QAAL,CAAc;AAACd,QAAAA,MAAM,EAACA;AAAR,OAAd,EAA+B,MAAM;AAAC,aAAKO,mBAAL;AAA2B,OAAjE;AACP,KA/CyB;;AAAA,SAiD1BgB,WAjD0B,GAiDXC,KAAD,IAAW;AACrBT,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,YAAMS,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA/B;AACA,YAAMC,UAAU,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAAhC;AACA,WAAKf,QAAL,CAAc;AAAC,SAACU,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAkBH,KAAK,CAACE,MAAN,CAAaG;AAAhC,OAAd,EACI,MAAM;AAAC,aAAKX,gBAAL,CAAsBO,SAAtB,EAAgCG,UAAhC;AACV,OAFD;AAGH,KAxDyB;;AAAA,SA0D1BE,QA1D0B,GA0DdC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA5C,MAAAA,QAAQ,CAAC6C,IAAT,GAAgBC,YAAhB,GAA+B,IAA/B;AACAC,MAAAA,MAAM,CAACC,iBAAP,GAA2B,IAAIhD,QAAQ,CAAC6C,IAAT,CAAcI,iBAAlB,CAAoC,qBAApC,EAC3B;AACGC,QAAAA,IAAI,EAAC;AADR,OAD2B,CAA3B;AAIA,UAAIhB,WAAW,GAAG,KAAK1B,KAAL,CAAWC,KAA7B;AACA,UAAI0C,WAAW,GAAGJ,MAAM,CAACC,iBAAzB;AACAhD,MAAAA,QAAQ,CAAC6C,IAAT,GAAgBO,qBAAhB,CAAsClB,WAAtC,EAAmDiB,WAAnD,EACCE,IADD,CACMC,kBAAkB,IAAI;AACxB,aAAK5B,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAE;AAAR,SAAd;AACA8B,QAAAA,MAAM,CAACO,kBAAP,GAA4BA,kBAA5B;AACF,OAJF,EAIIC,KAJJ,CAIU5C,KAAK,IAAI;AACf,aAAKe,QAAL,CAAc;AAACb,UAAAA,UAAU,EAACF,KAAK,CAAC6C;AAAlB,SAAd;AACH,OAND;AAOH,KA1EyB;;AAAA,SA4E1BC,WA5E0B,GA4EZd,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMc,cAAc,GAAG,KAAKlD,KAAL,CAAWE,gBAAlC;AACAqC,MAAAA,MAAM,CAACO,kBAAP,CACCK,OADD,CACSD,cADT,EAECL,IAFD,CAEMO,MAAM,IAAI;AACZC,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA0BF,MAAM,CAACG,IAAP,CAAYC,GAAtC;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACG,IAAP,CAAYE,EAA1C;AACAJ,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,IAA7B;AACA,aAAKI,KAAL,CAAWC,OAAX,CAAmBP,MAAM,CAACG,IAAP,CAAYE,EAA/B,EAAkCL,MAAM,CAACG,IAAP,CAAYC,GAA9C;AACA,aAAKE,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACH,OARD,EASCd,KATD,CASO5C,KAAK,IAAI;AACZ,aAAKe,QAAL,CAAc;AAACR,UAAAA,SAAS,EAAC;AAAX,SAAd;AACH,OAXD;AAYH,KA3FyB;AAAA;;AA6F1BoD,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAJ;AAEA,QAAI,KAAK/D,KAAL,CAAWK,UAAX,IAAyB,KAAKL,KAAL,CAAWU,SAAX,KAAyB,IAAtD,EACIqD,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAAX;AAEJ,QAAI,KAAK/D,KAAL,CAAWU,SAAf,EACIqD,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAAX;AAEJ,QAAI,KAAK/D,KAAL,CAAWS,IAAX,IAAmB,KAAKT,KAAL,CAAWU,SAAX,KAAyB,IAAhD,EACIqD,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAAX;AAEJ,wBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,KAAK,EAAG,KAAKhE,KAAL,CAAWS,IAAX,KAAoB,KAApB,GAA4B,0BAA5B,GAAyD,mBADrE;AAEI,MAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS,IAAX,KAAoB,KAApB,GAA4B,OAA5B,GAAqC,kBAF7C;AAGI,MAAA,IAAI,EAAC,KAHT;AAII,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWS,IAAX,KAAoB,KAApB,GAA4B,+CAA5B,GAA8E,gCAJ/F;AAKI,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWS,IAAX,KAAoB,KAApB,GAA2B,KAAKT,KAAL,CAAWG,KAAX,CAAiBF,KAA5C,GAAoD,KAAKD,KAAL,CAAWI,MAAX,CAAkBF,gBALjF;AAMI,MAAA,OAAO,EAAE,KAAKyB,WANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,qBAAb;AAAmC,MAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAWM,OAAxD;AAAiE,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWS,IAAX,KAAoB,KAApB,GAA4B,KAAKyB,QAAjC,GAA4C,KAAKe,WAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASKc,QATL,CADJ;AAaH;;AAtHyB;;AAyH9B,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHP,IAAAA,OAAO,EAAE,CAACQ,KAAD,EAAQ3D,MAAR,KAAmB0D,QAAQ,CAACvE,OAAO,CAACyE,WAAR,CAAoBD,KAApB,EAA2B3D,MAA3B,CAAD;AADjC,GAAP;AAGH,CAJD;;AAMA,eAAed,UAAU,CAACE,OAAO,CAAC,IAAD,EAAOqE,kBAAP,CAAP,CAAmClE,KAAnC,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap'\nimport firebase from '../../../../fire';\nimport * as regex from './RegexPhone'\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MyInput from '../../../../components/MyInput/MyInput';\nimport MyButton from '../../../../components/MyButton/MyButton';\n\nclass Phone extends Component {\n    state = {\n        phone:null,\n        codeVerification:null,\n        error:{},\n        error1:{},\n        errorCatch:'',\n        disable:true,\n        disable1:true,\n        userId: null,\n        show: false,\n        codeError:null\n    }\n\n    handleFormValidcode = () => { \n        let store = ''; \n        const error = {...this.state.error1};\n        const values = Object.values(error);\n        for (const key of values)\n            store += key;\n        Object.keys(error).length === 1 && store.length === 0 ? this.setState({disable1:false}) : this.setState({disable1:true},()=>{console.log(this.state.disable1)});\n    }\n\n    handleFormValidphone = () => { \n        let store = ''; \n        const error = {...this.state.error};\n        const values = Object.values(error);\n        for (const key of values)\n            store += key;\n        Object.keys(error).length === 1 && store.length === 0 ? this.setState({disable:false}) : this.setState({disable:true},()=>{console.log(this.state.disable)});\n    }\n\n    handleInputValid = (name_input,value_input) => {\n        let error = {...this.state.error};\n        let error1 = {...this.state.error1};\n        switch(name_input){\n            case 'phone': value_input.match(regex.phoneNumber) ? error[name_input]='' : error[name_input] = \"*votre numero nest pas valid\";\n                break;\n            case 'codeVerification':value_input.match(regex.codeVerification) && value_input.length === 6 ? error1[name_input]='' : error1[name_input] = \"*mauvais format 5chiffre sont attendues\";\n                 break;\n            default:\n                console.log(\"NUMBER NOT FOUND\");\n        }\n        if (name_input === 'phone')\n            this.setState({error:error}, () => {this.handleFormValidphone()});\n        else if (name_input === 'codeVerification')    \n            this.setState({error1:error1}, () => {this.handleFormValidcode()}); \n    }\n\n    handleInput = (event) => {\n        console.log('456456')\n        const nameInput = event.target.id;\n        const valueInput = event.target.value;\n        this.setState({[event.target.id]:event.target.value},\n            () => {this.handleInputValid(nameInput,valueInput)    \n        });\n    }\n\n    sendCode = (e) => {  \n        e.preventDefault();\n        firebase.auth().languageCode = 'fr';\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\",\n        {\n           size:\"invisible\"\n        });\n        let phoneNumber = this.state.phone;\n        let appVerifier = window.recaptchaVerifier;\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then(confirmationResult => { \n            this.setState({ show: true })\n            window.confirmationResult = confirmationResult;\n         }).catch(error => {\n            this.setState({errorCatch:error.message})\n        });\n    }\n        \n    receiveCode= (e) => {\n        e.preventDefault();\n        const verificationId = this.state.codeVerification;\n        window.confirmationResult\n        .confirm(verificationId)\n        .then(result => {\n            localStorage.setItem('id',result.user.uid)\n            localStorage.setItem('token', result.user.ma)\n            localStorage.setItem('show', true)\n            this.props.onPhone(result.user.ma,result.user.uid);\n            this.props.history.push('/home')\n        })\n        .catch(error => {\n            this.setState({codeError:'Error'});\n        });\n    }\n\n    render() {\n        let msgCatch;\n\n        if (this.state.errorCatch && this.state.codeError === null)\n            msgCatch = <p>Trop d'essai votre compte a été temporairement suspendu. Reesayer plus tard</p>;\n        \n        if (this.state.codeError)\n            msgCatch = <p>le code ne coresspond pas a celui qui vous a été envoyer veuillez ressayer</p>;\n        \n        if (this.state.show && this.state.codeError === null)\n            msgCatch = <p>vous recevrez dans quelques instants un code par SMS a taper sur le formulaire ci-dessous</p>;\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                <MyInput \n                    label= {this.state.show === false ? \"Connexion via Smarthpone\" : \"Entrer Votre Code\"} \n                    id={this.state.show === false ? \"phone\": \"codeVerification\" }\n                    type=\"tel\"\n                    placeholder={this.state.show === false ? \"Tapez votre numero de mobile. ex:+33610122325\" : \"Entrer le code de verification\"}\n                    error={this.state.show === false? this.state.error.phone : this.state.error1.codeVerification} \n                    changed={this.handleInput}/>\n                <MyButton id=\"recaptcha-container\" disabled={this.state.disable} clicked={this.state.show === false ? this.sendCode : this.receiveCode}/>\n                {msgCatch}\n            </Form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n    };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps) (Phone));\n"]},"metadata":{},"sourceType":"module"}