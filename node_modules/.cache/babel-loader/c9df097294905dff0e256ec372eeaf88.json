{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/containers/Home/Home.jsx\";\nimport React from 'react';\nimport Sidebar from './Sidebar/SideBar';\nimport MoviesList from './MoviesList/MoviesList';\nimport './Home.css';\nimport Animation from './Animation/Animation';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Home = () => {\n  const [animation, setAnimation] = useState(true);\n  const dispatch = useDispatch(); // const Animation = useSelector(state => state.movies.animation);\n\n  const fetchInfiniteScroll = () => dispatch(actions.InfiniteScroll(nameScrolling, page + 1, valueInput, optionSelect));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimation(false);\n    }, 5000);\n  }, []);\n  const Page = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gauche\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Droite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })));\n  const display = animation ? /*#__PURE__*/React.createElement(Animation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }) : Page;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, display);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/containers/Home/Home.jsx"],"names":["React","Sidebar","MoviesList","Animation","useEffect","useState","useSelector","useDispatch","Home","animation","setAnimation","dispatch","fetchInfiniteScroll","actions","InfiniteScroll","nameScrolling","page","valueInput","optionSelect","setTimeout","Page","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA,MAAMC,IAAI,GAAG,MAAO;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMM,QAAQ,GAAGJ,WAAW,EAA5B,CAHgB,CAIhB;;AAGA,QAAMK,mBAAmB,GAAI,MAAMD,QAAQ,CAACE,OAAO,CAACC,cAAR,CAAuBC,aAAvB,EAAqCC,IAAI,GAAC,CAA1C,EAA4CC,UAA5C,EAAuDC,YAAvD,CAAD,CAA3C;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,UAAU,CAAC,MAAM;AACbT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMU,IAAI,gBACN;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAIK;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJL,CADJ;AAUA,QAAMC,OAAO,GAAGZ,SAAS,gBAAG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmBW,IAA5C;AAEA,sBACI,0CACKC,OADL,CADJ;AAKH,CA/BD;;AAiCA,eAAeb,IAAf","sourcesContent":["import React from 'react';\nimport Sidebar from './Sidebar/SideBar';\nimport MoviesList from './MoviesList/MoviesList';\nimport './Home.css';\nimport Animation from './Animation/Animation';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nconst Home = () =>  {\n    const [animation, setAnimation] = useState(true);\n\n    const dispatch = useDispatch();\n    // const Animation = useSelector(state => state.movies.animation);\n\n\n    const fetchInfiniteScroll =  () => dispatch(actions.InfiniteScroll(nameScrolling,page+1,valueInput,optionSelect))\n    useEffect(() => {\n        setTimeout(() => {\n            setAnimation(false)\n        }, 5000)\n    }, []);\n    \n    const Page = (\n        <div className=\"Page\">\n            <div className=\"Gauche\">\n                <Sidebar/>\n            </div>\n             <div className=\"Droite\">\n                <MoviesList/>\n            </div>\n        </div>\n    )\n    const display = animation ? <Animation /> : Page\n\n    return (\n        <> \n            {display}\n        </>\n    )   \n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}