{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Project/Netflix/src/containers/ShoppingCart/ShoppingCart.jsx\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { MdKeyboardArrowRight, MdKeyboardArrowLeft } from 'react-icons/md';\nimport * as actions from '../../store/actions/index';\nimport './ShoppingCart.css';\n\nconst ShoppingCart = () => {\n  const movies = useSelector(state => state.cart.cart);\n  const total = useSelector(state => state.cart.total);\n  const dispatch = useDispatch();\n\n  const resetCart = () => {\n    dispatch(actions.resetCart());\n  };\n\n  const removeProduct = id => {\n    dispatch(actions.removeToCart(id));\n  };\n\n  const decrease = id => {\n    dispatch(actions.decrease(id));\n  };\n\n  const increase = id => {\n    dispatch(actions.increase(id));\n  };\n\n  const getTotals = () => {\n    dispatch(actions.getTotals());\n  };\n\n  useEffect(() => {\n    getTotals();\n  });\n  let cart = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n  if (movies.length === 0) cart = /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  }, \"Is currently empty\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PageCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, cart);\n};\n\nexport default ShoppingCart;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Project/Netflix/src/containers/ShoppingCart/ShoppingCart.jsx"],"names":["React","useEffect","useSelector","useDispatch","AiOutlineCloseCircle","MdKeyboardArrowRight","MdKeyboardArrowLeft","actions","ShoppingCart","movies","state","cart","total","dispatch","resetCart","removeProduct","id","removeToCart","decrease","increase","getTotals","length","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,gBAA1D;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWA,IAArB,CAA1B;AACA,QAAMC,KAAK,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,KAArB,CAAzB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AACA,QAAMW,SAAS,GAAG,MAAM;AAAED,IAAAA,QAAQ,CAACN,OAAO,CAACO,SAAR,EAAD,CAAR;AAA+B,GAAzD;;AACA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAAEH,IAAAA,QAAQ,CAACN,OAAO,CAACU,YAAR,CAAqBD,EAArB,CAAD,CAAR;AAAoC,GAApE;;AACA,QAAME,QAAQ,GAAIF,EAAD,IAAQ;AAAEH,IAAAA,QAAQ,CAACN,OAAO,CAACW,QAAR,CAAiBF,EAAjB,CAAD,CAAR;AAAgC,GAA3D;;AACA,QAAMG,QAAQ,GAAIH,EAAD,IAAQ;AAAEH,IAAAA,QAAQ,CAACN,OAAO,CAACY,QAAR,CAAiBH,EAAjB,CAAD,CAAR;AAAgC,GAA3D;;AACA,QAAMI,SAAS,GAAG,MAAM;AAAEP,IAAAA,QAAQ,CAACN,OAAO,CAACa,SAAR,EAAD,CAAR;AAA+B,GAAzD;;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,SAAS;AACZ,GAFQ,CAAT;AAIA,MAAIT,IAAI,gBACJ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMA,MAAIF,MAAM,CAACY,MAAP,KAAkB,CAAtB,EACIV,IAAI,gBAAG;AAAG,IAAA,KAAK,EAAE;AAACW,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAEJ,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,IADL,CADJ;AAKH,CA5BD;;AA8BA,eAAeH,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { MdKeyboardArrowRight, MdKeyboardArrowLeft } from 'react-icons/md';\nimport * as actions from '../../store/actions/index';\nimport './ShoppingCart.css';\n\nconst ShoppingCart = () => {\n    const movies = useSelector(state => state.cart.cart);\n    const total = useSelector(state => state.cart.total);\n    const dispatch = useDispatch();\n    const resetCart = () => { dispatch(actions.resetCart()) };\n    const removeProduct = (id) => { dispatch(actions.removeToCart(id)) };\n    const decrease = (id) => { dispatch(actions.decrease(id)) };\n    const increase = (id) => { dispatch(actions.increase(id)) };\n    const getTotals = () => { dispatch(actions.getTotals()) };\n\n    useEffect(() => {\n        getTotals();\n    })\n\n    let cart = (\n        <div className=\"Cart\">\n          \n        </div>\n    )\n\n    if (movies.length === 0)\n        cart = <p style={{color:'black'}}>Is currently empty</p>\n  \n    return (\n        <div className=\"PageCart\">\n            {cart}   \n        </div>\n    )\n}\n\nexport default ShoppingCart;"]},"metadata":{},"sourceType":"module"}