{"ast":null,"code":"const checkRegex = (id, value) => {\n  let regex = null;\n  let errors = null;\n\n  if (id === 'lastName') {\n    regex = /^[A-Z]*(?:-[A-Z]+)*$/i;\n    if (!regex.test(value)) errors = '* Nom incorect';\n  } else if (id === 'firstName') {\n    regex = /^[A-Z]*(?:-[A-Z]+)*$/i;\n    if (!regex.test(value)) errors = '* Prenom incorect';\n  } else if (id === 'mail') {\n    regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    if (!regex.test(value)) errors = '* Adresse Mail incorect';\n  } else if (id === 'username') {\n    regex = /^[A-Z][A-Z0-9]*(?:[-_][A-Z0-9]+)*$/i;\n    if (!regex.test(value)) errors = '* Login incorect';\n  } else if (id === 'password') {\n    regex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{6,}/;\n    if (!regex.test(value)) errors = '* Au moins une minuscule, une majuscule et un chiffre';\n  } else if (id === 'bio') {\n    regex = /^[a-zA-Z0-9_.,'\"-\\s]*$/;\n    if (!regex.test(value)) errors = '* caractere non valide';\n  } else if (id === 'dateOfBirth') {\n    regex = /^[0-9]{4}[-](([0]?[1-9])|([1][0-2]))[-](([0]?[1-9])|([1-2][0-9])|([3][0-1]))$/;\n    if (!regex.test(value)) errors = '* format valide : AAAA-MM-JJ';\n  }\n\n  return errors;\n};\n\nexport const checkInput = (id, value, min, max) => {\n  let error = null;\n  if (value.length < min) error = `* ${min} caractères min.`;else if (value.length > max) error = `* ${max} caractères max.`;else error = checkRegex(id, value);\n  return error;\n};","map":{"version":3,"sources":["/Users/miclaude/Desktop/tdd_project/src/components/utility/utility.jsx"],"names":["checkRegex","id","value","regex","errors","test","checkInput","min","max","error","length"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC9B,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIH,EAAE,KAAK,UAAX,EAAuB;AACnBE,IAAAA,KAAK,GAAG,uBAAR;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,gBAAT;AACP,GAJD,MAKK,IAAIH,EAAE,KAAK,WAAX,EAAuB;AACxBE,IAAAA,KAAK,GAAG,uBAAR;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,mBAAT;AACP,GAJI,MAKA,IAAIH,EAAE,KAAK,MAAX,EAAmB;AACpBE,IAAAA,KAAK,GAAG,uIAAR;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,yBAAT;AACP,GAJI,MAKA,IAAIH,EAAE,KAAK,UAAX,EAAuB;AACxBE,IAAAA,KAAK,GAAE,qCAAP;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,kBAAT;AACP,GAJI,MAKA,IAAIH,EAAE,KAAK,UAAX,EAAuB;AACxBE,IAAAA,KAAK,GAAG,yCAAR;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,uDAAT;AACP,GAJI,MAKA,IAAIH,EAAE,KAAK,KAAX,EAAkB;AACnBE,IAAAA,KAAK,GAAG,wBAAR;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,wBAAT;AACP,GAJI,MAKA,IAAIH,EAAE,KAAK,aAAX,EAA0B;AAC3BE,IAAAA,KAAK,GAAE,+EAAP;AACA,QAAI,CAACA,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAL,EACIE,MAAM,GAAG,8BAAT;AACP;;AACD,SAAOA,MAAP;AACH,CAxCD;;AA0CA,OAAO,MAAME,UAAU,GAAG,CAACL,EAAD,EAAKC,KAAL,EAAWK,GAAX,EAAgBC,GAAhB,KAAwB;AAC9C,MAAIC,KAAK,GAAG,IAAZ;AAEA,MAAIP,KAAK,CAACQ,MAAN,GAAeH,GAAnB,EACIE,KAAK,GAAI,KAAIF,GAAI,kBAAjB,CADJ,KAEK,IAAIL,KAAK,CAACQ,MAAN,GAAeF,GAAnB,EACDC,KAAK,GAAI,KAAID,GAAI,kBAAjB,CADC,KAGDC,KAAK,GAAGT,UAAU,CAACC,EAAD,EAAKC,KAAL,CAAlB;AACJ,SAAOO,KAAP;AACH,CAVM","sourcesContent":["const checkRegex = (id, value) => {\n    let regex = null;\n    let errors = null;\n    \n    if (id === 'lastName') {\n        regex = /^[A-Z]*(?:-[A-Z]+)*$/i;\n        if (!regex.test(value))\n            errors = '* Nom incorect';\n    }\n    else if (id === 'firstName'){\n        regex = /^[A-Z]*(?:-[A-Z]+)*$/i;\n        if (!regex.test(value))\n            errors = '* Prenom incorect';\n    }   \n    else if (id === 'mail') {\n        regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        if (!regex.test(value))\n            errors = '* Adresse Mail incorect';\n    }\n    else if (id === 'username') {\n        regex= /^[A-Z][A-Z0-9]*(?:[-_][A-Z0-9]+)*$/i;\n        if (!regex.test(value))\n            errors = '* Login incorect';\n    }\n    else if (id === 'password') {\n        regex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{6,}/;\n        if (!regex.test(value))\n            errors = '* Au moins une minuscule, une majuscule et un chiffre';\n    }\n    else if (id === 'bio') {\n        regex = /^[a-zA-Z0-9_.,'\"-\\s]*$/;\n        if (!regex.test(value))\n            errors = '* caractere non valide';\n    }\n    else if (id === 'dateOfBirth') {\n        regex= /^[0-9]{4}[-](([0]?[1-9])|([1][0-2]))[-](([0]?[1-9])|([1-2][0-9])|([3][0-1]))$/;\n        if (!regex.test(value))\n            errors = '* format valide : AAAA-MM-JJ';\n    }\n    return errors;\n}\n\nexport const checkInput = (id, value,min, max) => {\n    let error = null;\n    \n    if (value.length < min)\n        error = `* ${min} caractères min.`;\n    else if (value.length > max)\n        error = `* ${max} caractères max.`;\n    else\n        error = checkRegex(id, value);\n    return error;\n}"]},"metadata":{},"sourceType":"module"}