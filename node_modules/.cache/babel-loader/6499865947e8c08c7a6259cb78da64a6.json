{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  cart: [{\n    title: 'FILM 1',\n    price: 1000,\n    id: 1,\n    qte: 1\n  }, {\n    title: 'FILM 2',\n    price: 2000,\n    id: 2,\n    qte: 1\n  }, {\n    title: 'FILM 3',\n    price: 3000,\n    id: 3,\n    qte: 1\n  }, {\n    title: 'FILM 4',\n    price: 4000,\n    id: 4,\n    qte: 1\n  }],\n  total: 0,\n  qte: 0\n};\n\nconst addToCart = state => {\n  return updateObject(state, {});\n};\n\nconst removeToCart = (state, action) => {\n  return updateObject(state, {\n    cart: state.cart.filter(cartItem => cartItem.id !== action.id)\n  });\n};\n\nconst resetCart = state => {\n  // <=> return{ ...state, cart: [] }.\n  return updateObject(state, {\n    cart: []\n  });\n};\n\nconst increase = (state, action) => {\n  console.log(action.id);\n  let tempCart = state.cart.map(cartItem => {\n    if (cartItem.id === action.id) cartItem = { ...cartItem,\n      qte: cartItem.qte + 1\n    };\n    return cartItem;\n  });\n  return { ...state,\n    cart: tempCart\n  };\n};\n\nconst decrease = (state, action) => {\n  let tempCart = [];\n  if (action.qte === 1) tempCart = state.cart.filter(cartItem => cartItem.id !== action.id);else {\n    tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.id) cartItem = { ...cartItem,\n        qte: cartItem.qte - 1\n      };\n      return cartItem;\n    });\n  }\n  return { ...state,\n    cart: tempCart\n  };\n};\n\nconst getTotals = state => {\n  state.cart.reduce(cartTotal, cartItem);\n  return {};\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return addToCart(state, action);\n\n    case actionTypes.REMOVE_TO_CART:\n      return removeToCart(state, action);\n\n    case actionTypes.RESET_CART:\n      return resetCart(state, action);\n\n    case actionTypes.INCREASE:\n      return increase(state, action);\n\n    case actionTypes.DECREASE:\n      return decrease(state, action);\n\n    case actionTypes.GET_TOTAL:\n      return getTotals(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix/src/store/reducers/cart.js"],"names":["actionTypes","updateObject","initialState","cart","title","price","id","qte","total","addToCart","state","removeToCart","action","filter","cartItem","resetCart","increase","console","log","tempCart","map","decrease","getTotals","reduce","cartTotal","reducer","type","ADD_TO_CART","REMOVE_TO_CART","RESET_CART","INCREASE","DECREASE","GET_TOTAL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    cart: [\n        {\n            title: 'FILM 1',\n            price: 1000,\n            id: 1,\n            qte : 1\n        },\n        {\n            title: 'FILM 2',\n            price: 2000,\n            id: 2,\n            qte: 1\n        },\n        {\n            title: 'FILM 3',\n            price: 3000,\n            id: 3,\n            qte: 1\n        },\n        {\n            title: 'FILM 4',\n            price: 4000,\n            id: 4,\n            qte: 1\n        },\n    ],\n    total: 0,\n    qte: 0\n};\n\nconst addToCart = (state) => {\n  return updateObject( state, { \n    \n  })\n}\n\nconst removeToCart = (state, action) => {\n    return updateObject( state, { \n        cart: state.cart.filter((cartItem) => cartItem.id !== action.id)\n    })\n}\n\nconst resetCart = (state ) => {\n    // <=> return{ ...state, cart: [] }.\n    return updateObject( state, { \n      cart: []\n    })\n}\n\nconst increase = (state, action) => {\n    console.log(action.id)\n    let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.id)\n            cartItem = { ...cartItem, qte: cartItem.qte + 1 };\n        return cartItem;\n    })\n    return {\n        ...state, cart: tempCart\n    }\n}\n\nconst decrease = (state, action) => {\n    let tempCart = [];\n    if (action.qte === 1)\n        tempCart = state.cart.filter(cartItem => cartItem.id !== action.id)\n    else {\n        tempCart = state.cart.map(cartItem => {\n            if (cartItem.id === action.id)\n                cartItem= { ...cartItem, qte: cartItem.qte - 1 };\n            return cartItem;\n        })\n    }\n    return {\n        ...state, cart: tempCart\n    }\n}\n\nconst getTotals = (state) => {\n    state.cart.reduce(\n        cartTotal, cartItem\n    )\n    return {\n\n    }\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.ADD_TO_CART: return addToCart(state, action);\n    case actionTypes.REMOVE_TO_CART: return removeToCart(state, action);\n    case actionTypes.RESET_CART: return resetCart(state, action);\n    case actionTypes.INCREASE: return increase(state, action);\n    case actionTypes.DECREASE: return decrease(state, action);\n    case actionTypes.GET_TOTAL: return getTotals(state);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}