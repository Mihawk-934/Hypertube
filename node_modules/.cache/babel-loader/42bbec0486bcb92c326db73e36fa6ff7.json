{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n  componentDidMount() {\n    this.props.popular(this.props.page);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.movies !== this.props.movies) console;\n  }\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.props.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }\n    });\n    if (this.props.movies.length === 0) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.movies.length // next={this.props.popular(this.props.page)}\n      ,\n      hasMore: this.props.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 58\n        }\n      }, \"Yay! Vous avez tout vu\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('moviesList', state);\n  return {\n    page: state.filtres.page,\n    hasMore: state.filtres.hasMore,\n    movies: state.filtres.movies\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: page => dispatch(actions.popular(page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","InfiniteScroll","connect","MovieItems","actions","MoviesList","componentDidMount","props","popular","page","componentDidUpdate","prevProps","movies","console","render","length","clicked","color","hasMore","textAlign","mapStateToProps","state","log","filtres","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAEjCM,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,IAA9B;AACD;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC7B,QAAIA,SAAS,CAACC,MAAV,KAAqB,KAAKL,KAAL,CAAWK,MAApC,EACEC,OAAO;AACV;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIF,MAAM,GAAG,IAAb;AACA,QAAI,KAAKL,KAAL,CAAWK,MAAX,KAAsB,IAAtB,IAA8B,KAAKL,KAAL,CAAWK,MAAX,CAAkBG,MAAlB,GAA2B,CAA7D,EACEH,MAAM,gBAAG,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,MAA/B;AAAuC,MAAA,OAAO,EAAE,MAAM,KAAKI,OAAL,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACF,QAAI,KAAKT,KAAL,CAAWK,MAAX,CAAkBG,MAAlB,KAA6B,CAAjC,EACEH,MAAM,gBAAG;AAAG,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAT;AAEF,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWK,MAAX,CAAkBG,MADhC,CAEE;AAFF;AAGE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWW,OAHtB;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAKE,MAAA,UAAU,eAAE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAnC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGP,MANH,CADF,CADF;AAYD;;AA9BgC;;AAiCnC,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/BR,EAAAA,OAAO,CAACS,GAAR,CAAY,YAAZ,EAA0BD,KAA1B;AACA,SAAO;AACLZ,IAAAA,IAAI,EAAEY,KAAK,CAACE,OAAN,CAAcd,IADf;AAELS,IAAAA,OAAO,EAAEG,KAAK,CAACE,OAAN,CAAcL,OAFlB;AAGLN,IAAAA,MAAM,EAAES,KAAK,CAACE,OAAN,CAAcX;AAHjB,GAAP;AAKD,CAPD;;AASA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,OAAO,EAAGC,IAAD,IAAUgB,QAAQ,CAACrB,OAAO,CAACI,OAAR,CAAgBC,IAAhB,CAAD;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n \n  componentDidMount () {\n    this.props.popular(this.props.page);\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.movies !== this.props.movies)\n      console\n  };\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) \n      movies = <MovieItems movies={this.props.movies} clicked={() => this.clicked()}/>\n    if (this.props.movies.length === 0)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat.</p>\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength={this.props.movies.length}\n          // next={this.props.popular(this.props.page)}\n          hasMore={this.props.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! Vous avez tout vu</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log('moviesList', state)\n  return {\n    page: state.filtres.page,\n    hasMore: state.filtres.hasMore,\n    movies: state.filtres.movies,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    popular: (page) => dispatch(actions.popular(page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);"]},"metadata":{},"sourceType":"module"}