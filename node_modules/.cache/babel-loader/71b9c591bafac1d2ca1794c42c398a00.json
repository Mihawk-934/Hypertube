{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix/src/containers/Profil/MyInfo/PhotoUser/PhotoUser.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Img from '../../../../assets/miclaude.png';\nimport { MdAddAPhoto } from 'react-icons/md';\nimport '../MyInfo.css';\nimport './PhotoUser.css';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../../../store/actions/index';\nimport firebase from '../../../../fire';\n\nconst PhotoUser = () => {\n  let id = localStorage.getItem('id');\n  let fileName = 'image';\n  let newDirectory = id;\n  let storage = firebase.storage().ref(`images/${newDirectory}/${fileName}`);\n  const [image, setImage] = useState(null);\n  const [imageTmp, setImageTmp] = useState(null);\n  const [good, setGood] = useState(false);\n  const dispatch = useDispatch();\n\n  const photoProfil = image => dispatch(actions.photoUrl(image));\n\n  let imageProfil = localStorage.getItem('photo');\n  useEffect(() => {\n    if (localStorage.getItem('photo')) {\n      setImage(localStorage.getItem('photo'));\n      photoProfil(localStorage.getItem('photo'));\n    } else {\n      storage.getDownloadURL().then(function (url) {\n        if (url) {\n          photoProfil(url);\n          setImage(url);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, []);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      if (e.target.files[0] !== image) {\n        setImageTmp(e.target.files[0]);\n        setGood(true);\n      }\n    }\n  };\n\n  const handleUpload = async () => {\n    if (good) {\n      if (image !== undefined) {\n        await storage.put(imageTmp).then(res => console.log(res)).catch(err => console.log(err));\n      }\n\n      await storage.getDownloadURL().then(function (url) {\n        photoProfil(url);\n        setImage(url);\n        setGood(false);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BlockContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TitleBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Photo de Profil\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BlockImageProfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PhotoUser;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix/src/containers/Profil/MyInfo/PhotoUser/PhotoUser.jsx"],"names":["React","useState","useEffect","Img","MdAddAPhoto","useDispatch","actions","firebase","PhotoUser","id","localStorage","getItem","fileName","newDirectory","storage","ref","image","setImage","imageTmp","setImageTmp","good","setGood","dispatch","photoProfil","photoUrl","imageProfil","getDownloadURL","then","url","catch","err","console","log","handleChange","e","target","files","handleUpload","undefined","put","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Img from '../../../../assets/miclaude.png';\nimport { MdAddAPhoto } from 'react-icons/md';\nimport '../MyInfo.css';\nimport './PhotoUser.css';\nimport {useDispatch} from 'react-redux';\nimport * as actions from '../../../../store/actions/index';\nimport firebase from '../../../../fire';\n\nconst PhotoUser = () => {\n    let id = localStorage.getItem('id');\n    let fileName = 'image';\n    let newDirectory = id;\n    let storage = firebase.storage().ref(`images/${newDirectory}/${fileName}`);\n    \n    const [ image, setImage ] = useState(null);\n    const [ imageTmp, setImageTmp ] = useState(null);\n    const [ good, setGood ] = useState(false);\n\n    const dispatch = useDispatch();\n    const photoProfil = (image) => dispatch(actions.photoUrl(image))\n\n    let imageProfil = localStorage.getItem('photo');\n\n    useEffect (() => {\n        if (localStorage.getItem('photo')) {\n            setImage(localStorage.getItem('photo')) \n            photoProfil(localStorage.getItem('photo'));\n        }\n        else {\n            storage.getDownloadURL()\n                .then(function(url) {\n                    if (url) {\n                        photoProfil(url);\n                        setImage(url);\n                    }\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n    }, [])\n\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            if (e.target.files[0] !== image ) {\n                setImageTmp(e.target.files[0]);\n                setGood(true);\n            }            \n        }         \n    };\n    \n    const handleUpload = async () => {\n        if(good) {\n            if (image !== undefined) {\n                await storage.put(imageTmp)\n                    .then(res => console.log(res))\n                    .catch(err => console.log(err))\n            }\n            await storage.getDownloadURL()\n                .then(function(url) {\n                    photoProfil(url);\n                    setImage(url);\n                    setGood(false);                \n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }        \n    }\n\n    return (\n        <div className=\"BlockContainer\">\n            <div className=\"TitleBackground\">\n                <h4 className='h4'>Photo de Profil</h4>\n            </div>\n            <div className=\"BlockImageProfil\">\n                {/* <img src={Img} className='ImgProfil'alt=''/>\n                <div className='BlockLogo'>\n                    <MdAddAPhoto className='LogoAdd'/>\n                </div> */}\n                 {/* { image !== null ? \n                        <img src={image} alt='' style={{height:'140px', width:'140px',borderRadius:'10px'}}/>\n                        : <div style={{height:'140px', width:'140px'}}/>}\n                        { !imageProfil && <div>\n                            <input type='file' accept=\"image/*\" onChange={handleChange}  /> \n                            <button onClick={handleUpload}>Upload</button>\n                        </div> }     */}\n            </div>\n        </div>\n    )\n}\n\nexport default PhotoUser;"]},"metadata":{},"sourceType":"module"}