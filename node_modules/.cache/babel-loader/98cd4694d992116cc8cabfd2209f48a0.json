{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  movies: [],\n  nbPage: nul\n};\n\nconst movies = (state, action) => {\n  return updateObject(state, {\n    movies: [...state.movies, ...action.newMovies],\n    nbPage: action.nbPage\n  });\n};\n\nconst filtres = (state, action) => {\n  return updateObject(state, {\n    filtres: action.filtres\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVIES:\n      return movies(state, action);\n\n    case actionTypes.FILTRES:\n      return filtres(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/reducers/filtres.js"],"names":["actionTypes","updateObject","initialState","movies","nbPage","nul","state","action","newMovies","filtres","reducer","type","MOVIES","FILTRES"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,MAAM,EAAEC;AAFW,CAArB;;AAKA,MAAMF,MAAM,GAAG,CAACG,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAON,YAAY,CAAEK,KAAF,EAAS;AAC1BH,IAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkB,GAAGI,MAAM,CAACC,SAA5B,CADkB;AAE1BJ,IAAAA,MAAM,EAAEG,MAAM,CAACH;AAFW,GAAT,CAAnB;AAIA,CALF;;AAOA,MAAMK,OAAO,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAON,YAAY,CAAEK,KAAF,EAAS;AAE1BG,IAAAA,OAAO,EAAEF,MAAM,CAACE;AAFU,GAAT,CAAnB;AAID,CALD;;AAOA,MAAMC,OAAO,GAAG,CAAEJ,KAAK,GAAGJ,YAAV,EAAwBK,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACI,IAAhB;AACE,SAAKX,WAAW,CAACY,MAAjB;AAAyB,aAAOT,MAAM,CAACG,KAAD,EAAQC,MAAR,CAAb;;AACzB,SAAKP,WAAW,CAACa,OAAjB;AAA0B,aAAOJ,OAAO,CAACH,KAAD,EAAQC,MAAR,CAAd;;AAC1B;AAAS,aAAOD,KAAP;AAHX;AAKD,CAND;;AAQA,eAAeI,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  movies: [],\n  nbPage: nul\n};\n\nconst movies = (state, action) => {\n  return updateObject( state, { \n    movies: [...state.movies, ...action.newMovies],\n    nbPage: action.nbPage,\n  })\n;};\n\nconst filtres = (state, action) => {\n  return updateObject( state, { \n  \n    filtres: action.filtres,\n  })\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.MOVIES: return movies(state, action);\n    case actionTypes.FILTRES: return filtres(state, action);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}