{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/authPhone.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport firebase from '../../fire';\nimport * as regex from './Regex';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass Phone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: null,\n      codeVerification: null,\n      error: {},\n      errorCatch: '',\n      disable: true,\n      show: false,\n      codeError: null\n    };\n\n    this.handleFormValid = () => {\n      let store = '';\n      const error = { ...this.state.error\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable: false\n      }) : this.setState({\n        disable: true\n      }, () => {\n        console.log(this.state.disable);\n      });\n    };\n\n    this.handleInputValid = (name_input, value_input) => {\n      let error = { ...this.state.error\n      };\n\n      switch (name_input) {\n        case 'phone':\n          value_input.match(regex.phoneNumber) ? error[name_input] = '' : error[name_input] = \"*Numero non valide ex: +36601020304\";\n          break;\n\n        case 'codeVerification':\n          value_input.match(regex.codeVerification) && value_input.length === 5 ? error[name_input] = '' : error[name_input] = \"*mauvais format 5chiffre sont attendues\";\n          break;\n\n        default:\n          console.log(\"NUMBER NOT FOUND\");\n      }\n\n      if (name_input === 'phone') this.setState({\n        error: error\n      }, () => {\n        this.handleFormValid();\n      });else if (name_input === 'codeVerification') this.setState({\n        error: error\n      }, () => {\n        this.handleFormValid();\n      });\n    };\n\n    this.handleInput = event => {\n      const nameInput = event.target.id;\n      const valueInput = event.target.value;\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        this.handleInputValid(nameInput, valueInput);\n      });\n    };\n\n    this.sendCode = e => {\n      e.preventDefault();\n      firebase.auth().languageCode = 'fr';\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      let phoneNumber = this.state.phone;\n      let appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        this.setState({\n          show: true,\n          disable: true\n        });\n        window.confirmationResult = confirmationResult;\n      }).catch(error => {\n        this.setState({\n          errorCatch: error.message\n        });\n      });\n    };\n\n    this.receiveCode = e => {\n      e.preventDefault();\n      const verificationId = this.state.codeVerification;\n      window.confirmationResult.confirm(verificationId).then(result => {\n        localStorage.setItem('id', result.user.uid);\n        localStorage.setItem('token', result.user.ma);\n        this.props.onPhone(result.user.ma, result.user.uid);\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          codeError: 'error'\n        });\n      });\n    };\n  }\n\n  render() {\n    let form;\n    let msgCatch;\n    if (this.state.errorCatch && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }\n    }, \"Trop d'essai votre compte a \\xE9t\\xE9 suspendu temporairement.\");\n    if (this.state.codeError) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 24\n      }\n    }, \"le code ne coresspond pas a celui qui vous a \\xE9t\\xE9 envoyer veuillez ressayer\");\n    if (this.state.show && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }\n    }, \"Un code vient de vous etre envoyer par SMS.\");\n\n    if (this.state.show === false) {\n      form = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \"Connexion via Smarthpone\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"phone\",\n        type: \"tel\",\n        placeholder: \"ex: +36601020304\",\n        onChange: this.handleInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, this.state.error.phone), /*#__PURE__*/React.createElement(Button, {\n        id: \"recaptcha-container\",\n        disabled: this.state.disable,\n        onClick: this.sendCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Envoyer code\"));\n    }\n\n    if (this.state.show) {\n      form = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, \"Connexion via Smarthpone\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"codeVerification\",\n        type: \"tel\",\n        placeholder: \"Entrer le code de verification\",\n        onChange: this.handleInput(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, this.state.error.codeVerification), /*#__PURE__*/React.createElement(Button, {\n        id: \"code\",\n        disabled: this.state.disable,\n        onClick: this.receiveCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, \"S'inscrire\"));\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, form, msgCatch);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Phone));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/authPhone.jsx"],"names":["React","Component","Button","Form","firebase","regex","withRouter","actions","connect","Phone","state","phone","codeVerification","error","errorCatch","disable","show","codeError","handleFormValid","store","values","Object","key","keys","length","setState","console","log","handleInputValid","name_input","value_input","match","phoneNumber","handleInput","event","nameInput","target","id","valueInput","value","sendCode","e","preventDefault","auth","languageCode","window","recaptchaVerifier","RecaptchaVerifier","size","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","message","receiveCode","verificationId","confirm","result","localStorage","setItem","user","uid","ma","props","onPhone","history","push","render","form","msgCatch","onSubmit","mapDispatchToProps","dispatch","token","userId","authSuccess"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAC,IADF;AAEJC,MAAAA,gBAAgB,EAAC,IAFb;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,UAAU,EAAC,EAJP;AAKJC,MAAAA,OAAO,EAAC,IALJ;AAMJC,MAAAA,IAAI,EAAE,KANF;AAOJC,MAAAA,SAAS,EAAE;AAPP,KADkB;;AAAA,SAW1BC,eAX0B,GAWR,MAAM;AACpB,UAAIC,KAAK,GAAG,EAAZ;AACA,YAAMN,KAAK,GAAG,EAAC,GAAG,KAAKH,KAAL,CAAWG;AAAf,OAAd;AACA,YAAMO,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcP,KAAd,CAAf;;AACA,WAAK,MAAMS,GAAX,IAAkBF,MAAlB,EACID,KAAK,IAAIG,GAAT;;AACJD,MAAAA,MAAM,CAACE,IAAP,CAAYV,KAAZ,EAAmBW,MAAnB,KAA8B,CAA9B,IAAmCL,KAAK,CAACK,MAAN,KAAiB,CAApD,GAAwD,KAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAC;AAAT,OAAd,CAAxD,GAAuF,KAAKU,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAC;AAAT,OAAd,EAA6B,MAAI;AAACW,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWK,OAAvB;AAAgC,OAAlE,CAAvF;AACH,KAlByB;;AAAA,SAoB1Ba,gBApB0B,GAoBP,CAACC,UAAD,EAAYC,WAAZ,KAA4B;AAC3C,UAAIjB,KAAK,GAAG,EAAC,GAAG,KAAKH,KAAL,CAAWG;AAAf,OAAZ;;AACA,cAAOgB,UAAP;AACI,aAAK,OAAL;AAAcC,UAAAA,WAAW,CAACC,KAAZ,CAAkB1B,KAAK,CAAC2B,WAAxB,IAAuCnB,KAAK,CAACgB,UAAD,CAAL,GAAkB,EAAzD,GAA8DhB,KAAK,CAACgB,UAAD,CAAL,GAAoB,qCAAlF;AACV;;AACJ,aAAK,kBAAL;AAAyBC,UAAAA,WAAW,CAACC,KAAZ,CAAkB1B,KAAK,CAACO,gBAAxB,KAA6CkB,WAAW,CAACN,MAAZ,KAAuB,CAApE,GAAwEX,KAAK,CAACgB,UAAD,CAAL,GAAmB,EAA3F,GAAgGhB,KAAK,CAACgB,UAAD,CAAL,GAAoB,yCAApH;AACpB;;AACL;AACIH,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AANR;;AAQA,UAAIE,UAAU,KAAK,OAAnB,EACI,KAAKJ,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAACA;AAAP,OAAd,EAA6B,MAAM;AAAC,aAAKK,eAAL;AAAuB,OAA3D,EADJ,KAEK,IAAIW,UAAU,KAAK,kBAAnB,EACD,KAAKJ,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAACA;AAAP,OAAd,EAA6B,MAAM;AAAC,aAAKK,eAAL;AAAuB,OAA3D;AACP,KAlCyB;;AAAA,SAoC1Be,WApC0B,GAoCXC,KAAD,IAAW;AACrB,YAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA/B;AACA,YAAMC,UAAU,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAAhC;AACA,WAAKd,QAAL,CAAc;AAAC,SAACS,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAkBH,KAAK,CAACE,MAAN,CAAaG;AAAhC,OAAd,EACI,MAAM;AAAC,aAAKX,gBAAL,CAAsBO,SAAtB,EAAgCG,UAAhC;AACV,OAFD;AAGH,KA1CyB;;AAAA,SA4C1BE,QA5C0B,GA4CdC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAtC,MAAAA,QAAQ,CAACuC,IAAT,GAAgBC,YAAhB,GAA+B,IAA/B;AACAC,MAAAA,MAAM,CAACC,iBAAP,GAA2B,IAAI1C,QAAQ,CAACuC,IAAT,CAAcI,iBAAlB,CAAoC,qBAApC,EAC3B;AACGC,QAAAA,IAAI,EAAC;AADR,OAD2B,CAA3B;AAIA,UAAIhB,WAAW,GAAG,KAAKtB,KAAL,CAAWC,KAA7B;AACA,UAAIsC,WAAW,GAAGJ,MAAM,CAACC,iBAAzB;AACA1C,MAAAA,QAAQ,CAACuC,IAAT,GAAgBO,qBAAhB,CAAsClB,WAAtC,EAAmDiB,WAAnD,EACCE,IADD,CACMC,kBAAkB,IAAI;AACxB,aAAK3B,QAAL,CAAc;AAACT,UAAAA,IAAI,EAAC,IAAN;AAAYD,UAAAA,OAAO,EAAE;AAArB,SAAd;AACA8B,QAAAA,MAAM,CAACO,kBAAP,GAA4BA,kBAA5B;AACH,OAJD,EAKCC,KALD,CAKOxC,KAAK,IAAI;AACZ,aAAKY,QAAL,CAAc;AAACX,UAAAA,UAAU,EAACD,KAAK,CAACyC;AAAlB,SAAd;AACH,OAPD;AAQH,KA7DyB;;AAAA,SA+D1BC,WA/D0B,GA+DZd,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMc,cAAc,GAAG,KAAK9C,KAAL,CAAWE,gBAAlC;AACAiC,MAAAA,MAAM,CAACO,kBAAP,CACCK,OADD,CACSD,cADT,EAECL,IAFD,CAEMO,MAAM,IAAI;AACZC,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA0BF,MAAM,CAACG,IAAP,CAAYC,GAAtC;AACAH,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACG,IAAP,CAAYE,EAA1C;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBP,MAAM,CAACG,IAAP,CAAYE,EAA/B,EAAkCL,MAAM,CAACG,IAAP,CAAYC,GAA9C;AACA,aAAKE,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACH,OAPD,EAQCd,KARD,CAQOxC,KAAK,IAAI;AACZ,aAAKY,QAAL,CAAc;AAACR,UAAAA,SAAS,EAAC;AAAX,SAAd;AACH,OAVD;AAWH,KA7EyB;AAAA;;AA+E1BmD,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAJ;AACA,QAAIC,QAAJ;AAEA,QAAI,KAAK5D,KAAL,CAAWI,UAAX,IAAyB,KAAKJ,KAAL,CAAWO,SAAX,KAAyB,IAAtD,EACIqD,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAAX;AAEJ,QAAI,KAAK5D,KAAL,CAAWO,SAAf,EACIqD,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAAX;AAEJ,QAAI,KAAK5D,KAAL,CAAWM,IAAX,IAAmB,KAAKN,KAAL,CAAWO,SAAX,KAAyB,IAAhD,EACIqD,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAX;;AAEJ,QAAI,KAAK5D,KAAL,CAAWM,IAAX,KAAoB,KAAxB,EAA8B;AAC1BqD,MAAAA,IAAI,gBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,KAA9B;AAAoC,QAAA,WAAW,EAAC,kBAAhD;AAAmE,QAAA,QAAQ,EAAE,KAAKpC,WAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKvB,KAAL,CAAWG,KAAX,CAAiBF,KADtB,CAHJ,eAMI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,qBAAX;AAAiC,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWK,OAAtD;AAA+D,QAAA,OAAO,EAAE,KAAKyB,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADJ;AAYH;;AAED,QAAI,KAAK9B,KAAL,CAAWM,IAAf,EAAoB;AAChBqD,MAAAA,IAAI,gBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,kBAAjB;AAAoC,QAAA,IAAI,EAAC,KAAzC;AAA+C,QAAA,WAAW,EAAC,gCAA3D;AAA4F,QAAA,QAAQ,EAAE,KAAKpC,WAAL,CAAiBQ,CAAjB,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK/B,KAAL,CAAWG,KAAX,CAAiBD,gBADtB,CAHJ,eAMI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWK,OAAvC;AAAgD,QAAA,OAAO,EAAE,KAAKwC,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,CADJ;AAYH;;AAED,wBACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKgB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IADL,EAEKC,QAFL,CADJ;AAMH;;AAhIyB;;AAmI9B,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHR,IAAAA,OAAO,EAAE,CAACS,KAAD,EAAQC,MAAR,KAAmBF,QAAQ,CAAClE,OAAO,CAACqE,WAAR,CAAoBF,KAApB,EAA2BC,MAA3B,CAAD;AADjC,GAAP;AAGH,CAJD;;AAMA,eAAerE,UAAU,CAACE,OAAO,CAAC,IAAD,EAAOgE,kBAAP,CAAP,CAAmC/D,KAAnC,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Form} from 'react-bootstrap'\nimport firebase from '../../fire';\nimport * as regex from './Regex'\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\n\nclass Phone extends Component {\n    state = {\n        phone:null,\n        codeVerification:null,\n        error: {},\n        errorCatch:'',\n        disable:true,\n        show: false,\n        codeError: null\n    }\n\n    handleFormValid = () => { \n        let store = ''; \n        const error = {...this.state.error};\n        const values = Object.values(error)\n        for (const key of values)\n            store += key;\n        Object.keys(error).length === 1 && store.length === 0 ? this.setState({disable:false}):this.setState({disable:true},()=>{console.log(this.state.disable)});\n    }\n\n    handleInputValid = (name_input,value_input) => {\n        let error = {...this.state.error};\n        switch(name_input){\n            case 'phone': value_input.match(regex.phoneNumber) ? error[name_input]='' : error[name_input] = \"*Numero non valide ex: +36601020304\";\n                break;\n            case 'codeVerification': value_input.match(regex.codeVerification) && value_input.length === 5 ? error[name_input]= '' : error[name_input] = \"*mauvais format 5chiffre sont attendues\";\n                 break;\n            default:\n                console.log(\"NUMBER NOT FOUND\");\n        }\n        if (name_input === 'phone')\n            this.setState({error:error}, () => {this.handleFormValid()});\n        else if (name_input === 'codeVerification')\n            this.setState({error:error}, () => {this.handleFormValid()});\n    }\n     \n    handleInput = (event) => {\n        const nameInput = event.target.id;\n        const valueInput = event.target.value;\n        this.setState({[event.target.id]:event.target.value},\n            () => {this.handleInputValid(nameInput,valueInput)    \n        });\n    }\n\n    sendCode = (e) => {  \n        e.preventDefault();\n        firebase.auth().languageCode = 'fr';\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\",\n        {\n           size:\"invisible\"\n        });\n        let phoneNumber = this.state.phone;\n        let appVerifier = window.recaptchaVerifier;\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then(confirmationResult => { \n            this.setState({show:true, disable: true})\n            window.confirmationResult = confirmationResult;\n        })\n        .catch(error => {\n            this.setState({errorCatch:error.message})\n        });\n    }\n    \n    receiveCode= (e) => {\n        e.preventDefault();\n        const verificationId = this.state.codeVerification;\n        window.confirmationResult\n        .confirm(verificationId)\n        .then(result => {\n            localStorage.setItem('id',result.user.uid)\n            localStorage.setItem('token', result.user.ma)\n            this.props.onPhone(result.user.ma,result.user.uid);\n            this.props.history.push('/home')\n        })\n        .catch(error => {\n            this.setState({codeError:'error'})\n        });\n    }\n   \n    render() {\n        let form;\n        let msgCatch;\n\n        if (this.state.errorCatch && this.state.codeError === null)\n            msgCatch = <p>Trop d'essai votre compte a été suspendu temporairement.</p>\n        \n        if (this.state.codeError)\n            msgCatch = <p>le code ne coresspond pas a celui qui vous a été envoyer veuillez ressayer</p>\n  \n        if (this.state.show && this.state.codeError === null)\n            msgCatch = <p>Un code vient de vous etre envoyer par SMS.</p>\n        \n        if (this.state.show === false){\n            form = (\n                <Form.Group>\n                    <Form.Label>Connexion via Smarthpone</Form.Label> \n                    <Form.Control id=\"phone\" type=\"tel\" placeholder=\"ex: +36601020304\" onChange={this.handleInput}/>\n                    <Form.Text className=\"text-muted\">         \n                        {this.state.error.phone}     \n                    </Form.Text>\n                    <Button id=\"recaptcha-container\" disabled={this.state.disable} onClick={this.sendCode}>\n                        Envoyer code\n                    </Button>\n                </Form.Group>\n            )\n        }\n        \n        if (this.state.show){\n            form = (\n                <Form.Group>\n                    <Form.Label>Connexion via Smarthpone</Form.Label>\n                    <Form.Control id=\"codeVerification\" type=\"tel\" placeholder=\"Entrer le code de verification\" onChange={this.handleInput(e)} />\n                    <Form.Text className=\"text-muted\">         \n                        {this.state.error.codeVerification}   \n                    </Form.Text>\n                    <Button id=\"code\" disabled={this.state.disable} onClick={this.receiveCode}>\n                        S'inscrire\n                    </Button> \n                </Form.Group>\n            )\n        }\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                {form}\n                {msgCatch}\n            </Form>   \n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n    };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps) (Phone));\n"]},"metadata":{},"sourceType":"module"}