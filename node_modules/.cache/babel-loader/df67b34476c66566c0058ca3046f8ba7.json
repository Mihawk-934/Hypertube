{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  token: null,\n  userId: null,\n  loading: false,\n  errorServor: null,\n  registerSuccess: false,\n  hideToolbatAndFooter: false\n};\n\nconst authStart = state => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authLogout = state => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    hideToolbatAndFooter: false\n  });\n};\n\nconst errorServor = (state, action) => {\n  return updateObject(state, {\n    errorServor: action.error\n  });\n};\n\nconst registerSuccess = (state, action) => {\n  return updateObject(state, {\n    registerSuccess: action.value\n  });\n};\n\nconst hideToolbatAndFooter = (state, action) => {\n  console.log(action);\n  return updateObject(state, {\n    hideToolbatAndFooter: action.value\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state);\n\n    case actionTypes.AUTH_ERROR:\n      return errorServor(state, action);\n\n    case actionTypes.REGISTER_SUCCESS:\n      return registerSuccess(state, action);\n\n    case actionTypes.HIDE_TOOLBAR_AND_FOOTER:\n      return hideToolbatAndFooter(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","loading","errorServor","registerSuccess","hideToolbatAndFooter","authStart","state","error","authSuccess","action","idToken","authLogout","value","console","log","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_LOGOUT","AUTH_ERROR","REGISTER_SUCCESS","HIDE_TOOLBAR_AND_FOOTER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,WAAW,EAAE,IAJM;AAKnBC,EAAAA,eAAe,EAAE,KALE;AAMnBC,EAAAA,oBAAoB,EAAE;AANH,CAArB;;AASA,MAAMC,SAAS,GAAKC,KAAF,IAAa;AAC7B,SAAOT,YAAY,CAAES,KAAF,EAAS;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeN,IAAAA,OAAO,EAAE;AAAxB,GAAT,CAAnB;AACD,CAFD;;AAIA,MAAMO,WAAW,GAAG,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACrC,SAAOZ,YAAY,CAAES,KAAF,EAAS;AACxBP,IAAAA,KAAK,EAAEU,MAAM,CAACC,OADU;AAExBV,IAAAA,MAAM,EAAES,MAAM,CAACT,MAFS;AAGxBO,IAAAA,KAAK,EAAE,IAHiB;AAIxBN,IAAAA,OAAO,EAAE;AAJe,GAAT,CAAnB;AAMD,CAPD;;AASA,MAAMU,UAAU,GAAIL,KAAD,IAAW;AAC5B,SAAOT,YAAY,CAACS,KAAD,EAAQ;AACvBP,IAAAA,KAAK,EAAE,IADgB;AAEvBC,IAAAA,MAAM,EAAE,IAFe;AAGvBI,IAAAA,oBAAoB,EAAE;AAHC,GAAR,CAAnB;AAKD,CAND;;AAQA,MAAMF,WAAW,GAAG,CAACI,KAAD,EAAQG,MAAR,KAAmB;AACrC,SAAOZ,YAAY,CAACS,KAAD,EAAQ;AACzBJ,IAAAA,WAAW,EAAEO,MAAM,CAACF;AADK,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMJ,eAAe,GAAG,CAACG,KAAD,EAAQG,MAAR,KAAmB;AACzC,SAAOZ,YAAY,CAACS,KAAD,EAAQ;AACzBH,IAAAA,eAAe,EAAEM,MAAM,CAACG;AADC,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMR,oBAAoB,GAAG,CAACE,KAAD,EAAQG,MAAR,KAAmB;AAC9CI,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,SAAOZ,YAAY,CAAES,KAAF,EAAS;AAC1BF,IAAAA,oBAAoB,EAAEK,MAAM,CAACG;AADH,GAAT,CAAnB;AAGD,CALD;;AAOA,MAAMG,OAAO,GAAG,CAAET,KAAK,GAAGR,YAAV,EAAwBW,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACO,IAAhB;AACE,SAAKpB,WAAW,CAACqB,UAAjB;AAA6B,aAAOZ,SAAS,CAACC,KAAD,EAAQG,MAAR,CAAhB;;AAC7B,SAAKb,WAAW,CAACsB,YAAjB;AAA+B,aAAOV,WAAW,CAACF,KAAD,EAAQG,MAAR,CAAlB;;AAC/B,SAAKb,WAAW,CAACuB,WAAjB;AAA8B,aAAOR,UAAU,CAACL,KAAD,CAAjB;;AAC9B,SAAKV,WAAW,CAACwB,UAAjB;AAA6B,aAAOlB,WAAW,CAACI,KAAD,EAAQG,MAAR,CAAlB;;AAC7B,SAAKb,WAAW,CAACyB,gBAAjB;AAAmC,aAAOlB,eAAe,CAACG,KAAD,EAAQG,MAAR,CAAtB;;AACnC,SAAKb,WAAW,CAAC0B,uBAAjB;AAA0C,aAAOlB,oBAAoB,CAACE,KAAD,EAAOG,MAAP,CAA3B;;AAC1C;AAAS,aAAOH,KAAP;AAPX;AASD,CAVD;;AAYA,eAAeS,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  loading: false,\n  errorServor: null,\n  registerSuccess: false,\n  hideToolbatAndFooter: false\n};\n\nconst authStart = ( state ) => {\n  return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject( state, { \n      token: action.idToken,\n      userId: action.userId,\n      error: null,\n      loading: false\n   });\n};\n\nconst authLogout = (state) => {\n  return updateObject(state, {\n      token: null,\n      userId: null,\n      hideToolbatAndFooter: false\n  });\n};\n\nconst errorServor = (state, action) => {\n  return updateObject(state, {\n    errorServor: action.error \n  });\n};\n\nconst registerSuccess = (state, action) => {\n  return updateObject(state, {\n    registerSuccess: action.value\n  });\n};\n\nconst hideToolbatAndFooter = (state, action) => {\n  console.log(action)\n  return updateObject( state, { \n    hideToolbatAndFooter: action.value \n  });\n};\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.AUTH_START: return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n    case actionTypes.AUTH_LOGOUT: return authLogout(state);\n    case actionTypes.AUTH_ERROR: return errorServor(state, action);\n    case actionTypes.REGISTER_SUCCESS: return registerSuccess(state, action);\n    case actionTypes.HIDE_TOOLBAR_AND_FOOTER: return hideToolbatAndFooter(state,action);\n    default: return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}