{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/Login/AuthPhone/AuthPhone.jsx\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport firebase from '../../../../fire';\nimport * as regex from './RegexPhone';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MyInput from '../../../../components/MyInput/MyInput';\nimport MyButton from '../../../../components/MyButton/MyButton';\nimport '../../auth.css';\n\nclass Phone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: null,\n      codeVerification: null,\n      error: {},\n      errorCatch: '',\n      disable: true,\n      // disable1:true,\n      userId: null,\n      show: false,\n      codeError: null\n    };\n\n    this.handleFormValid = name_input => {\n      let number = null;\n      let store = '';\n      name_input === 'phon';\n      const error = { ...this.state.error\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === number && store.length === 0 ? this.setState({\n        disable: false\n      }) : this.setState({\n        disable: true\n      }, () => {\n        console.log(this.state.disable1);\n      });\n    };\n\n    this.handleInputValid = (name_input, value_input) => {\n      let error = { ...this.state.error\n      };\n\n      switch (name_input) {\n        case 'phone':\n          value_input.match(regex.phoneNumber) ? error[name_input] = '' : error[name_input] = \"* Format: +33610122334\";\n          break;\n\n        case 'codeVerification':\n          value_input.match(regex.codeVerification) && value_input.length === 6 ? error[name_input] = '' : error[name_input] = \"*Code incorrect ex: 123456\";\n          break;\n\n        default:\n          console.log(\"NUMBER NOT FOUND\");\n      }\n\n      this.setState({\n        error: error\n      }, () => {\n        this.handleFormValid(name_input);\n      });\n    };\n\n    this.handleInput = event => {\n      const nameInput = event.target.id;\n      const valueInput = event.target.value;\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        this.handleInputValid(nameInput, valueInput);\n      });\n    };\n\n    this.sendCode = e => {\n      e.preventDefault();\n      firebase.auth().languageCode = 'fr';\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      let phoneNumber = this.state.phone;\n      let appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        this.setState({\n          show: true,\n          disable: true\n        }, () => {\n          window.confirmationResult = confirmationResult;\n        });\n      }).catch(error => {\n        this.setState({\n          errorCatch: error.message\n        });\n      });\n    };\n\n    this.receiveCode = e => {\n      e.preventDefault();\n      const verificationId = this.state.codeVerification;\n      window.confirmationResult.confirm(verificationId).then(result => {\n        localStorage.setItem('id', result.user.uid);\n        localStorage.setItem('token', result.user.ma);\n        localStorage.setItem('show', true);\n        this.props.onPhone(result.user.ma, result.user.uid);\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          codeError: 'Error'\n        });\n      });\n    };\n  }\n\n  render() {\n    let msgCatch;\n    if (this.state.errorCatch && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 24\n      }\n    }, \"Trop d'essai votre compte a \\xE9t\\xE9 temporairement suspendu. Reesayer plus tard\");\n    if (this.state.codeError) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }\n    }, \"le code ne coresspond pas a celui qui vous a \\xE9t\\xE9 envoyer veuillez ressayer\");\n    return (\n      /*#__PURE__*/\n      //IL FAUT ENLEVER LE NUMERO DE TELEPHONE DANS LE INPUT QUAND ON VALIDE LA PREMIERE FOIS.\n      React.createElement(Form, {\n        className: \"login-form eiga-form\",\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, msgCatch, /*#__PURE__*/React.createElement(MyInput, {\n        label: this.state.show === false ? \"Connexion via Smarthpone\" : \"Entrer Votre Code\",\n        id: this.state.show === false ? \"phone\" : \"codeVerification\",\n        type: \"tel\",\n        placeholder: this.state.show === false ? \"ex:+33610122325\" : \"Tapez le code de verification\",\n        error: this.state.show === false ? this.state.error.phone : this.state.error.codeVerification,\n        changed: this.handleInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, \" \", this.state.show === false ? 'Entrer votre numero de mobile pour recevoir un code par SMS' : 'Entrer le code reÃ§u par SMS'), /*#__PURE__*/React.createElement(MyButton, {\n        id: \"recaptcha-container\",\n        disabled: this.state.disable,\n        clicked: this.state.show === false ? this.sendCode : this.receiveCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      })))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Phone));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/Login/AuthPhone/AuthPhone.jsx"],"names":["React","Component","Form","firebase","regex","withRouter","actions","connect","MyInput","MyButton","Phone","state","phone","codeVerification","error","errorCatch","disable","userId","show","codeError","handleFormValid","name_input","number","store","values","Object","key","keys","length","setState","console","log","disable1","handleInputValid","value_input","match","phoneNumber","handleInput","event","nameInput","target","id","valueInput","value","sendCode","e","preventDefault","auth","languageCode","window","recaptchaVerifier","RecaptchaVerifier","size","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","message","receiveCode","verificationId","confirm","result","localStorage","setItem","user","uid","ma","props","onPhone","history","push","render","msgCatch","onSubmit","mapDispatchToProps","dispatch","token","authSuccess"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap'\nimport firebase from '../../../../fire';\nimport * as regex from './RegexPhone'\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MyInput from '../../../../components/MyInput/MyInput';\nimport MyButton from '../../../../components/MyButton/MyButton';\nimport '../../auth.css';\n\nclass Phone extends Component {\n    state = {\n        phone:null,\n        codeVerification:null,\n        error:{},\n        errorCatch:'',\n        disable:true,\n        // disable1:true,\n        userId: null,\n        show: false,\n        codeError:null\n    }\n\n    handleFormValid = (name_input) => { \n        let number = null;\n        let store = ''; \n\n        name_input === 'phon'\n        const error = {...this.state.error};\n        const values = Object.values(error);\n        for (const key of values)\n            store += key;\n        Object.keys(error).length === number && store.length === 0 ? this.setState({disable:false}) : this.setState({disable:true},()=>{console.log(this.state.disable1)});\n    }\n\n    // handleFormValidphone = () => { \n    //     let store = ''; \n    //     const error = {...this.state.error};\n    //     const values = Object.values(error);\n    //     for (const key of values)\n    //         store += key;\n    //     Object.keys(error).length === 1 && store.length === 0 ? this.setState({disable:false}) : this.setState({disable:true},()=>{console.log(this.state.disable)});\n    // }\n\n    handleInputValid = (name_input,value_input) => {\n        let error = {...this.state.error};\n        switch(name_input){\n            case 'phone': value_input.match(regex.phoneNumber) ? error[name_input]='' : error[name_input] = \"* Format: +33610122334\";\n                break;\n            case 'codeVerification':value_input.match(regex.codeVerification) && value_input.length === 6 ? error[name_input]='' : error[name_input] = \"*Code incorrect ex: 123456\";\n                 break;\n            default:\n                console.log(\"NUMBER NOT FOUND\");\n        }\n        this.setState({ error : error }, () => {this.handleFormValid(name_input)});\n\n    }\n\n    handleInput = (event) => {\n        const nameInput = event.target.id;\n        const valueInput = event.target.value;\n        this.setState({[event.target.id]:event.target.value},\n            () => {this.handleInputValid(nameInput,valueInput)    \n        });\n    }\n\n    sendCode = (e) => {  \n        e.preventDefault();\n        firebase.auth().languageCode = 'fr';\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\",\n        {\n           size:\"invisible\"\n        });\n        let phoneNumber = this.state.phone;\n        let appVerifier = window.recaptchaVerifier;\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then(confirmationResult => { \n            this.setState({ show: true, disable : true }, () => {\n                window.confirmationResult = confirmationResult;\n            })\n        })\n        .catch(error => {\n            this.setState({errorCatch:error.message})\n        });\n    }\n        \n    receiveCode= (e) => {\n        e.preventDefault();\n        const verificationId = this.state.codeVerification;\n        window.confirmationResult\n        .confirm(verificationId)\n        .then(result => {\n            localStorage.setItem('id',result.user.uid)\n            localStorage.setItem('token', result.user.ma)\n            localStorage.setItem('show', true)\n            this.props.onPhone(result.user.ma,result.user.uid);\n            this.props.history.push('/home')\n        })\n        .catch(error => {\n            this.setState({codeError:'Error'});\n        });\n    }\n\n    render() {\n        let msgCatch;\n\n        if (this.state.errorCatch && this.state.codeError === null)\n            msgCatch = <p>Trop d'essai votre compte a Ã©tÃ© temporairement suspendu. Reesayer plus tard</p>;\n        \n        if (this.state.codeError)\n            msgCatch = <p>le code ne coresspond pas a celui qui vous a Ã©tÃ© envoyer veuillez ressayer</p>;\n        \n        return (\n            //IL FAUT ENLEVER LE NUMERO DE TELEPHONE DANS LE INPUT QUAND ON VALIDE LA PREMIERE FOIS.\n            <Form className=\"login-form eiga-form\" onSubmit={this.onSubmit}>\n                <div className=\"login-form-content\">\n                    {msgCatch}\n                    <MyInput \n                        label={this.state.show === false ? \"Connexion via Smarthpone\" : \"Entrer Votre Code\"} \n                        id={this.state.show === false ? \"phone\": \"codeVerification\" }\n                        type=\"tel\"\n                        placeholder={this.state.show === false ? \"ex:+33610122325\" : \"Tapez le code de verification\"}\n                        error={this.state.show === false ? this.state.error.phone : this.state.error.codeVerification} \n                        changed={this.handleInput}/>\n                    <p> {this.state.show === false ? \n                        'Entrer votre numero de mobile pour recevoir un code par SMS' : \n                        'Entrer le code reÃ§u par SMS'}\n                    </p>\n                    <MyButton id=\"recaptcha-container\" disabled={this.state.disable} clicked={this.state.show === false ? this.sendCode : this.receiveCode}/>\n                </div>\n            </Form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n    };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps) (Phone));\n"]},"metadata":{},"sourceType":"module"}