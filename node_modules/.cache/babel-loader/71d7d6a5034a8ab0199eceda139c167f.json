{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport firebase from '../../fire';\nexport const hideToolbarAndFooter = () => {\n  console.log('11111');\n  return {\n    type: actionTypes.HIDE_TOOLBAR_AND_FOOTER\n  };\n};\nexport const errorServor = error => {\n  return {\n    type: actionTypes.AUTH_ERROR,\n    error: error\n  };\n};\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('id');\n  localStorage.removeItem('token');\n  localStorage.removeItem('name');\n  localStorage.removeItem('photo');\n  localStorage.removeItem('email');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const registerSuccess = value => {\n  return {\n    type: actionTypes.REGISTER_SUCCESS,\n    value: value\n  };\n};\nexport const authRegister = (email, password, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData).then(response => {\n      dispatch(errorServor('Votre compte viens d\\'etre creer, vous allez etre rediriger dans quelques instant'));\n      dispatch(registerSuccess(true));\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      setTimeout(() => {\n        history.push('/home');\n      }, 3000);\n    }).catch(err => {\n      dispatch(errorServor('Cet email existe Deja!'));\n    });\n  };\n};\nexport const authLogin = (email, password, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData).then(response => {\n      localStorage.setItem('animation', true);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('id', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      history.push('/home');\n    }).catch(err => {\n      if (err.response.data.error.message === 'INVALID_PASSWORD') dispatch(errorServor('Mot de passe Invalid'));else if (err.response.data.error.message === 'EMAIL_NOT_FOUND') dispatch(errorServor('Mail Invalid'));\n    });\n  };\n};\nexport const socialTwitter = (provider, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    firebase.auth().signInWithPopup(provider).then(response => {\n      localStorage.setItem('animation', true);\n      localStorage.setItem('id', response.user.uid);\n      localStorage.setItem('token', response.credential.accessToken);\n      localStorage.setItem('name', response.user.displayName);\n      localStorage.setItem('photo', response.additionalUserInfo.profile.profile_image_url);\n      localStorage.setItem('email', response.user.email);\n      dispatch(authSuccess(response.credential.idToken, response.user.uid));\n      history.push('/home');\n    }).catch(err => {\n      console.log('eerrrr msg = ', err.message);\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const socialAuth = (provider, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    firebase.auth().signInWithPopup(provider).then(response => {\n      localStorage.setItem('animation', true);\n      localStorage.setItem('id', response.user.uid);\n      localStorage.setItem('token', response.credential.accessToken);\n      localStorage.setItem('name', response.user.displayName);\n      localStorage.setItem('photo', response.user.photoURL);\n      localStorage.setItem('email', response.user.email);\n      dispatch(authSuccess(response.credential.idToken, response.user.uid));\n      history.push('/home');\n    }).catch(err => {\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const authCheckState = () => {\n  console.log('[1] authCheckState');\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const id = localStorage.getItem('id');\n    if (!token) dispatch(authLogout());else {\n      console.log('[2]]');\n      dispatch(hideToolbarAndFooter());\n      dispatch(authSuccess(token, id));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/store/actions/auth.js"],"names":["actionTypes","axios","firebase","hideToolbarAndFooter","console","log","type","HIDE_TOOLBAR_AND_FOOTER","errorServor","error","AUTH_ERROR","authStart","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","AUTH_FAILED","authLogout","localStorage","removeItem","AUTH_LOGOUT","registerSuccess","value","REGISTER_SUCCESS","authRegister","email","password","history","dispatch","authData","returnSecureToken","post","then","response","data","localId","setTimeout","push","catch","err","authLogin","setItem","message","socialTwitter","provider","auth","signInWithPopup","user","uid","credential","accessToken","displayName","additionalUserInfo","profile","profile_image_url","socialAuth","photoURL","authCheckState","getItem","id"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport firebase from '../../fire';\n\nexport const hideToolbarAndFooter = () => {\n    console.log('11111')\n    return {\n        type: actionTypes.HIDE_TOOLBAR_AND_FOOTER,\n    }\n}\n\nexport const errorServor = (error) => {\n    return {\n        type: actionTypes.AUTH_ERROR,\n        error: error\n    };\n};\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        error: error\n    };\n};\n \nexport const authLogout = () => {\n    localStorage.removeItem('id')\n    localStorage.removeItem('token') \n    localStorage.removeItem('name')\n    localStorage.removeItem('photo')\n    localStorage.removeItem('email')\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    };\n};\n\nexport const registerSuccess = (value) => {\n    return {\n        type: actionTypes.REGISTER_SUCCESS,\n        value: value\n    };\n};\n\nexport const authRegister = (email, password, history) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData)\n            .then(response => {\n                dispatch(errorServor('Votre compte viens d\\'etre creer, vous allez etre rediriger dans quelques instant'));\n                dispatch(registerSuccess(true));\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                setTimeout( () => {\n                    history.push('/home')\n                }, 3000);\n            })\n            .catch(err => {\n                dispatch(errorServor('Cet email existe Deja!'));\n            })\n    };\n};\n\nexport const authLogin = (email, password, history) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData)\n            .then(response => {\n                localStorage.setItem('animation', true)\n                localStorage.setItem('token', response.data.idToken)\n                localStorage.setItem('id', response.data.localId)\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                history.push('/home');\n            })\n            .catch(err => {\n                if (err.response.data.error.message === 'INVALID_PASSWORD')\n                    dispatch(errorServor('Mot de passe Invalid'));\n                else if (err.response.data.error.message === 'EMAIL_NOT_FOUND')\n                    dispatch(errorServor('Mail Invalid'));\n            })\n    };\n};\n\nexport const socialTwitter = (provider,history) => {\n    return dispatch => {\n        dispatch(authStart());\n        firebase.auth().signInWithPopup(provider)\n            .then(response => {\n                localStorage.setItem('animation', true)\n                localStorage.setItem('id', response.user.uid)\n                localStorage.setItem('token', response.credential.accessToken)\n                localStorage.setItem('name', response.user.displayName)\n                localStorage.setItem('photo', response.additionalUserInfo.profile.profile_image_url)\n                localStorage.setItem('email', response.user.email)\n                dispatch(authSuccess(response.credential.idToken, response.user.uid));\n                history.push('/home');\n            })\n            .catch(err => {\n                console.log('eerrrr msg = ', err.message)\n                dispatch(authFail(err.message));\n            })  \n    };\n}\n\nexport const socialAuth = (provider,history) => {\n    return dispatch => {\n        dispatch(authStart());\n        firebase.auth().signInWithPopup(provider)\n            .then(response => {\n                localStorage.setItem('animation', true)\n                localStorage.setItem('id', response.user.uid)\n                localStorage.setItem('token', response.credential.accessToken)\n                localStorage.setItem('name', response.user.displayName)\n                localStorage.setItem('photo', response.user.photoURL)\n                localStorage.setItem('email', response.user.email)\n                dispatch(authSuccess(response.credential.idToken, response.user.uid));\n                history.push('/home');  \n            })\n            .catch(err => {\n                dispatch(authFail(err.message));\n            })  \n    };\n};\n\nexport const authCheckState = () => {\n    console.log('[1] authCheckState')\n    return (dispatch) => {\n        const token = localStorage.getItem('token');\n        const id = localStorage.getItem('id')\n        if (!token)\n            dispatch(authLogout());\n        else {\n            console.log('[2]]')\n            dispatch(hideToolbarAndFooter());\n            dispatch(authSuccess(token,id));\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}