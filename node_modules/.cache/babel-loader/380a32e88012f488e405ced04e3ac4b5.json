{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  movies: []\n};\n\nconst movies = (state, action) => {\n  return updateObject(state, {\n    movies: action.movies\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GENRE:\n      return genre(state, action);\n\n    case actionTypes.ORDRE:\n      return ordre(state, action);\n\n    case actionTypes.YEARS:\n      return years(state, action);\n\n    case actionTypes.TEXT_SEARCH:\n      return textSearch(state, action);\n\n    case actionTypes.MOVIES:\n      return movies(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/reducers/filtres.js"],"names":["actionTypes","updateObject","initialState","movies","state","action","reducer","type","GENRE","genre","ORDRE","ordre","YEARS","years","TEXT_SEARCH","textSearch","MOVIES"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAKA,MAAMA,MAAM,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAOJ,YAAY,CAAEG,KAAF,EAAS;AAAED,IAAAA,MAAM,EAAEE,MAAM,CAACF;AAAjB,GAAT,CAAnB;AAAyD,CAD3D;;AAGA,MAAMG,OAAO,GAAG,CAAEF,KAAK,GAAGF,YAAV,EAAwBG,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACE,IAAhB;AACE,SAAKP,WAAW,CAACQ,KAAjB;AAAwB,aAAOC,KAAK,CAACL,KAAD,EAAQC,MAAR,CAAZ;;AACxB,SAAKL,WAAW,CAACU,KAAjB;AAAwB,aAAOC,KAAK,CAACP,KAAD,EAAQC,MAAR,CAAZ;;AACxB,SAAKL,WAAW,CAACY,KAAjB;AAAwB,aAAOC,KAAK,CAACT,KAAD,EAAQC,MAAR,CAAZ;;AACxB,SAAKL,WAAW,CAACc,WAAjB;AAA8B,aAAOC,UAAU,CAACX,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKL,WAAW,CAACgB,MAAjB;AAAyB,aAAOb,MAAM,CAACC,KAAD,EAAQC,MAAR,CAAb;;AACzB;AAAS,aAAOD,KAAP;AANX;AAQD,CATD;;AAWA,eAAeE,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  movies: [],\n};\n\n\nconst movies = (state, action) => {\n  return updateObject( state, { movies: action.movies } );};\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.GENRE: return genre(state, action);\n    case actionTypes.ORDRE: return ordre(state, action);\n    case actionTypes.YEARS: return years(state, action);\n    case actionTypes.TEXT_SEARCH: return textSearch(state, action);\n    case actionTypes.MOVIES: return movies(state, action);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}