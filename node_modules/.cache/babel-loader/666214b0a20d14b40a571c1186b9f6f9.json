{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasMore: true\n    };\n\n    this.newMovie = () => {\n      console.log();\n      if ( // this.props.nbPage !== 0 && \n      this.props.page > this.props.nbPage) this.setState({\n        hasMore: false\n      });else if (this.props.next === 'filtres') this.props.filtresRequest(this.props.filtres, this.props.page + 1);else if (this.props.next === 'textSearch') this.props.textSearchRequest(this.props.textSearch, this.props.page + 1);else if (this.props.next === 'popular' || this.props.next === null) this.props.popularRequest(this.props.page + 1);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.movies.length === 0) this.newMovie();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.filtres !== this.props.filtres && (this.props.filtres.genre.value !== null || this.props.filtres.years.value !== null || this.props.filtres.sortby.value !== null)) {\n      this.props.initialise(1);\n      this.props.initialiseTextSearch();\n      this.props.filtresRequest(this.props.filtres, 1);\n    } else if (prevProps.textSearch !== this.props.textSearch && this.props.textSearch !== '') {\n      this.props.initialise(1);\n      this.props.initialiseFiltres();\n      this.props.textSearchRequest(this.props.textSearch, 1);\n    } else if (this.props.filtres.genre.value === null && this.props.filtres.years.value === null && this.props.filtres.sortby.value === null && this.props.textSearch === '' && prevProps.textSearch !== this.props.textSearch) {\n      this.props.initialise(1);\n      this.props.popularRequest(1);\n    }\n  }\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.props.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    });\n    if (this.props.noResult) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.movies.length,\n      next: this.newMovie,\n      hasMore: this.state.hasMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.movies.page,\n    nbPage: state.movies.nbPage,\n    filtres: state.movies.filtres,\n    textSearch: state.movies.textSearch,\n    movies: state.movies.movies,\n    next: state.movies.next,\n    noResult: state.movies.noResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initialise: value => dispatch(actions.initialise(value)),\n    initialiseFiltres: () => dispatch(actions.initialiseFiltres()),\n    initialiseTextSearch: () => dispatch(actions.initialiseTextSearch()),\n    popularRequest: page => dispatch(actions.popularRequest(page)),\n    filtresRequest: (filtres, page) => dispatch(actions.filtresRequest(filtres, page)),\n    textSearchRequest: (textSearch, page) => dispatch(actions.textSearchRequest(textSearch, page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","InfiniteScroll","connect","MovieItems","actions","MoviesList","state","hasMore","newMovie","console","log","props","page","nbPage","setState","next","filtresRequest","filtres","textSearchRequest","textSearch","popularRequest","componentDidMount","movies","length","componentDidUpdate","prevProps","genre","value","years","sortby","initialise","initialiseTextSearch","initialiseFiltres","render","clicked","noResult","color","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n  state = {\n    hasMore: true\n  }\n \n  componentDidMount () {\n    if (this.props.movies.length === 0) \n      this.newMovie();\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.filtres !== this.props.filtres && \n      (this.props.filtres.genre.value !== null || this.props.filtres.years.value !== null || this.props.filtres.sortby.value !== null)) {\n      this.props.initialise(1);\n      this.props.initialiseTextSearch();\n      this.props.filtresRequest(this.props.filtres, 1);\n    }\n    else if (prevProps.textSearch !== this.props.textSearch \n      && (this.props.textSearch !== '')) {\n      this.props.initialise(1);\n      this.props.initialiseFiltres();\n      this.props.textSearchRequest(this.props.textSearch, 1);\n    }\n    else if ((this.props.filtres.genre.value === null && this.props.filtres.years.value === null && this.props.filtres.sortby.value === null) \n      && (this.props.textSearch === '' && prevProps.textSearch !== this.props.textSearch)) {\n      this.props.initialise(1);\n      this.props.popularRequest(1);\n    }\n  }\n\n  newMovie = () => {\n    console.log()\n    if (\n      // this.props.nbPage !== 0 && \n      this.props.page > this.props.nbPage) \n      this.setState({ hasMore: false });\n    else if (this.props.next === 'filtres')\n      this.props.filtresRequest(this.props.filtres, this.props.page + 1);\n    else if (this.props.next === 'textSearch')\n      this.props.textSearchRequest(this.props.textSearch, this.props.page + 1); \n    else if (this.props.next === 'popular' || this.props.next === null)\n      this.props.popularRequest(this.props.page + 1);\n  };\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) \n      movies = <MovieItems movies={this.props.movies} clicked={() => this.clicked()}/>\n    if (this.props.noResult)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat.</p>\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength={this.props.movies.length}\n          next={this.newMovie}\n          hasMore={this.state.hasMore}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.movies.page,\n    nbPage: state.movies.nbPage,\n    filtres: state.movies.filtres,\n    textSearch: state.movies.textSearch,\n    movies: state.movies.movies,\n    next: state.movies.next,\n    noResult: state.movies.noResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initialise: (value) => dispatch(actions.initialise(value)),\n    initialiseFiltres: () => dispatch(actions.initialiseFiltres()),\n    initialiseTextSearch: () => dispatch(actions.initialiseTextSearch()),\n    popularRequest: (page) => dispatch(actions.popularRequest(page)),\n    filtresRequest: (filtres, page) => dispatch(actions.filtresRequest(filtres, page)),\n    textSearchRequest: (textSearch, page)=> dispatch(actions.textSearchRequest(textSearch, page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);"]},"metadata":{},"sourceType":"module"}