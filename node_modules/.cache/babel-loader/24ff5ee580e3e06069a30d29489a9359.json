{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/Sidebar/Filtre/Filtre.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport './Filtre.css';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nconst optionsGenre = [{\n  value: '28',\n  label: 'Action'\n}, {\n  value: '16',\n  label: 'Animation'\n}, {\n  value: '12',\n  label: 'Aventure'\n}, {\n  value: '35',\n  label: 'Comédie'\n}, {\n  value: '80',\n  label: 'Crime'\n}, {\n  value: '99',\n  label: 'Documentaire'\n}, {\n  value: '18',\n  label: 'Drame'\n}, {\n  value: '10751',\n  label: 'Familial'\n}, {\n  value: '14',\n  label: 'Fantastique'\n}, {\n  value: '36',\n  label: 'Histoire'\n}, {\n  value: '27',\n  label: 'Horreur'\n}, {\n  value: '10402',\n  label: 'Musique'\n}, {\n  value: '9648',\n  label: 'Mystére'\n}, {\n  value: '10749',\n  label: 'Romance'\n}, {\n  value: '878',\n  label: 'Science-fiction'\n}, {\n  value: '10770',\n  label: 'Téléfilm'\n}, {\n  value: '53',\n  label: 'Thriller'\n}, {\n  value: '10752',\n  label: 'Guerre'\n}, {\n  value: '37',\n  label: 'Western'\n}];\nconst optionsSortBy = [{\n  value: 'popularity.desc',\n  label: 'Popularité desc'\n}, {\n  value: 'popularity.asc',\n  label: 'Popularité asc'\n}, {\n  value: 'vote_average.desc',\n  label: 'Note desc'\n}, {\n  value: 'vote_average.asc',\n  label: 'Note asc'\n}];\nconst optionsYears = [];\n\nfor (let i = 1960; i <= 2020; i++) optionsYears.push({\n  value: i,\n  label: i\n});\n\nclass Categrories extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleChangeGenre = selectedGenre => {\n      this.props.changeGenre(selectedGenre);\n    };\n\n    this.handleChangeNote = selectedNote => {\n      this.props.changeNote(selectedNote);\n    };\n\n    this.handleChangeYears = selectedYears => {\n      this.props.changeYears(selectedYears);\n    };\n\n    this.handleChangeSortBy = selectedSortBy => {\n      this.props.changeOrdre(selectedSortBy);\n    };\n  }\n\n  render() {\n    const customStyles = {\n      control: () => ({\n        display: \"flex\",\n        backgroundColor: \"black\",\n        border: '1px solid white',\n        marginRight: \"15px\",\n        marginLeft: \"15px\",\n        width: '200px',\n        marginTop: \"30px\"\n      }),\n      placeholder: () => ({\n        color: \"white\"\n      }),\n      option: (provided, state) => ({ ...provided,\n        display: 'flex',\n        color: 'white',\n        fontWeight: state.isSelected ? 'bold' : null,\n        backgroundColor: state.isSelected ? 'grey' : 'black',\n        width: '100%',\n        '&:hover': {\n          backgroundColor: 'red'\n        }\n      }),\n      singleValue: () => ({\n        color: 'white',\n        widht: \"100%\"\n      })\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Filtres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Filtres2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      styles: customStyles,\n      value: this.props.genre,\n      placeholder: \"Genre\",\n      onChange: this.handleChangeGenre,\n      options: optionsGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Filtres2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      styles: customStyles,\n      value: this.props.years,\n      placeholder: \"Annee\",\n      onChange: this.handleChangeYears,\n      options: optionsYears,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      styles: customStyles,\n      value: this.props.ordre,\n      placeholder: \"Trier par\",\n      onChange: this.handleChangeSortBy,\n      options: optionsSortBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // const mapStateToProps = state => {\n//   return {\n//       genre: state.filtres.genre,\n//       ordre: state.filtres.ordre,\n//       years: state.filtres.years\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {// changeGenre: (genre) => dispatch(actions.genre(genre)),\n    // changeYears: (years) => dispatch(actions.years(years)),\n    // changeOrdre: (ordre) => dispatch(actions.ordre(ordre)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Categrories);","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/Sidebar/Filtre/Filtre.jsx"],"names":["React","Select","actions","connect","optionsGenre","value","label","optionsSortBy","optionsYears","i","push","Categrories","Component","state","handleChangeGenre","selectedGenre","props","changeGenre","handleChangeNote","selectedNote","changeNote","handleChangeYears","selectedYears","changeYears","handleChangeSortBy","selectedSortBy","changeOrdre","render","customStyles","control","display","backgroundColor","border","marginRight","marginLeft","width","marginTop","placeholder","color","option","provided","fontWeight","isSelected","singleValue","widht","genre","years","ordre","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport './Filtre.css';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\n\nconst optionsGenre = [\n  { value: '28', label: 'Action' },\n  { value: '16', label: 'Animation' },\n  { value: '12', label: 'Aventure' },\n  { value: '35', label: 'Comédie' },\n  { value: '80', label: 'Crime' },\n  { value: '99', label: 'Documentaire' },\n  { value: '18', label: 'Drame' },\n  { value: '10751', label: 'Familial' },\n  { value: '14', label: 'Fantastique' },\n  { value: '36', label: 'Histoire' },\n  { value: '27', label: 'Horreur' },\n  { value: '10402', label: 'Musique' },\n  { value: '9648', label: 'Mystére' },\n  { value: '10749', label: 'Romance' },\n  { value: '878', label: 'Science-fiction' },\n  { value: '10770', label: 'Téléfilm' },\n  { value: '53', label: 'Thriller' },\n  { value: '10752', label: 'Guerre' },\n  { value: '37', label: 'Western' },\n];\n\nconst optionsSortBy = [\n  { value: 'popularity.desc', label: 'Popularité desc' },\n  { value: 'popularity.asc', label: 'Popularité asc' },\n  { value: 'vote_average.desc', label: 'Note desc' },\n  { value: 'vote_average.asc', label: 'Note asc' },\n];\n\n\nconst optionsYears = [];\n  for (let i = 1960; i <= 2020; i++) \n    optionsYears.push({ value: i, label: i });\n\nclass Categrories extends React.Component {\n  state ={\n    \n    }\n  \n\n  handleChangeGenre = selectedGenre => {\n    this.props.changeGenre(selectedGenre);\n  };\n\n  handleChangeNote = selectedNote => {\n      this.props.changeNote(selectedNote);\n  };\n\n  handleChangeYears = selectedYears => {\n      this.props.changeYears(selectedYears);\n  };\n\n  handleChangeSortBy = selectedSortBy => {\n      this.props.changeOrdre(selectedSortBy);\n  };\n\n  render() {\n    const customStyles=  {\n      control: () => ({\n        display:\"flex\",\n        backgroundColor:\"black\",\n        border: '1px solid white',\n        marginRight:\"15px\",\n        marginLeft:\"15px\",\n        width:'200px',\n        marginTop:\"30px\"\n      }),\n      placeholder: () => ({\n        color: \"white\"\n      }),\n      option: (provided, state) => ({\n        ...provided,\n        display: 'flex',\n        color: 'white',\n        fontWeight: state.isSelected ? 'bold' : null,\n        backgroundColor: state.isSelected ? 'grey' : 'black',\n        width:'100%',\n        '&:hover': {\n          backgroundColor: 'red'\n        }\n      }),\n      singleValue: () => ({\n        color: 'white',\n        widht:\"100%\"\n      }),\n    }\n \n    return (\n      <div className=\"Filtres\">\n        <div className=\"Filtres2\">\n          <Select\n            styles={customStyles}\n            value={this.props.genre}\n            placeholder= \"Genre\"\n            onChange={this.handleChangeGenre}\n            options={optionsGenre}/>\n        </div>\n        <div className=\"Filtres2\">\n          <Select\n            styles={customStyles}\n            value={this.props.years}\n            placeholder=\"Annee\"\n            onChange={this.handleChangeYears}\n            options={optionsYears}/>\n          <Select\n            styles={customStyles}\n            value={this.props.ordre}\n            placeholder=\"Trier par\"\n            onChange={this.handleChangeSortBy}\n            options={optionsSortBy}/>\n          </div>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   return {\n//       genre: state.filtres.genre,\n//       ordre: state.filtres.ordre,\n//       years: state.filtres.years\n//   };\n// };\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // changeGenre: (genre) => dispatch(actions.genre(genre)),\n    // changeYears: (years) => dispatch(actions.years(years)),\n    // changeOrdre: (ordre) => dispatch(actions.ordre(ordre)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps) (Categrories);"]},"metadata":{},"sourceType":"module"}