{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/Login/AuthPhone/AuthPhone.jsx\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\nimport firebase from '../../../../fire';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MyInput from '../../../../components/MyInput/MyInput';\nimport MyButton from '../../../../components/MyButton/MyButton';\nimport '../../auth.css';\nimport { checkInput } from '../../../../components/utility/utility';\n\nclass Phone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {},\n      errors: {},\n      errorCatch: '',\n      disable: true,\n      show: false,\n      codeError: null\n    };\n\n    this.handleInput = (e, number) => {\n      console.log('111  --> ', e.target.value, '    values.phone --> ', this.state.values.phone);\n      const Id = e.target.id;\n      const values = { ...this.state.values\n      };\n      values[Id] = e.target.value;\n      this.setState({\n        values: values\n      }, () => {\n        let error = null;\n        error = checkInput(Id, values[Id]);\n        const errors = { ...this.state.errors\n        };\n        errors[Id] = error;\n        this.setState({\n          errors: errors\n        }, () => {\n          Object.values(this.state.errors).join('').length === 0 && Object.keys(this.state.errors).length === number ? this.setState({\n            disable: false\n          }) : this.setState({\n            disable: true\n          });\n        });\n      });\n    };\n\n    this.sendCode = e => {\n      e.preventDefault();\n      firebase.auth().languageCode = 'fr';\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      let phoneNumber = this.state.values.phone;\n      let initializePhone = { ...this.state.values\n      };\n      initializePhone[\"phone\"] = null;\n      let appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        this.setState({\n          show: true,\n          disable: true,\n          values: initializePhone\n        }, () => {\n          window.confirmationResult = confirmationResult;\n          phoneNumber = null;\n        });\n      }).catch(error => {\n        this.setState({\n          errorCatch: error.message\n        });\n      });\n    };\n\n    this.receiveCode = e => {\n      e.preventDefault();\n      const verificationId = this.state.values.codeVerification;\n      window.confirmationResult.confirm(verificationId).then(result => {\n        localStorage.setItem('id', result.user.uid);\n        localStorage.setItem('token', result.user.ma);\n        localStorage.setItem('show', true);\n        this.props.onPhone(result.user.ma, result.user.uid);\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          codeError: 'Error'\n        });\n      });\n    };\n  }\n\n  render() {\n    let msgCatch;\n    if (this.state.errorCatch && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }\n    }, \"Trop d'essai votre compte a \\xE9t\\xE9 temporairement suspendu. Reesayer plus tard\");\n    if (this.state.codeError) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }, \"le code ne coresspond pas a celui qui vous a \\xE9t\\xE9 envoyer veuillez ressayer\");\n    return (\n      /*#__PURE__*/\n      //IL FAUT ENLEVER LE NUMERO DE TELEPHONE DANS LE INPUT QUAND ON VALIDE LA PREMIERE FOIS.\n      React.createElement(Form, {\n        className: \"login-form eiga-form\",\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, msgCatch, /*#__PURE__*/React.createElement(MyInput, {\n        label: this.state.show === false ? \"Connexion via Smarthpone\" : \"Entrer Votre Code\",\n        id: this.state.show === false ? \"phone\" : \"codeVerification\",\n        type: \"tel\",\n        placeholder: this.state.show === false ? \"ex:+33610122325\" : \"Tapez le code de verification\",\n        error: this.state.show === false ? this.state.errors.phone : this.state.errors.codeVerification,\n        maxLength: this.state.show === false ? '12' : '6',\n        value: this.state.show === false ? 'phone' : 'code' // this.state.values.phone : this.state.values.codeVerification}\n        ,\n        changed: this.state.show === false ? e => this.handleInput(e, 1) : e => this.handleInput(e, 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, \" \", this.state.show === false ? 'Entrer votre numero de mobile pour recevoir un code par SMS' : 'Entrer le code reÃ§u par SMS'), /*#__PURE__*/React.createElement(MyButton, {\n        id: \"recaptcha-container\",\n        disabled: this.state.disable,\n        clicked: this.state.show === false ? e => this.sendCode(e) : this.receiveCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      })))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Phone));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/Login/AuthPhone/AuthPhone.jsx"],"names":["React","Component","Form","firebase","withRouter","actions","connect","MyInput","MyButton","checkInput","Phone","state","values","errors","errorCatch","disable","show","codeError","handleInput","e","number","console","log","target","value","phone","Id","id","setState","error","Object","join","length","keys","sendCode","preventDefault","auth","languageCode","window","recaptchaVerifier","RecaptchaVerifier","size","phoneNumber","initializePhone","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","message","receiveCode","verificationId","codeVerification","confirm","result","localStorage","setItem","user","uid","ma","props","onPhone","history","push","render","msgCatch","onSubmit","mapDispatchToProps","dispatch","token","userId","authSuccess"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form } from 'react-bootstrap'\nimport firebase from '../../../../fire';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport MyInput from '../../../../components/MyInput/MyInput';\nimport MyButton from '../../../../components/MyButton/MyButton';\nimport '../../auth.css';\nimport { checkInput } from '../../../../components/utility/utility';\n\nclass Phone extends Component {\n    state = {\n        values: {},\n        errors: {},\n        errorCatch:'',\n        disable: true,\n        show: false,\n        codeError: null\n    }\n\n    handleInput = (e, number) => {\n        console.log('111  --> ', e.target.value, '    values.phone --> ', this.state.values.phone)\n        const Id = e.target.id;\n        const values = {...this.state.values};\n        values[Id] = e.target.value;\n        this.setState({ values : values }, () => {\n            let error = null;\n            error = checkInput(Id, values[Id]);\n            const errors = {...this.state.errors};\n            errors[Id]= error;\n            this.setState({ errors: errors }, () => {\n                Object.values(this.state.errors).join('').length === 0 && Object.keys(this.state.errors).length === number ? \n                this.setState({ disable: false }) : this.setState({ disable: true });\n            })\n        });\n    }\n\n    sendCode = (e) => {  \n        e.preventDefault();\n        firebase.auth().languageCode = 'fr';\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", { size:\"invisible\" });\n        let phoneNumber = this.state.values.phone;\n        let initializePhone = {...this.state.values};\n        initializePhone[\"phone\"] = null;\n        let appVerifier = window.recaptchaVerifier;\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n            .then(confirmationResult => { \n                this.setState({ show: true, disable : true, values: initializePhone }, () => {\n                    window.confirmationResult = confirmationResult;\n                    phoneNumber = null;\n                })\n            })\n            .catch(error => {\n                this.setState({errorCatch:error.message})\n            });\n    }\n        \n    receiveCode = (e) => {\n        e.preventDefault();\n        const verificationId = this.state.values.codeVerification;\n        window.confirmationResult\n        .confirm(verificationId)\n        .then(result => {\n            localStorage.setItem('id',result.user.uid)\n            localStorage.setItem('token', result.user.ma)\n            localStorage.setItem('show', true)\n            this.props.onPhone(result.user.ma,result.user.uid);\n            this.props.history.push('/home')\n        })\n        .catch(error => {\n            this.setState({codeError:'Error'});\n        });\n    }\n\n    render() {\n        let msgCatch;\n\n        if (this.state.errorCatch && this.state.codeError === null)\n            msgCatch = <p>Trop d'essai votre compte a Ã©tÃ© temporairement suspendu. Reesayer plus tard</p>;\n        \n        if (this.state.codeError)\n            msgCatch = <p>le code ne coresspond pas a celui qui vous a Ã©tÃ© envoyer veuillez ressayer</p>;\n\n        return (\n            //IL FAUT ENLEVER LE NUMERO DE TELEPHONE DANS LE INPUT QUAND ON VALIDE LA PREMIERE FOIS.\n            <Form className=\"login-form eiga-form\" onSubmit={this.onSubmit}>\n                <div className=\"login-form-content\">\n                    {msgCatch}\n                    <MyInput \n                        label={this.state.show === false ? \"Connexion via Smarthpone\" : \"Entrer Votre Code\"} \n                        id={this.state.show === false ? \"phone\": \"codeVerification\" }\n                        type=\"tel\"\n                        placeholder={this.state.show === false ? \"ex:+33610122325\" : \"Tapez le code de verification\"}\n                        error={this.state.show === false ? this.state.errors.phone : this.state.errors.codeVerification} \n                        maxLength={this.state.show === false? '12' : '6'}\n                        value={this.state.show === false ? 'phone' : 'code' } \n                            // this.state.values.phone : this.state.values.codeVerification}\n                        changed={this.state.show === false ? (e) => this.handleInput(e, 1) : (e) => this.handleInput(e, 2)}/>\n                    <p> {this.state.show === false ? \n                        'Entrer votre numero de mobile pour recevoir un code par SMS' :  \n                        'Entrer le code reÃ§u par SMS'}\n                    </p>\n                    <MyButton id=\"recaptcha-container\" disabled={this.state.disable} clicked={this.state.show === false ? (e) => this.sendCode(e) : this.receiveCode}/>\n                </div>\n            </Form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n    };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps) (Phone));\n"]},"metadata":{},"sourceType":"module"}