{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from '../../containers/Home/MoviesList/api';\nexport const genre = genre => {\n  return {\n    type: actionTypes.GENRE,\n    genre: genre\n  };\n};\nexport const ordre = ordre => {\n  return {\n    type: actionTypes.ORDRE,\n    ordre: ordre\n  };\n};\nexport const years = years => {\n  return {\n    type: actionTypes.YEARS,\n    years: years\n  };\n}; // export const textSearch = (textSearch) => {\n//     return {\n//         type: actionTypes.TEXT_SEARCH,\n//         textSearch: textSearch\n//     }; \n// };\n\nexport const moviesFiltres = movies => {\n  return {\n    type: actionTypes.MOVIES_FILTRES,\n    movies: movies\n  };\n};\nexport const filtres = () => {\n  return dispatch => {\n    axios.get('https://api.themoviedb.org/3/discover/movie?api_key=1e32f5c452c2267d5367589e9864ab1c&with_genres=28').then(response => {\n      dispatch(moviesFiltres(response.data.result));\n    }).catch(err => console.log(err));\n  };\n};\nexport const textSearch = textSearch => {\n  return dispatch => {\n    axios.get(`${PATH_BASE}${PATH_SEARCH}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_LANGUE}fr${PATH_ADULT}\"&query='sonic'`).then(response => {\n      consol;\n      dispatch(moviesFiltres(response.data.result));\n    }).catch(err => console.log(err));\n  };\n};","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/actions/filtres.js"],"names":["actionTypes","axios","API_KEY","PATH_BASE","PATH_DISCOVER","PATH_MOVIE","PATH_SEARCH","PATH_PAGE","PATH_ADULT","PATH_LANGUE","genre","type","GENRE","ordre","ORDRE","years","YEARS","moviesFiltres","movies","MOVIES_FILTRES","filtres","dispatch","get","then","response","data","result","catch","err","console","log","textSearch","state","page","consol"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,aAA7B,EAA4CC,UAA5C,EAAwDC,WAAxD,EAAqEC,SAArE,EAAgFC,UAAhF,EAA4FC,WAA5F,QAAgH,sCAAhH;AACA,OAAO,MAAMC,KAAK,GAAIA,KAAD,IAAW;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEX,WAAW,CAACY,KADf;AAEHF,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,KAAK,GAAIA,KAAD,IAAW;AAC5B,SAAO;AACHF,IAAAA,IAAI,EAAEX,WAAW,CAACc,KADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,KAAK,GAAIA,KAAD,IAAW;AAC5B,SAAO;AACHJ,IAAAA,IAAI,EAAEX,WAAW,CAACgB,KADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM,C,CAOP;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,aAAa,GAAIC,MAAD,IAAY;AACrC,SAAO;AACHP,IAAAA,IAAI,EAAEX,WAAW,CAACmB,cADf;AAEHD,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAQP,OAAO,MAAME,OAAO,GAAG,MAAM;AACzB,SAAOC,QAAQ,IAAI;AACfpB,IAAAA,KAAK,CAACqB,GAAN,CAAU,qGAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACJ,aAAa,CAACO,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAd,CAAR;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,UAAU,GAAIA,UAAD,IAAgB;AAEtC,SAAOV,QAAQ,IAAI;AACfpB,IAAAA,KAAK,CAACqB,GAAN,CAAW,GAAEnB,SAAU,GAAEG,WAAY,GAAED,UAAW,GAAEH,OAAQ,GAAEK,SAAU,GAAE,KAAKyB,KAAL,CAAWC,IAAK,GAAExB,WAAY,KAAID,UAAW,iBAAvH,EACCe,IADD,CACMC,QAAQ,IAAI;AACdU,MAAAA,MAAM;AACNb,MAAAA,QAAQ,CAACJ,aAAa,CAACO,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAd,CAAR;AACH,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH,GAPD;AAQH,CAVM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from  '../../containers/Home/MoviesList/api';\nexport const genre = (genre) => {\n    return {\n        type: actionTypes.GENRE,\n        genre: genre\n    };\n};\n\nexport const ordre = (ordre) => {\n    return {\n        type: actionTypes.ORDRE,\n        ordre: ordre\n    };\n};\n\nexport const years = (years) => {\n    return {\n        type: actionTypes.YEARS,\n        years: years\n    }; \n};\n\n// export const textSearch = (textSearch) => {\n//     return {\n//         type: actionTypes.TEXT_SEARCH,\n//         textSearch: textSearch\n//     }; \n// };\n\nexport const moviesFiltres = (movies) => {\n    return {\n        type: actionTypes.MOVIES_FILTRES,\n        movies: movies\n    }\n};\n\n\nexport const filtres = () => {\n    return dispatch => {\n        axios.get('https://api.themoviedb.org/3/discover/movie?api_key=1e32f5c452c2267d5367589e9864ab1c&with_genres=28')\n            .then(response => {\n                dispatch(moviesFiltres(response.data.result));\n            })\n            .catch(err => console.log(err))\n    }\n}\n\nexport const textSearch = (textSearch) => {\n    \n    return dispatch => {\n        axios.get(`${PATH_BASE}${PATH_SEARCH}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_LANGUE}fr${PATH_ADULT}\"&query='sonic'`)\n        .then(response => {\n            consol\n            dispatch(moviesFiltres(response.data.result));\n        })\n        .catch(err => console.log(err))\n    }\n}"]},"metadata":{},"sourceType":"module"}