{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap'; // import axios from 'axios';\n// import Video from './Video/Video';\n// import Slider from './Slider/Slider';\n// import Presentation from './Presentation/Presentation';\n\nimport './Movie.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass MovieId extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n\n    this.infoMovie = () => {\n      window.scrollTo(0, 0);\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    Aos.init();\n    this._isMounted = true;\n    if (this._isMounted) this.props.movieData(this.props.match.params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) this.props.movieData(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let movieBackdropStyles = null; // if (!!this.props.movie.backdrop_path) {\n    //     movieBackdropStyles = {\n    //         backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n    //         backgroundRepeat: 'no-repeat',\n    //         backgroundSize:'cover',\n    //         minHeight:'100vh',\n    //         backgroundColor: 'black',\n    //         backgroundPosition:'center' \n    //     };\n    // }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      style: movieBackdropStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-aos\": \"flip-left\",\n      \"data-aos-duration\": \"2000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log();\n  return {\n    movie: state.movies.infoMovie\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    movieData: id => dispatch(actions.movieData(id))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MovieId));","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx"],"names":["React","Component","withRouter","Container","Aos","connect","actions","MovieId","_isMounted","infoMovie","window","scrollTo","submit","e","preventDefault","componentDidMount","init","props","movieData","match","params","id","componentDidUpdate","prevProps","componentWillUnmount","render","movieBackdropStyles","mapStateToProps","state","console","log","movie","movies","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;AACA;AACA;AACA;;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BO,UAD4B,GACf,KADe;;AAAA,SAmB5BC,SAnB4B,GAmBhB,MAAM;AACdC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,KArB2B;;AAAA,SAuB5BC,MAvB4B,GAuBlBC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF;AACH,KAzB2B;AAAA;;AAG5BC,EAAAA,iBAAiB,GAAI;AACjBX,IAAAA,GAAG,CAACY,IAAJ;AACA,SAAKR,UAAL,GAAkB,IAAlB;AACA,QAAI,KAAKA,UAAT,EACI,KAAKS,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACP;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC3B,QAAI,KAAKN,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,KAA+BE,SAAS,CAACJ,KAAV,CAAgBC,MAAhB,CAAuBC,EAA1D,EACI,KAAKJ,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACP;;AAEDG,EAAAA,oBAAoB,GAAG;AACnB,SAAKhB,UAAL,GAAkB,KAAlB;AACH;;AAUDiB,EAAAA,MAAM,GAAI;AACN,QAAIC,mBAAmB,GAAG,IAA1B,CADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAEA,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,kBAAS,WAAd;AAA0B,2BAAkB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAgBH;;AAxD2B;;AAyD/B;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAavB;AADf,GAAP;AAGD,CALH;;AAOE,MAAMwB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACHhB,IAAAA,SAAS,EAAGG,EAAD,IAAQa,QAAQ,CAAC5B,OAAO,CAACY,SAAR,CAAkBG,EAAlB,CAAD;AADxB,GAAP;AAGH,CAJC;;AAMF,eAAenB,UAAU,CAACG,OAAO,CAACsB,eAAD,EAAkBM,kBAAlB,CAAP,CAA8C1B,OAA9C,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n// import axios from 'axios';\n// import Video from './Video/Video';\n// import Slider from './Slider/Slider';\n// import Presentation from './Presentation/Presentation';\nimport './Movie.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index'\n\nclass MovieId extends Component {\n    _isMounted = false;\n    \n    componentDidMount () {\n        Aos.init();\n        this._isMounted = true;\n        if (this._isMounted)\n            this.props.movieData(this.props.match.params.id);\n    };\n\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.id !== prevProps.match.params.id)\n            this.props.movieData(this.props.match.params.id);\n    };\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    };\n\n    infoMovie = () => {\n        window.scrollTo(0, 0);\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n    };\n\n    render () { \n        let movieBackdropStyles = null;\n        // if (!!this.props.movie.backdrop_path) {\n        //     movieBackdropStyles = {\n        //         backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n        //         backgroundRepeat: 'no-repeat',\n        //         backgroundSize:'cover',\n        //         minHeight:'100vh',\n        //         backgroundColor: 'black',\n        //         backgroundPosition:'center' \n        //     };\n        // }\n\n        return (\n            <div className=\"Page\" style={movieBackdropStyles}>\n                <Container className='Container'>\n                    <div data-aos=\"flip-left\" data-aos-duration=\"2000\">\n                        {/* {this.props.movie && <Presentation\n                        movie={this.props.movie}\n                        youtubeKey={this.props.youtubeKey}\n                        years={this.props.release_date}\n                        acteurs={this.props.infoMovie.acteurs} \n                        genre={this.state.genre}/>}\n                        {this.state.youtubeKey && <Video id={this.state.youtubeKey}/>} */}\n                        {/* <Slider idMovie={this.state.id}/> */}\n                    </div>\n                </Container>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = state => {\n    console.log()\n    return {\n      movie: state.movies.infoMovie\n    };\n  };\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n        movieData: (id) => dispatch(actions.movieData(id))\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (MovieId));\n"]},"metadata":{},"sourceType":"module"}