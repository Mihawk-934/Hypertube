{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  cart: [{\n    title: 'Peninsula',\n    id: 581392,\n    img: \"/eFQDY2GcVRhWl0hYJw55iP1JKYn.jpg\",\n    price: 1000,\n    qte: 1,\n    title: \"Peninsula\"\n  } // {\n  //     title: 'FILM 2',\n  //     price: 2000,\n  //     id: 2,\n  //     qte: 1\n  // },\n  // {\n  //     title: 'FILM 3',\n  //     price: 3000,\n  //     id: 3,\n  //     qte: 1\n  // },\n  // {\n  //     title: 'FILM 4',\n  //     price: 4000,\n  //     id: 4,\n  //     qte: 1\n  // },\n  ],\n  total: 0,\n  qte: 0\n};\n\nconst addToCart = (state, action) => {\n  let tab = [...state.cart];\n  let value = {\n    title: action.movie.title,\n    price: 1000,\n    id: action.movie.id,\n    qte: 1,\n    img: action.movie.poster_path\n  };\n  let ok = true;\n  tab.filter(cartItem => {\n    if (cartItem.id === action.id) {\n      cartItem.qte += 1;\n      ok = false;\n    }\n  });\n  console.log(value);\n  console.log(tab);\n  if (ok === true) tab.push(value);\n  return updateObject(state, {\n    cart: tab\n  });\n};\n\nconst removeToCart = (state, action) => {\n  return updateObject(state, {\n    cart: state.cart.filter(cartItem => cartItem.id !== action.id)\n  });\n};\n\nconst resetCart = state => {\n  return updateObject(state, {\n    cart: []\n  });\n};\n\nconst increase = (state, action) => {\n  let tempCart = state.cart.map(cartItem => {\n    if (cartItem.id === action.id) cartItem = { ...cartItem,\n      qte: cartItem.qte + 1\n    };\n    return cartItem;\n  });\n  return { ...state,\n    cart: tempCart\n  };\n};\n\nconst decrease = (state, action) => {\n  let tempCart = state.cart.map(cartItem => {\n    if (cartItem.id === action.id) cartItem = { ...cartItem,\n      qte: cartItem.qte - 1\n    };\n    return cartItem;\n  });\n  return { ...state,\n    cart: tempCart\n  };\n};\n\nconst getTotals = state => {\n  let {\n    total,\n    qte\n  } = state.cart.reduce((cartTotal, cartItem) => {\n    const itemTotal = cartItem.price * cartItem.qte;\n    cartTotal.total += itemTotal;\n    cartTotal.qte += cartItem.qte;\n    return cartTotal;\n  }, {\n    total: 0,\n    qte: 0\n  });\n  total = parseFloat(total.toFixed(2));\n  return { ...state,\n    total,\n    qte\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return addToCart(state, action);\n\n    case actionTypes.REMOVE_TO_CART:\n      return removeToCart(state, action);\n\n    case actionTypes.RESET_CART:\n      return resetCart(state, action);\n\n    case actionTypes.INCREASE:\n      return increase(state, action);\n\n    case actionTypes.DECREASE:\n      return decrease(state, action);\n\n    case actionTypes.GET_TOTAL:\n      return getTotals(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix/src/store/reducers/cart.js"],"names":["actionTypes","updateObject","initialState","cart","title","id","img","price","qte","total","addToCart","state","action","tab","value","movie","poster_path","ok","filter","cartItem","console","log","push","removeToCart","resetCart","increase","tempCart","map","decrease","getTotals","reduce","cartTotal","itemTotal","parseFloat","toFixed","reducer","type","ADD_TO_CART","REMOVE_TO_CART","RESET_CART","INCREASE","DECREASE","GET_TOTAL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CACF;AACIC,IAAAA,KAAK,EAAE,WADX;AAEIC,IAAAA,EAAE,EAAE,MAFR;AAGIC,IAAAA,GAAG,EAAE,kCAHT;AAIIC,IAAAA,KAAK,EAAE,IAJX;AAMIC,IAAAA,GAAG,EAAE,CANT;AAOIJ,IAAAA,KAAK,EAAE;AAPX,GADE,CAUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BE,GADW;AA8BjBK,EAAAA,KAAK,EAAE,CA9BU;AA+BjBD,EAAAA,GAAG,EAAE;AA/BY,CAArB;;AAkCA,MAAME,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIC,GAAG,GAAG,CAAC,GAAGF,KAAK,CAACR,IAAV,CAAV;AAEA,MAAIW,KAAK,GAAG;AACRV,IAAAA,KAAK,EAAEQ,MAAM,CAACG,KAAP,CAAaX,KADZ;AAERG,IAAAA,KAAK,EAAE,IAFC;AAGRF,IAAAA,EAAE,EAAEO,MAAM,CAACG,KAAP,CAAaV,EAHT;AAIRG,IAAAA,GAAG,EAAE,CAJG;AAKRF,IAAAA,GAAG,EAAEM,MAAM,CAACG,KAAP,CAAaC;AALV,GAAZ;AAOA,MAAIC,EAAE,GAAG,IAAT;AACAJ,EAAAA,GAAG,CAACK,MAAJ,CAAWC,QAAQ,IAAI;AACtB,QAAIA,QAAQ,CAACd,EAAT,KAAgBO,MAAM,CAACP,EAA3B,EAA+B;AAC3Bc,MAAAA,QAAQ,CAACX,GAAT,IAAgB,CAAhB;AACGS,MAAAA,EAAE,GAAG,KAAL;AACP;AAGA,GAPD;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,MAAII,EAAE,KAAK,IAAX,EACIJ,GAAG,CAACS,IAAJ,CAASR,KAAT;AACJ,SAAOb,YAAY,CAAEU,KAAF,EAAS;AAAER,IAAAA,IAAI,EAAEU;AAAR,GAAT,CAAnB;AACH,CAxBD;;AA0BA,MAAMU,YAAY,GAAG,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOX,YAAY,CAAEU,KAAF,EAAS;AACxBR,IAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAN,CAAWe,MAAX,CAAmBC,QAAD,IAAcA,QAAQ,CAACd,EAAT,KAAgBO,MAAM,CAACP,EAAvD;AADkB,GAAT,CAAnB;AAGH,CAJD;;AAMA,MAAMmB,SAAS,GAAIb,KAAD,IAAY;AAC1B,SAAOV,YAAY,CAAEU,KAAF,EAAS;AAC1BR,IAAAA,IAAI,EAAE;AADoB,GAAT,CAAnB;AAGH,CAJD;;AAMA,MAAMsB,QAAQ,GAAG,CAACd,KAAD,EAAQC,MAAR,KAAmB;AAChC,MAAIc,QAAQ,GAAGf,KAAK,CAACR,IAAN,CAAWwB,GAAX,CAAeR,QAAQ,IAAI;AACtC,QAAIA,QAAQ,CAACd,EAAT,KAAgBO,MAAM,CAACP,EAA3B,EACIc,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAeX,MAAAA,GAAG,EAAEW,QAAQ,CAACX,GAAT,GAAe;AAAnC,KAAX;AACJ,WAAOW,QAAP;AACH,GAJc,CAAf;AAKA,SAAO,EAAE,GAAGR,KAAL;AAAYR,IAAAA,IAAI,EAAEuB;AAAlB,GAAP;AACH,CAPD;;AASA,MAAME,QAAQ,GAAG,CAACjB,KAAD,EAAQC,MAAR,KAAmB;AAChC,MAAIc,QAAQ,GAAGf,KAAK,CAACR,IAAN,CAAWwB,GAAX,CAAeR,QAAQ,IAAI;AACtC,QAAIA,QAAQ,CAACd,EAAT,KAAgBO,MAAM,CAACP,EAA3B,EACIc,QAAQ,GAAG,EAAE,GAAGA,QAAL;AAAeX,MAAAA,GAAG,EAAEW,QAAQ,CAACX,GAAT,GAAe;AAAnC,KAAX;AACJ,WAAOW,QAAP;AACH,GAJc,CAAf;AAKA,SAAO,EAAE,GAAGR,KAAL;AAAYR,IAAAA,IAAI,EAAEuB;AAAlB,GAAP;AACH,CAPD;;AASA,MAAMG,SAAS,GAAIlB,KAAD,IAAW;AACzB,MAAI;AAAEF,IAAAA,KAAF;AAASD,IAAAA;AAAT,MAAiBG,KAAK,CAACR,IAAN,CAAW2B,MAAX,CACjB,CAACC,SAAD,EAAYZ,QAAZ,KAAyB;AACrB,UAAMa,SAAS,GAAGb,QAAQ,CAACZ,KAAT,GAAiBY,QAAQ,CAACX,GAA5C;AACAuB,IAAAA,SAAS,CAACtB,KAAV,IAAmBuB,SAAnB;AACAD,IAAAA,SAAS,CAACvB,GAAV,IAAiBW,QAAQ,CAACX,GAA1B;AACA,WAAOuB,SAAP;AACH,GANgB,EAOjB;AACItB,IAAAA,KAAK,EAAE,CADX;AAEID,IAAAA,GAAG,EAAE;AAFT,GAPiB,CAArB;AAYAC,EAAAA,KAAK,GAAGwB,UAAU,CAACxB,KAAK,CAACyB,OAAN,CAAc,CAAd,CAAD,CAAlB;AACA,SAAO,EAAC,GAAGvB,KAAJ;AAAWF,IAAAA,KAAX;AAAkBD,IAAAA;AAAlB,GAAP;AACH,CAfD;;AAiBA,MAAM2B,OAAO,GAAG,CAAExB,KAAK,GAAGT,YAAV,EAAwBU,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACwB,IAAhB;AACE,SAAKpC,WAAW,CAACqC,WAAjB;AAA8B,aAAO3B,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC9B,SAAKZ,WAAW,CAACsC,cAAjB;AAAiC,aAAOf,YAAY,CAACZ,KAAD,EAAQC,MAAR,CAAnB;;AACjC,SAAKZ,WAAW,CAACuC,UAAjB;AAA6B,aAAOf,SAAS,CAACb,KAAD,EAAQC,MAAR,CAAhB;;AAC7B,SAAKZ,WAAW,CAACwC,QAAjB;AAA2B,aAAOf,QAAQ,CAACd,KAAD,EAAQC,MAAR,CAAf;;AAC3B,SAAKZ,WAAW,CAACyC,QAAjB;AAA2B,aAAOb,QAAQ,CAACjB,KAAD,EAAQC,MAAR,CAAf;;AAC3B,SAAKZ,WAAW,CAAC0C,SAAjB;AAA4B,aAAOb,SAAS,CAAClB,KAAD,CAAhB;;AAC5B;AAAS,aAAOA,KAAP;AAPX;AASD,CAVD;;AAYA,eAAewB,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    cart: [\n        {\n            title: 'Peninsula',\n            id: 581392,\n            img: \"/eFQDY2GcVRhWl0hYJw55iP1JKYn.jpg\",\n            price: 1000,\n          \n            qte: 1,\n            title: \"Peninsula\"\n        },\n        // {\n        //     title: 'FILM 2',\n        //     price: 2000,\n        //     id: 2,\n        //     qte: 1\n        // },\n        // {\n        //     title: 'FILM 3',\n        //     price: 3000,\n        //     id: 3,\n        //     qte: 1\n        // },\n        // {\n        //     title: 'FILM 4',\n        //     price: 4000,\n        //     id: 4,\n        //     qte: 1\n        // },\n    ],\n    total: 0,\n    qte: 0\n};\n\nconst addToCart = (state, action) => {\n    let tab = [...state.cart];\n\n    let value = {\n        title: action.movie.title,\n        price: 1000,\n        id: action.movie.id,\n        qte: 1,\n        img: action.movie.poster_path\n    }\n    let ok = true;\n    tab.filter(cartItem => {\n     if (cartItem.id === action.id) {\n         cartItem.qte += 1\n            ok = false\n    }\n    \n    \n    })\n    console.log(value);\n    console.log(tab);\n    if (ok === true)\n        tab.push(value)\n    return updateObject( state, { cart: tab })\n}\n\nconst removeToCart = (state, action) => {\n    return updateObject( state, { \n        cart: state.cart.filter((cartItem) => cartItem.id !== action.id)\n    })\n}\n\nconst resetCart = (state ) => {\n    return updateObject( state, { \n      cart: []\n    })\n}\n\nconst increase = (state, action) => {\n    let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.id)\n            cartItem = { ...cartItem, qte: cartItem.qte + 1 };\n        return cartItem;\n    })\n    return { ...state, cart: tempCart }\n}\n\nconst decrease = (state, action) => {\n    let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.id)\n            cartItem = { ...cartItem, qte: cartItem.qte - 1 };\n        return cartItem;\n    })\n    return { ...state, cart: tempCart }\n}\n\nconst getTotals = (state) => {\n    let { total, qte } = state.cart.reduce(\n        (cartTotal, cartItem) => {\n            const itemTotal = cartItem.price * cartItem.qte;\n            cartTotal.total += itemTotal;\n            cartTotal.qte += cartItem.qte;\n            return cartTotal;\n        },\n        {\n            total: 0,\n            qte: 0\n        }\n    );\n    total = parseFloat(total.toFixed(2));\n    return {...state, total, qte}\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.ADD_TO_CART: return addToCart(state, action);\n    case actionTypes.REMOVE_TO_CART: return removeToCart(state, action);\n    case actionTypes.RESET_CART: return resetCart(state, action);\n    case actionTypes.INCREASE: return increase(state, action);\n    case actionTypes.DECREASE: return decrease(state, action);\n    case actionTypes.GET_TOTAL: return getTotals(state);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}