{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/N 2/src/containers/Auth/Register/Register.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { checkInput } from \"../../../components/utility/utility\";\nimport Wrapper from '../../../hoc/Wrapper/Wrapper';\nimport MyInput from \"../../../components/MyInput/MyInput\";\nimport MyButton from \"../../../components/MyButton/MyButton\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport { Form, Spinner } from \"react-bootstrap\";\nimport '../auth.css';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {},\n      errors: {},\n      disabled: true,\n      form: [{\n        controlId: \"mail\",\n        label: \"Email\",\n        type: \"text\",\n        min: 4,\n        max: 40\n      }, {\n        controlId: \"password\",\n        label: \"Mot de passe\",\n        type: \"password\",\n        min: 6,\n        max: 15\n      }]\n    };\n\n    this.changedHandler = (e, min, max) => {\n      const Id = e.target.id;\n      const values = { ...this.state.values\n      };\n      values[Id] = e.target.value;\n      this.setState({\n        values: values\n      }, () => {\n        let error = null;\n        error = checkInput(Id, values[Id], min, max);\n        const errors = { ...this.state.errors\n        };\n        errors[Id] = error;\n        this.setState({\n          errors: errors\n        }, () => {\n          Object.values(this.state.errors).join('').length === 0 && Object.keys(this.state.errors).length === 2 ? this.setState({\n            disabled: false\n          }) : this.setState({\n            disabled: true\n          });\n        });\n      });\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      this.props.onAuth(this.state.values.mail, this.state.values.password, this.props.history);\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.initError(null);\n    this.props.initRegisterSuccess(false);\n  }\n\n  render() {\n    const form = /*#__PURE__*/React.createElement(Form, {\n      className: \"login-form eiga-form\",\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.state.form.map(input => /*#__PURE__*/React.createElement(MyInput, {\n      \"data-test\": input.label,\n      key: input.label,\n      controlId: input.controlId,\n      type: input.type,\n      label: input.label,\n      placeholder: input.label,\n      error: this.state.errors[input.controlId],\n      changed: e => this.changedHandler(e, input.min, input.max),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Deja membre ?\", /*#__PURE__*/React.createElement(NavLink, {\n      className: \"Link\",\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }\n    }, \" Connectez-vous\")), /*#__PURE__*/React.createElement(MyButton, {\n      \"data-test\": \"button\",\n      disabled: this.state.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"errorAuth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.props.errorServor), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, this.props.registerSuccess && /*#__PURE__*/React.createElement(Spinner, {\n      margin: \"auto\",\n      animation: \"border\",\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 71\n      }\n    }))));\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      form: form,\n      title: \"Inscription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    errorServor: state.auth.errorServor,\n    registerSuccess: state.auth.registerSuccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initRegisterSuccess: value => dispatch(actions.registerSuccess(value)),\n    initError: error => dispatch(actions.errorServor(error)),\n    onAuth: (email, password, router) => dispatch(actions.authRegister(email, password, router))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Register));","map":{"version":3,"sources":["/Users/miclaude/Desktop/N 2/src/containers/Auth/Register/Register.jsx"],"names":["React","Component","NavLink","withRouter","checkInput","Wrapper","MyInput","MyButton","connect","actions","Form","Spinner","Register","state","values","errors","disabled","form","controlId","label","type","min","max","changedHandler","e","Id","target","id","value","setState","error","Object","join","length","keys","submit","preventDefault","props","onAuth","mail","password","history","componentWillUnmount","initError","initRegisterSuccess","render","map","input","display","flexDirection","margin","errorServor","registerSuccess","mapStateToProps","auth","mapDispatchToProps","dispatch","email","router","authRegister"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { checkInput } from \"../../../components/utility/utility\";\nimport Wrapper from '../../../hoc/Wrapper/Wrapper';\nimport MyInput from \"../../../components/MyInput/MyInput\";\nimport MyButton from \"../../../components/MyButton/MyButton\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index'; \nimport { Form, Spinner } from \"react-bootstrap\";\nimport  '../auth.css';\n\nclass Register extends Component {\n  state = { \n    values: {},\n    errors: {},\n    disabled: true,\n    form: [\n      {\n        controlId: \"mail\",\n        label: \"Email\",\n        type: \"text\",\n        min: 4,\n        max: 40\n      },\n      {\n        controlId: \"password\",\n        label: \"Mot de passe\",\n        type: \"password\",\n        min: 6, \n        max: 15\n      }\n    ]\n  };\n\n  componentWillUnmount () {\n    this.props.initError(null);\n    this.props.initRegisterSuccess(false);\n  };\n\n  changedHandler = (e, min, max) => {\n    const Id = e.target.id;\n    const values = {...this.state.values};\n    values[Id] = e.target.value;\n    this.setState({values : values}, () => {\n      let error = null;\n      error = checkInput(Id, values[Id], min, max);\n      const errors = {...this.state.errors};\n      errors[Id] = error;\n      this.setState({errors: errors}, () => { \n        Object.values(this.state.errors).join('').length === 0 && Object.keys(this.state.errors).length === 2 ? \n        this.setState({ disabled: false }) : this.setState({ disabled: true });\n      })\n    });\n  };\n\n  submit = e => {\n    e.preventDefault();\n    this.props.onAuth(this.state.values.mail, this.state.values.password, this.props.history);\n  };\n\n  render() {\n   \n    const form = (\n      <Form className=\"login-form eiga-form\" onSubmit={this.submit}>\n        <div className=\"login-form-content\">\n          {this.state.form.map(input => (\n            <MyInput\n              data-test={input.label}\n              key={input.label}\n              controlId={input.controlId}\n              type={input.type}\n              label={input.label}\n              placeholder={input.label}\n              error={this.state.errors[input.controlId]}\n              changed={(e) => this.changedHandler(e, input.min, input.max)}\n            />\n          ))}\n          <Form.Text className=\"mt-3\">\n            Deja membre ?<NavLink className='Link' to=\"/login\"> Connectez-vous</NavLink>\n          </Form.Text>\n          <MyButton data-test=\"button\" disabled={this.state.disabled} />\n        </div>\n        <div style={{display:'flex', flexDirection:'column', margin:'auto'}}>\n          <p className=\"errorAuth\">{this.props.errorServor}</p>\n          <div style={{margin:'auto'}}>{this.props.registerSuccess && <Spinner margin='auto' animation=\"border\" variant=\"danger\" />}</div>\n        </div> \n      </Form>\n    )\n\n    return (\n      <Wrapper form={form} title=\"Inscription\" />   \n    );\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    errorServor: state.auth.errorServor,\n    registerSuccess: state.auth.registerSuccess\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initRegisterSuccess: (value) => dispatch(actions.registerSuccess(value)),\n    initError: (error) => dispatch(actions.errorServor(error)),\n    onAuth: (email, password, router) => dispatch(actions.authRegister(email, password, router)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (Register));\n"]},"metadata":{},"sourceType":"module"}