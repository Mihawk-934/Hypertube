{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport { withRouter } from 'react-router-dom';\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from './api';\n\nclass MoviesList extends Component {\n  render() {\n    // let movies = null;\n    // if (this.state.movies !== null && this.state.movies.length > 0) \n    //   movies = <MovieItems movies={this.state.movies} clicked={() => this.clicked()}/>\n    // if (this.state.movies.length === 0)\n    //   movies = <p style={{ color: \"white\" }}>Il y a 0 resultat pour: \"{this.props.textSearch}\".</p>\n    let asyncPagination = null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll // dataLength={this.state.movies.length}\n    , {\n      next: asyncPagination,\n      hasMore: this.state.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 58\n        }\n      }, \"Yay! You have seen it all\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    textSearch: state.filtres.textSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actionTextSearch: () => dispatch(actions.textSearch(''))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MoviesList));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","axios","InfiniteScroll","connect","withRouter","MovieItems","actions","API_KEY","PATH_BASE","PATH_DISCOVER","PATH_MOVIE","PATH_SEARCH","PATH_PAGE","PATH_ADULT","PATH_LANGUE","MoviesList","render","asyncPagination","state","hasMore","textAlign","mapStateToProps","textSearch","filtres","mapDispatchToProps","dispatch","actionTextSearch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,8BAAzB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,aAA7B,EAA4CC,UAA5C,EAAwDC,WAAxD,EAAqEC,SAArE,EAAgFC,UAAhF,EAA4FC,WAA5F,QAAgH,OAAhH;;AAEA,MAAMC,UAAN,SAAyBf,SAAzB,CAAmC;AACjCgB,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AAEA,QAAIC,eAAe,GAAG,IAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAEA,eAFR;AAGE,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAHtB;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAKE,MAAA,UAAU,eAAE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAnC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AAtBgC;;AAyBnC,MAAMC,eAAe,GAAGH,KAAK,IAAI;AAC/B,SAAO;AAELI,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAcD;AAFrB,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AAELC,IAAAA,gBAAgB,EAAE,MAAMD,QAAQ,CAACnB,OAAO,CAACgB,UAAR,CAAmB,EAAnB,CAAD;AAF3B,GAAP;AAID,CALD;;AAOA,eAAelB,UAAU,CAACD,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,UAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport { withRouter } from 'react-router-dom';\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_SEARCH, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from  './api';\n\nclass MoviesList extends Component {\n  render() {\n    // let movies = null;\n    // if (this.state.movies !== null && this.state.movies.length > 0) \n    //   movies = <MovieItems movies={this.state.movies} clicked={() => this.clicked()}/>\n    // if (this.state.movies.length === 0)\n    //   movies = <p style={{ color: \"white\" }}>Il y a 0 resultat pour: \"{this.props.textSearch}\".</p>\n    \n    let asyncPagination = null;\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          // dataLength={this.state.movies.length}\n          next={asyncPagination}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! You have seen it all</b></p>}>\n          {/* {movies} */}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    \n    textSearch: state.filtres.textSearch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    \n    actionTextSearch: () => dispatch(actions.textSearch(''))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MoviesList));"]},"metadata":{},"sourceType":"module"}