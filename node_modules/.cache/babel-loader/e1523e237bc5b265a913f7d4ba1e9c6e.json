{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  cart: [{\n    title: 'FILM 1',\n    price: 1000,\n    id: 1,\n    qt\n  }, {\n    title: 'FILM 2',\n    price: 2000,\n    id: 2\n  }, {\n    title: 'FILM 3',\n    price: 3000,\n    id: 3\n  }, {\n    title: 'FILM 4',\n    price: 4000,\n    id: 4\n  }],\n  total: 0,\n  amount: 0\n};\n\nconst addToCart = (state, action) => {\n  return updateObject(state, {\n    count: state.count + 1\n  });\n};\n\nconst removeToCart = (state, action) => {\n  console.log(action.id);\n  return updateObject(state, {\n    cart: state.cart.filter(cartItem => cartItem.id !== action.id)\n  });\n};\n\nconst resetCart = (state, action) => {\n  // <=> return{ ...state, count: 0 }.\n  return updateObject(state, {\n    cart: []\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return addToCart(state, action);\n\n    case actionTypes.REMOVE_TO_CART:\n      return removeToCart(state, action);\n\n    case actionTypes.RESET_CART:\n      return resetCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix/src/store/reducers/cart.js"],"names":["actionTypes","updateObject","initialState","cart","title","price","id","qt","total","amount","addToCart","state","action","count","removeToCart","console","log","filter","cartItem","resetCart","reducer","type","ADD_TO_CART","REMOVE_TO_CART","RESET_CART"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CAAC;AACHC,IAAAA,KAAK,EAAE,QADJ;AAEHC,IAAAA,KAAK,EAAE,IAFJ;AAGHC,IAAAA,EAAE,EAAE,CAHD;AAIHC,IAAAA;AAJG,GAAD,EAMN;AACIH,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE,IAFX;AAGIC,IAAAA,EAAE,EAAE;AAHR,GANM,EAWN;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE,IAFX;AAGIC,IAAAA,EAAE,EAAE;AAHR,GAXM,EAgBN;AACIF,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,KAAK,EAAE,IAFX;AAGIC,IAAAA,EAAE,EAAE;AAHR,GAhBM,CADW;AAyBjBE,EAAAA,KAAK,EAAE,CAzBU;AA0BjBC,EAAAA,MAAM,EAAE;AA1BS,CAArB;;AA6BA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAOX,YAAY,CAAEU,KAAF,EAAS;AAC1BE,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc;AADK,GAAT,CAAnB;AAGD,CAJD;;AAMA,MAAMC,YAAY,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACpCG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACN,EAAnB;AACA,SAAOL,YAAY,CAAEU,KAAF,EAAS;AACxBR,IAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAN,CAAWc,MAAX,CAAmBC,QAAD,IAAcA,QAAQ,CAACZ,EAAT,KAAgBM,MAAM,CAACN,EAAvD;AADkB,GAAT,CAAnB;AAGH,CALD;;AAOA,MAAMa,SAAS,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACjC;AACA,SAAOX,YAAY,CAAEU,KAAF,EAAS;AAC1BR,IAAAA,IAAI,EAAE;AADoB,GAAT,CAAnB;AAGH,CALD;;AAOA,MAAMiB,OAAO,GAAG,CAAET,KAAK,GAAGT,YAAV,EAAwBU,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACS,IAAhB;AACE,SAAKrB,WAAW,CAACsB,WAAjB;AAA8B,aAAOZ,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AAC9B,SAAKZ,WAAW,CAACuB,cAAjB;AAAiC,aAAOT,YAAY,CAACH,KAAD,EAAQC,MAAR,CAAnB;;AACjC,SAAKZ,WAAW,CAACwB,UAAjB;AAA6B,aAAOL,SAAS,CAACR,KAAD,EAAQC,MAAR,CAAhB;;AAC7B;AAAS,aAAOD,KAAP;AAJX;AAMD,CAPD;;AASA,eAAeS,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    cart: [{\n        title: 'FILM 1',\n        price: 1000,\n        id: 1,\n        qt\n    },\n    {\n        title: 'FILM 2',\n        price: 2000,\n        id: 2\n    },\n    {\n        title: 'FILM 3',\n        price: 3000,\n        id: 3\n    },\n    {\n        title: 'FILM 4',\n        price: 4000,\n        id: 4\n    },\n\n\n    ],\n    total: 0,\n    amount: 0\n};\n\nconst addToCart = (state, action) => {\n  return updateObject( state, { \n    count: state.count + 1\n  })\n}\n\nconst removeToCart = (state, action) => {\n    console.log(action.id)\n    return updateObject( state, { \n        cart: state.cart.filter((cartItem) => cartItem.id !== action.id)\n    })\n}\n\nconst resetCart = (state, action) => {\n    // <=> return{ ...state, count: 0 }.\n    return updateObject( state, { \n      cart: []\n    })\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.ADD_TO_CART: return addToCart(state, action);\n    case actionTypes.REMOVE_TO_CART: return removeToCart(state, action);\n    case actionTypes.RESET_CART: return resetCart(state, action);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}