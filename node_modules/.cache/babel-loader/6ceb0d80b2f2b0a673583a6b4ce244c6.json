{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Video from './Video/Video'; // import Modal from './Modal/Modal';\n// import Rubrique from './Rubrique/Rubrique'\n\nimport Slider from './Slider/Slider'; // import MyButton from '../../components/MyButton/MyButton';\n\nimport { Container } from 'react-bootstrap';\nimport './Movie.css';\nimport Presentation from './Presentation/Presentation';\n\nclass MovieId extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n    this.state = {\n      movie: '',\n      genre: [],\n      years: '',\n      youtubeKey: '',\n      id: '',\n      acteurs: []\n    };\n\n    this.idVideoYoutube = () => {\n      axios.get(`https://api.themoviedb.org/3/movie/${this.state.movie.id}?api_key=ee52528a3d2bfff0312880daeaee21b3&append_to_response=videos&&language=frinclude_adult=false`).then(response => {\n        this.setState({\n          youtubeKey: response.data.videos.results[0].key\n        });\n      }).catch(error => {\n        this.setState({\n          youtubeKey: null\n        });\n      }); //je remet la youtubeKey a null quand il n'y a pas d'ID youtube pour ce film.\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      window.scrollTo(0, 0);\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      this.setState({\n        id: params.id\n      }, () => {\n        axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos&language=fr`).then(response => this.setState({\n          movie: response.data,\n          genre: response.data.genres,\n          years: response.data.release_date.substr(0, 4)\n        }, () => this.idVideoYoutube())).catch(error => console.log(error));\n        axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`).then(response => this.setState({\n          acteurs: response.data.cast.splice(0, 5)\n        })).catch(err => console.log(err));\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.setState({\n        id: this.props.match.params.id\n      }, () => {\n        axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos&language=fr`).then(response => this.setState({\n          movie: response.data,\n          genre: response.data.genres,\n          years: response.data.release_date.substr(0, 4)\n        }, () => this.idVideoYoutube(this.state.movie.id))).catch(error => console.log(error));\n        axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`).then(response => this.setState({\n          acteurs: response.data.cast.splice(0, 5)\n        })).catch(err => console.log(err));\n        window.scrollTo(0, 0);\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    let movieBackdropStyles = null;\n\n    if (!!this.state.movie.backdrop_path) {\n      movieBackdropStyles = {\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: '100vh',\n        backgroundColor: 'white',\n        backgroundPosition: 'center'\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      style: movieBackdropStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Presentation, {\n      movie: this.state.movie,\n      youtubeKey: this.state.youtubeKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Video, {\n      id: this.state.youtubeKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      idMovie: this.state.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\n;\nexport default withRouter(MovieId);","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx"],"names":["React","Component","withRouter","axios","Video","Slider","Container","Presentation","MovieId","_isMounted","state","movie","genre","years","youtubeKey","id","acteurs","idVideoYoutube","get","then","response","setState","data","videos","results","key","catch","error","submit","e","preventDefault","componentDidMount","window","scrollTo","match","params","props","genres","release_date","substr","console","log","cast","splice","err","componentWillUnmount","componentDidUpdate","prevProps","render","movieBackdropStyles","backdrop_path","backgroundImage","backgroundRepeat","backgroundSize","minHeight","backgroundColor","backgroundPosition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Video from './Video/Video';\n// import Modal from './Modal/Modal';\n// import Rubrique from './Rubrique/Rubrique'\nimport Slider from './Slider/Slider';\n// import MyButton from '../../components/MyButton/MyButton';\nimport { Container } from 'react-bootstrap';\n\nimport './Movie.css';\nimport Presentation from './Presentation/Presentation';\n\nclass MovieId extends Component {\n    _isMounted = false;\n    state = {\n        movie : '',\n        genre: [],\n        years: '',\n        youtubeKey: '',\n        id: '',\n        acteurs: []\n    };\n\n    componentDidMount () {\n        this._isMounted = true;\n        if (this._isMounted) {\n            window.scrollTo(0, 0); \n            const { match: { params } } = this.props;\n            this.setState({id: params.id}, () => {\n                axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos&language=fr`)\n                    .then(response => this.setState({movie : response.data, genre : response.data.genres, years: response.data.release_date.substr(0, 4)}, () => this.idVideoYoutube()))\n                    .catch(error => console.log(error));\n                axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`)\n                    .then(response => this.setState({acteurs: response.data.cast.splice(0, 5)}))\n                    .catch(err => console.log(err))\n            });\n        }\n    };\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    };\n\n    idVideoYoutube = () => {\n        axios.get(`https://api.themoviedb.org/3/movie/${this.state.movie.id}?api_key=ee52528a3d2bfff0312880daeaee21b3&append_to_response=videos&&language=frinclude_adult=false`)\n            .then(response => {this.setState({youtubeKey: response.data.videos.results[0].key})})\n            .catch(error => {this.setState({youtubeKey: null})});\n            //je remet la youtubeKey a null quand il n'y a pas d'ID youtube pour ce film.\n    };\n\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.id !== prevProps.match.params.id) {\n            this.setState({id: this.props.match.params.id}, () => {\n                axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos&language=fr`)\n                    .then(response => this.setState({movie : response.data, genre : response.data.genres, years: response.data.release_date.substr(0, 4)}, () => this.idVideoYoutube(this.state.movie.id)))\n                    .catch(error => console.log(error));\n                axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`)\n                    .then(response => this.setState({acteurs: response.data.cast.splice(0, 5)}))\n                    .catch(err => console.log(err))\n                window.scrollTo(0, 0);\n            });\n        };\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n    };\n\n    render () {\n        let movieBackdropStyles = null;\n        if (!!this.state.movie.backdrop_path) {\n            movieBackdropStyles = {\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize:'cover',\n                minHeight:'100vh',\n                backgroundColor: 'white',\n                backgroundPosition:'center' \n            };\n        }\n\n        return (\n            <div className=\"Page\" style={movieBackdropStyles}>\n                <Container className='Container'>\n                    <Presentation movie={this.state.movie} youtubeKey={this.state.youtubeKey}/>\n                    \n                 \n                    \n                    <Video id={this.state.youtubeKey}/>\n                    <Slider idMovie={this.state.id}/>\n                </Container>\n            </div>\n        );\n    };\n};\n\nexport default withRouter(MovieId);\n"]},"metadata":{},"sourceType":"module"}