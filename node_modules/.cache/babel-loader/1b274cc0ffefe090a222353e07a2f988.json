{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/App.js\";\n\n/* istanbul ignore file */\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Register from './containers/Auth/Register/Register';\nimport Login from './containers/Auth/Login/Login';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Pwd from './containers/Auth/ForgetPwd/ForgetPwd';\nimport Home from './containers/Home/Home';\nimport Movie from './containers/Movie/Movie';\nimport Profil from './containers/Profil/Profil';\nimport Aux from './hoc/Aux/Aux';\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group;';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      prevDepth: this.getPathDepth(this.props.location)\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      prevDepth: this.getPathDepth(this.props.location)\n    });\n  }\n\n  getPathDepth(location) {\n    let pathArr = location.pathname.split('/');\n    pathArr = pathArr.filter(n => n !== '');\n    return pathArr.length;\n  }\n\n  render() {\n    const location = {\n      location\n    };\n    let routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      exact: true,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/forget_password\",\n      component: Pwd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n\n    if (localStorage.getItem('token')) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        locaiton: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        component: Home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/movie/:id\",\n        component: Movie,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        component: Home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/profil\",\n        component: Profil,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    const timeout = {\n      enter: 800,\n      exit: 400\n    };\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: \"div\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CSSTransition, {\n      timeout: timeout,\n      className: \"pageSlider\",\n      mountOnEnter: false,\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.getPathDepth(location) - this.state.componentWillReceiveProps >= 0 ? \"left\" : 'right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, routes)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/App.js"],"names":["React","Component","Switch","Route","Redirect","withRouter","connect","Register","Login","Logout","Pwd","Home","Movie","Profil","Aux","Layout","actions","TransitionGroup","CSSTransition","App","state","prevDepth","getPathDepth","props","location","componentWillReceiveProps","setState","pathArr","pathname","split","filter","n","length","render","routes","localStorage","getItem","timeout","enter","exit","mapStateToProps","token","auth","mapDispatchToProps","dispatch","onTryAutoSignup","authCheckState"],"mappings":"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","sourcesContent":["/* istanbul ignore file */\n\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Register from './containers/Auth/Register/Register';\nimport Login from './containers/Auth/Login/Login';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Pwd from './containers/Auth/ForgetPwd/ForgetPwd';\nimport Home from './containers/Home/Home';\nimport Movie from './containers/Movie/Movie';\nimport Profil from './containers/Profil/Profil';\n\nimport Aux from './hoc/Aux/Aux';\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { TransitionGroup, CSSTransition } from 'react-transition-group;'\n\nclass App extends Component {\n  state = {\n    prevDepth : this.getPathDepth(this.props.location)\n  }\n\n  componentWillReceiveProps() {\n    this.setState({ prevDepth: this.getPathDepth(this.props.location)});\n  }\n\n  getPathDepth(location) {\n    let pathArr = location.pathname.split('/');\n    pathArr = pathArr.filter(n => n !== '');\n    return pathArr.length;\n  }\n\n  render() {\n    const location={location};\n\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/register\" exact component={Register}/>\n        <Route path=\"/forget_password\" component={Pwd}/>\n        <Redirect to='/'/>\n      </Switch>\n    );\n\n    if (localStorage.getItem('token')) {\n      routes = (\n      <Switch locaiton={location}>\n        <Route path=\"/home\" component={Home}/>\n        <Route path=\"/movie/:id\" component={Movie}/>\n        <Route path=\"/logout\" component={Logout}/>\n        <Route path=\"/home\" component={Home}/>\n        <Route path=\"/profil\" component={Profil}/>\n        <Redirect to=\"/home\"/>\n      </Switch>\n      )\n    }\n   \n    const timeout = { enter: 800, exit: 400 }\n\n    return(\n      <Aux>\n        <Layout>\n          <TransitionGroup component=\"div\" className=\"App\">\n            <CSSTransition timeout={timeout} className=\"pageSlider\" mountOnEnter={false} unmountOnExit={true}>\n              <div className={this.getPathDepth(location) - this.state.componentWillReceiveProps >= 0 ? \"left\" : 'right'}>\n                {routes}\n              </div>\n            \n            </CSSTransition>\n          </TransitionGroup>\n        </Layout>\n      </Aux>\n    )\n  } \n}\n\nconst mapStateToProps = state => {\n  return{\n    token: state.auth.token !== null\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));"]},"metadata":{},"sourceType":"module"}