{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n\n    this.searchMovies = () => {// axios.get(`${PATH_BASE}${PATH_SEARCH}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_LANGUE}fr${PATH_ADULT}\"&query=${this.props.textSearch}`)\n      // .then(response => {\n      //   this.setState({movies : response.data.results}, () => {\n      //   });\n      // })\n    };\n\n    this.filterMovies = () => {// let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_ADULT}${PATH_LANGUE}fr`;\n      //   if (!!this.props.genre) \n      //     url += `&with_genres=${this.props.genre}`;\n      //   if (!!this.props.years)\n      //     url += `&primary_release_year=${this.props.years}`;\n      //   if (!!this.props.ordre)\n      //     url += `&sort_by=${this.props.ordre}`;\n      //   axios.get(url)\n      //   .then(response => {\n      //     this.setState({movies: response.data.results}, () => {\n      //     this.props.actionTextSearch();\n      //     })\n      //   })\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('sssssssssssss  ', this.props.textSearch);\n    if (prevProps.textSearch !== this.props.textSearch && this.props.textSearch !== '') this.searchMovies();else if (prevProps.genre !== this.props.genre || prevProps.years !== this.props.years || prevProps.note !== this.props.note || prevProps.ordre !== this.props.ordre) this.filterMovies();\n  }\n\n  render() {\n    let asyncPagination = null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll // dataLength={this.state.movies.length}\n    , {\n      next: asyncPagination,\n      hasMore: this.state.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 58\n        }\n      }, \"Yay! You have seen it all\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","axios","InfiniteScroll","MovieItems","MoviesList","state","movies","searchMovies","filterMovies","componentDidUpdate","prevProps","console","log","props","textSearch","genre","years","note","ordre","render","asyncPagination","hasMore","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,MAAM,EAAE;AADF,KADyB;;AAAA,SAajCC,YAbiC,GAalB,MAAM,CACjB;AACA;AACA;AAEA;AACA;AACH,KApBgC;;AAAA,SAsBjCC,YAtBiC,GAsBlB,MAAM,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,KArCgC;AAAA;;AAKjCC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKC,KAAL,CAAWC,UAAzC;AACA,QAAIJ,SAAS,CAACI,UAAV,KAAyB,KAAKD,KAAL,CAAWC,UAApC,IAAkD,KAAKD,KAAL,CAAWC,UAAX,KAA0B,EAAhF,EACC,KAAKP,YAAL,GADD,KAEK,IAAIG,SAAS,CAACK,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAA/B,IAAwCL,SAAS,CAACM,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAvE,IAAgFN,SAAS,CAACO,IAAV,KAAmB,KAAKJ,KAAL,CAAWI,IAA9G,IAAsHP,SAAS,CAACQ,KAAV,KAAoB,KAAKL,KAAL,CAAWK,KAAzJ,EACH,KAAKV,YAAL;AACH;;AA4BDW,EAAAA,MAAM,GAAG;AACP,QAAIC,eAAe,GAAG,IAAtB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAEA,eAFR;AAGE,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWgB,OAHtB;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJV;AAKE,MAAA,UAAU,eAAE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAnC,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGhB,MANH,CADF,CADF;AAYD;;AAtDgC;;AAyDnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\n\nclass MoviesList extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    console.log('sssssssssssss  ',this.props.textSearch)\n    if (prevProps.textSearch !== this.props.textSearch && this.props.textSearch !== '') \n     this.searchMovies();\n    else if (prevProps.genre !== this.props.genre || prevProps.years !== this.props.years || prevProps.note !== this.props.note || prevProps.ordre !== this.props.ordre)\n      this.filterMovies();\n  };\n\n  searchMovies = () => {\n      // axios.get(`${PATH_BASE}${PATH_SEARCH}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_LANGUE}fr${PATH_ADULT}\"&query=${this.props.textSearch}`)\n      // .then(response => {\n      //   this.setState({movies : response.data.results}, () => {\n         \n      //   });\n      // })\n  };\n\n  filterMovies = () => {\n    // let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_ADULT}${PATH_LANGUE}fr`;\n    //   if (!!this.props.genre) \n    //     url += `&with_genres=${this.props.genre}`;\n    //   if (!!this.props.years)\n    //     url += `&primary_release_year=${this.props.years}`;\n    //   if (!!this.props.ordre)\n    //     url += `&sort_by=${this.props.ordre}`;\n\n    //   axios.get(url)\n    //   .then(response => {\n    //     this.setState({movies: response.data.results}, () => {\n    //     this.props.actionTextSearch();\n    //     })\n    //   })\n  }\n\n  render() {\n    let asyncPagination = null;\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          // dataLength={this.state.movies.length}\n          next={asyncPagination}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! You have seen it all</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}