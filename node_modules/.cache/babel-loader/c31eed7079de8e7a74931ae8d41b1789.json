{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/N/src/components/Slider/Slider.jsx\";\nimport React from \"react\";\nimport Slider from 'react-slick';\nimport { withRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './Slider.css';\n\nconst SimpleSlider = props => {\n  var settings;\n\n  if (props.component === 'Movie') {\n    settings = {\n      width: '90%',\n      dots: true,\n      infinite: true,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      speed: 1000,\n      initialSlide: 0,\n      responsive: [{\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3\n        }\n      }, {\n        breakpoint: 780,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2\n        }\n      }, {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }]\n    };\n  } else if (props.component === 'MyOrder') {\n    settings = {\n      dots: true,\n      infinite: true,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      speed: 1000,\n      initialSlide: 0\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '92%',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: props.titleCss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), props.similar.map(movie => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: movie.id,\n      className: \"blockImage\",\n      style: {\n        width: '50px'\n      },\n      onClick: () => props.history.push(`/movie/${movie.id}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: props.image,\n      src: `https://image.tmdb.org/t/p/w500/${movie.poster_path || movie.poster}`,\n      alt: movie.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), props.component === 'MyOrder' && /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'black',\n        textAlign: 'center',\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 52\n      }\n    }, movie.title));\n  })));\n};\n\nexport default withRouter(SimpleSlider);","map":{"version":3,"sources":["/Users/miclaude/Desktop/N/src/components/Slider/Slider.jsx"],"names":["React","Slider","withRouter","Image","SimpleSlider","props","settings","component","width","dots","infinite","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","speed","initialSlide","responsive","breakpoint","margin","titleCss","title","similar","map","movie","id","history","push","image","poster_path","poster","color","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Slider from 'react-slick';\nimport { withRouter } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './Slider.css';\n\nconst SimpleSlider = (props) => {\n  var settings;\n  if (props.component === 'Movie') {\n    settings = {\n      width: '90%',\n      dots: true,\n      infinite: true,\n      slidesToShow: 4,\n      slidesToScroll: 4,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      speed: 1000,\n      initialSlide: 0,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n          }\n        },\n        {\n          breakpoint: 780,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 2,\n          }\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          }\n        }\n      ]\n    };\n  }\n  \n  else if (props.component === 'MyOrder')  {\n    settings = {\n      dots: true,\n      infinite: true,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      autoplay: true,\n      autoplaySpeed: 4000,\n      speed: 1000,\n      initialSlide: 0,\n    };\n  }\n  \n  return (\n    <div style={{width:'92%', margin:'auto'}}>\n      <h2 className={props.titleCss}>{props.title}</h2>\n      <Slider {...settings}>\n        {\n          props.similar.map(movie => {\n            return (\n              <div key={movie.id} className='blockImage' style={{width:'50px'} }onClick={() => props.history.push(`/movie/${movie.id}`)}>\n                <Image className={props.image} src={`https://image.tmdb.org/t/p/w500/${movie.poster_path || movie.poster}`} alt={movie.title} />\n                { props.component === 'MyOrder' && <h4 style={{color:'black',textAlign:'center', marginTop:'10px'}}>{movie.title}</h4> }\n              </div>\n            )\n          })\n        }\n      </Slider>\n    </div>\n  );\n}\n\nexport default withRouter(SimpleSlider);"]},"metadata":{},"sourceType":"module"}