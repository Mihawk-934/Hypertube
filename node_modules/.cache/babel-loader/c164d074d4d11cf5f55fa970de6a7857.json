{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  cart: localStorage.getItem('Panier') || [],\n  total: localStorage.getItem('total') || 0,\n  qte: localStorage.getItem('qte') || 0\n};\n\nconst addToCart = (state, action) => {\n  let noSimilarFilm = true;\n  let tempCart = state.cart.map(cartItem => {\n    if (cartItem.id === action.movie.id) {\n      cartItem = { ...cartItem,\n        qte: cartItem.qte + 1\n      };\n      noSimilarFilm = false;\n    }\n\n    return cartItem;\n  });\n\n  if (noSimilarFilm) {\n    tempCart = [...state.cart];\n    let value = {\n      title: action.movie.title,\n      price: 9.99,\n      id: action.movie.id,\n      qte: 1,\n      img: action.movie.poster_path,\n      duree: action.movie.runtime,\n      note: action.movie.vote_average\n    };\n    tempCart.push(value);\n  }\n\n  let temps = JSON.stringify(tempCart);\n  localStorage.setItem('Panier', temps);\n  return { ...state,\n    cart: tempCart,\n    qte: state.qte + 1\n  };\n};\n\nconst removeToCart = (state, action) => {\n  let obj = state.cart.filter(cartItem => cartItem.id !== action.id);\n  let temps = JSON.stringify(obj);\n  localStorage.setItem('Panier', temps);\n  return updateObject(state, {\n    cart: obj\n  });\n};\n\nconst resetCart = state => {\n  let obj = [];\n  let temps = JSON.stringify(obj);\n  localStorage.setItem('Panier', temps);\n  return updateObject(state, {\n    cart: obj\n  });\n};\n\nconst increase = (state, action) => {\n  let tempCart = state.cart.map(cartItem => {\n    if (cartItem.id === action.id) cartItem = { ...cartItem,\n      qte: cartItem.qte + 1\n    };\n    return cartItem;\n  });\n  let temps = JSON.stringify(tempCart);\n  localStorage.setItem('Panier', temps);\n  return { ...state,\n    cart: tempCart\n  };\n};\n\nconst decrease = (state, action) => {\n  let tempCart = state.cart.map(cartItem => {\n    if (cartItem.id === action.id) cartItem = { ...cartItem,\n      qte: cartItem.qte - 1\n    };\n    return cartItem;\n  });\n  let temps = JSON.stringify(tempCart);\n  localStorage.setItem('Panier', temps);\n  return { ...state,\n    cart: tempCart\n  };\n};\n\nconst getTotals = state => {\n  let {\n    total,\n    qte\n  } = state.cart.reduce((cartTotal, cartItem) => {\n    const itemTotal = cartItem.price * cartItem.qte;\n    cartTotal.total += itemTotal;\n    cartTotal.qte += cartItem.qte;\n    return cartTotal;\n  }, {\n    total: 0,\n    qte: 0\n  });\n  total = parseFloat(total.toFixed(2));\n  let temps = JSON.stringify(total);\n  localStorage.setItem('total', temps);\n  let temps1 = JSON.stringify(qte);\n  localStorage.setItem('qte', temps1);\n  return { ...state,\n    total,\n    qte\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log('ici', state);\n\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return addToCart(state, action);\n\n    case actionTypes.REMOVE_TO_CART:\n      return removeToCart(state, action);\n\n    case actionTypes.RESET_CART:\n      return resetCart(state, action);\n\n    case actionTypes.INCREASE:\n      return increase(state, action);\n\n    case actionTypes.DECREASE:\n      return decrease(state, action);\n\n    case actionTypes.GET_TOTAL:\n      return getTotals(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Hypertube/src/store/reducers/cart.js"],"names":["actionTypes","updateObject","initialState","cart","localStorage","getItem","total","qte","addToCart","state","action","noSimilarFilm","tempCart","map","cartItem","id","movie","value","title","price","img","poster_path","duree","runtime","note","vote_average","push","temps","JSON","stringify","setItem","removeToCart","obj","filter","resetCart","increase","decrease","getTotals","reduce","cartTotal","itemTotal","parseFloat","toFixed","temps1","reducer","console","log","type","ADD_TO_CART","REMOVE_TO_CART","RESET_CART","INCREASE","DECREASE","GET_TOTAL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    cart: localStorage.getItem('Panier') || [],\n    total: localStorage.getItem('total') || 0,\n    qte: localStorage.getItem('qte') || 0\n};\n\nconst addToCart = (state, action) => {\n    let noSimilarFilm = true;\n    let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.movie.id) {\n            cartItem = { ...cartItem, qte: cartItem.qte + 1 };\n            noSimilarFilm = false\n        }    \n        return cartItem;\n    })\n    if (noSimilarFilm) {\n        tempCart = [...state.cart];\n        let value = {\n            title: action.movie.title,\n            price: 9.99,\n            id: action.movie.id,\n            qte: 1,\n            img: action.movie.poster_path,\n            duree: action.movie.runtime,\n            note: action.movie.vote_average\n        }\n        tempCart.push(value)\n    }\n\n    let temps = JSON.stringify(tempCart)\n    localStorage.setItem('Panier',temps)\n    return { ...state, cart: tempCart, qte: state.qte + 1 }\n}\n\nconst removeToCart = (state, action) => {\n    let obj = state.cart.filter((cartItem) => cartItem.id !== action.id)\n    let temps = JSON.stringify(obj)\n    localStorage.setItem('Panier',temps)\n    return updateObject( state, { \n        cart: obj\n    })\n}\n\nconst resetCart = (state ) => {\n    let obj = []\n    let temps = JSON.stringify(obj)\n    localStorage.setItem('Panier',temps)\n    return updateObject( state, { \n      cart: obj\n    })\n}\n\nconst increase = (state, action) => {\n    let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.id)\n            cartItem = { ...cartItem, qte: cartItem.qte + 1 };\n        return cartItem;\n    })\n    let temps = JSON.stringify(tempCart)\n    localStorage.setItem('Panier',temps)\n    return { ...state, cart: tempCart }\n}\n\nconst decrease = (state, action) => {\n    let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.id)\n            cartItem = { ...cartItem, qte: cartItem.qte - 1 };\n        return cartItem;\n    })\n    let temps = JSON.stringify(tempCart)\n    localStorage.setItem('Panier',temps)\n    return { ...state, cart: tempCart }\n}\n\nconst getTotals = (state) => {\n    let { total, qte } = state.cart.reduce(\n        (cartTotal, cartItem) => {\n            const itemTotal = cartItem.price * cartItem.qte;\n            cartTotal.total += itemTotal;\n            cartTotal.qte += cartItem.qte;\n            return cartTotal;\n        },\n        {\n            total: 0,\n            qte: 0\n        }\n    );\n    total = parseFloat(total.toFixed(2));\n    let temps = JSON.stringify(total)\n    localStorage.setItem('total',temps)\n    let temps1 = JSON.stringify(qte)\n    localStorage.setItem('qte',temps1)\n    return {...state, total, qte}\n}\n\nconst reducer = ( state = initialState, action ) => {\n    console.log('ici',state)\n    switch ( action.type ) {\n        case actionTypes.ADD_TO_CART: return addToCart(state, action);\n        case actionTypes.REMOVE_TO_CART: return removeToCart(state, action);\n        case actionTypes.RESET_CART: return resetCart(state, action);\n        case actionTypes.INCREASE: return increase(state, action);\n        case actionTypes.DECREASE: return decrease(state, action);\n        case actionTypes.GET_TOTAL: return getTotals(state);\n        default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}