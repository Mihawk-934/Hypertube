{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/App.js\";\n\n/* istanbul ignore file */\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Register from './containers/Auth/Register/Register';\nimport Login from './containers/Auth/Login/Login';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Pwd from './containers/Auth/ForgetPwd/ForgetPwd';\nimport { connect } from 'react-redux';\nimport Home from './containers/Home/Home';\nimport Movie from './containers/Movie/Movie';\nimport Aux from './hoc/Aux/Aux';\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    let routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      exact: true,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/forget_password\",\n      component: Pwd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }));\n\n    if (localStorage.getItem('token')) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        component: Home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/movie/:id\",\n        component: Movie,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        component: Logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        component: Home,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/App.js"],"names":["React","Component","Switch","Route","Redirect","withRouter","Register","Login","Logout","Pwd","connect","Home","Movie","Aux","Layout","actions","App","render","routes","localStorage","getItem","mapStateToProps","state","token","auth","mapDispatchToProps","dispatch","onTryAutoSignup","authCheckState"],"mappings":"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","sourcesContent":["/* istanbul ignore file */\n\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n\nimport Register from './containers/Auth/Register/Register';\nimport Login from './containers/Auth/Login/Login';\nimport Logout from './containers/Auth/Logout/Logout';\nimport Pwd from './containers/Auth/ForgetPwd/ForgetPwd';\nimport { connect } from 'react-redux';\nimport Home from './containers/Home/Home';\nimport Movie from './containers/Movie/Movie';\n\nimport Aux from './hoc/Aux/Aux';\nimport Layout from './hoc/Layout/Layout';\nimport * as actions from './store/actions/index';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/register\" exact component={Register}/>\n        <Route path=\"/forget_password\" component={Pwd}/>\n        <Redirect to='/'/>\n      </Switch>\n    );\n\n    if (localStorage.getItem('token')) {\n      routes = (\n      <Switch>\n        <Route path=\"/home\" component={Home}/>\n        <Route path=\"/movie/:id\" component={Movie}/>\n        <Route path=\"/logout\" component={Logout}/>\n        <Route path=\"/home\" component={Home}/>\n        <Redirect to=\"/home\"/>\n      </Switch>\n      )\n    }\n\n    return(\n      <Aux>\n        <Layout>\n          {routes}\n        </Layout>\n      </Aux>\n    )\n  } \n}\n\nconst mapStateToProps = state => {\n  return{\n    token: state.auth.token !== null\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));"]},"metadata":{},"sourceType":"module"}