{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  token: null,\n  userId: null,\n  loading: false,\n  errorServor: null,\n  registerSuccess: false\n};\n\nconst authStart = state => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authLogout = state => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst errorServor = (state, action) => {\n  return updateObject(state, {\n    errorServor: action.error\n  });\n};\n\nconst registerSuccess = (state, action) => {\n  return updateObject(state, {\n    registerSuccess: action.value\n  });\n};\n\nconst hideToolbatAndFooter = state => {\n  return updateObject(state, {\n    hideToolbatAndFooter: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state);\n\n    case actionTypes.AUTH_ERROR:\n      return errorServor(state, action);\n\n    case actionTypes.REGISTER_SUCCESS:\n      return registerSuccess(state, action);\n\n    case actionTypes.HIDE_TOOLBAR_AND_FOOTER:\n      return hideToolbatAndFooter(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/store/reducers/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","loading","errorServor","registerSuccess","authStart","state","error","authSuccess","action","idToken","authLogout","value","hideToolbatAndFooter","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_LOGOUT","AUTH_ERROR","REGISTER_SUCCESS","HIDE_TOOLBAR_AND_FOOTER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,WAAW,EAAE,IAJM;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;;AAQA,MAAMC,SAAS,GAAKC,KAAF,IAAa;AAC7B,SAAOR,YAAY,CAAEQ,KAAF,EAAS;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeL,IAAAA,OAAO,EAAE;AAAxB,GAAT,CAAnB;AACD,CAFD;;AAIA,MAAMM,WAAW,GAAG,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACrC,SAAOX,YAAY,CAAEQ,KAAF,EAAS;AACxBN,IAAAA,KAAK,EAAES,MAAM,CAACC,OADU;AAExBT,IAAAA,MAAM,EAAEQ,MAAM,CAACR,MAFS;AAGxBM,IAAAA,KAAK,EAAE,IAHiB;AAIxBL,IAAAA,OAAO,EAAE;AAJe,GAAT,CAAnB;AAMD,CAPD;;AASA,MAAMS,UAAU,GAAIL,KAAD,IAAW;AAC5B,SAAOR,YAAY,CAACQ,KAAD,EAAQ;AACvBN,IAAAA,KAAK,EAAE,IADgB;AAEvBC,IAAAA,MAAM,EAAE;AAFe,GAAR,CAAnB;AAID,CALD;;AAOA,MAAME,WAAW,GAAG,CAACG,KAAD,EAAQG,MAAR,KAAmB;AACrC,SAAOX,YAAY,CAACQ,KAAD,EAAQ;AACzBH,IAAAA,WAAW,EAAEM,MAAM,CAACF;AADK,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMH,eAAe,GAAG,CAACE,KAAD,EAAQG,MAAR,KAAmB;AACzC,SAAOX,YAAY,CAACQ,KAAD,EAAQ;AACzBF,IAAAA,eAAe,EAAEK,MAAM,CAACG;AADC,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMC,oBAAoB,GAAIP,KAAD,IAAW;AACtC,SAAOR,YAAY,CAAEQ,KAAF,EAAS;AAC1BO,IAAAA,oBAAoB,EAAE;AADI,GAAT,CAAnB;AAGD,CAJD;;AAMA,MAAMC,OAAO,GAAG,CAAER,KAAK,GAAGP,YAAV,EAAwBU,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACM,IAAhB;AACE,SAAKlB,WAAW,CAACmB,UAAjB;AAA6B,aAAOX,SAAS,CAACC,KAAD,EAAQG,MAAR,CAAhB;;AAC7B,SAAKZ,WAAW,CAACoB,YAAjB;AAA+B,aAAOT,WAAW,CAACF,KAAD,EAAQG,MAAR,CAAlB;;AAC/B,SAAKZ,WAAW,CAACqB,WAAjB;AAA8B,aAAOP,UAAU,CAACL,KAAD,CAAjB;;AAC9B,SAAKT,WAAW,CAACsB,UAAjB;AAA6B,aAAOhB,WAAW,CAACG,KAAD,EAAQG,MAAR,CAAlB;;AAC7B,SAAKZ,WAAW,CAACuB,gBAAjB;AAAmC,aAAOhB,eAAe,CAACE,KAAD,EAAQG,MAAR,CAAtB;;AACnC,SAAKZ,WAAW,CAACwB,uBAAjB;AAA0C,aAAOR,oBAAoB,CAACP,KAAD,CAA3B;;AAC1C;AAAS,aAAOA,KAAP;AAPX;AASD,CAVD;;AAYA,eAAeQ,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  token: null,\n  userId: null,\n  loading: false,\n  errorServor: null,\n  registerSuccess: false\n};\n\nconst authStart = ( state ) => {\n  return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject( state, { \n      token: action.idToken,\n      userId: action.userId,\n      error: null,\n      loading: false\n   } );\n};\n\nconst authLogout = (state) => {\n  return updateObject(state, {\n      token: null,\n      userId: null\n  });\n};\n\nconst errorServor = (state, action) => {\n  return updateObject(state, {\n    errorServor: action.error\n  });\n};\n\nconst registerSuccess = (state, action) => {\n  return updateObject(state, {\n    registerSuccess: action.value\n  });\n};\n\nconst hideToolbatAndFooter = (state) => {\n  return updateObject( state, { \n    hideToolbatAndFooter: true,\n  })\n}\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.AUTH_START: return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n    case actionTypes.AUTH_LOGOUT: return authLogout(state);\n    case actionTypes.AUTH_ERROR: return errorServor(state, action);\n    case actionTypes.REGISTER_SUCCESS: return registerSuccess(state, action);\n    case actionTypes.HIDE_TOOLBAR_AND_FOOTER: return hideToolbatAndFooter(state);\n    default: return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}