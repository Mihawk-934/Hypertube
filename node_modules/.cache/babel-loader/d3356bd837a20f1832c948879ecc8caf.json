{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/authPhone.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport firebase from '../../fire';\nimport * as regex from './Regex';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass Phone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: null,\n      codeVerification: null,\n      error: {},\n      errorCatch: '',\n      disable: true,\n      disable1: true,\n      userId: null,\n      show: false,\n      codeError: null\n    };\n\n    this.handleFormValidcode = () => {\n      let store = '';\n      const error = { ...this.state.error\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable1: false\n      }) : this.setState({\n        disable1: true\n      }, () => {\n        console.log(this.state.disable1);\n      });\n    };\n\n    this.handleFormValidphone = () => {\n      let store = '';\n      const error = { ...this.state.error\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable: false\n      }) : this.setState({\n        disable: true\n      }, () => {\n        console.log(this.state.disable);\n      });\n    };\n\n    this.handleInputValid = (name_input, value_input) => {\n      let error = { ...this.state.error\n      };\n\n      switch (name_input) {\n        case 'phone':\n          value_input.match(regex.phoneNumber) ? error[name_input] = '' : error[name_input] = \"*votre numero nest pas valid\";\n          break;\n\n        case 'codeVerification':\n          value_input.match(regex.codeVerification) && value_input.length === 5 ? error[name_input] = '' : error[name_input] = \"*mauvais format 5chiffre sont attendues\";\n          break;\n\n        default:\n          console.log(\"NUMBER NOT FOUND\");\n      }\n\n      if (name_input === 'phone') this.setState({\n        error: error\n      }, () => {\n        this.handleFormValidphone();\n      });else this.setState({\n        error: error\n      }, () => {\n        this.handleFormValidcode();\n      });\n    };\n\n    this.handleInput = event => {\n      const nameInput = event.target.id;\n      const valueInput = event.target.value;\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        this.handleInputValid(nameInput, valueInput);\n      });\n    };\n\n    this.sendCode = e => {\n      e.preventDefault();\n      firebase.auth().languageCode = 'fr';\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      let phoneNumber = this.state.phone;\n      let appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        this.setState({\n          show: true\n        });\n        window.confirmationResult = confirmationResult;\n      }).catch(error => {\n        this.setState({\n          errorCatch: error.message\n        });\n      });\n    };\n\n    this.receiveCode = e => {\n      e.preventDefault();\n      const verificationId = this.state.codeVerification;\n      window.confirmationResult.confirm(verificationId).then(result => {\n        localStorage.setItem('id', result.user.uid);\n        localStorage.setItem('token', result.user.ma);\n        localStorage.setItem('show', true);\n        this.props.onPhone(result.user.ma, result.user.uid);\n        this.props.history.push('/home');\n      }).catch(error => {\n        this.setState({\n          codeError: 'Error lors de la verification du code: code invalide'\n        });\n      });\n    };\n  }\n\n  render() {\n    let form;\n    let form1;\n    let msgCatch;\n    if (this.state.errorCatch && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 24\n      }\n    }, \"Trop d'essai votre compte a \\xE9t\\xE9 temporairement suspendu. Reesayer plus tard\");\n    if (this.state.codeError) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 24\n      }\n    }, \"le code ne coresspond pas a celui qui vous a \\xE9t\\xE9 envoyer veuillez ressayer\");\n    if (this.state.show && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 24\n      }\n    }, \"vous recevrez dans quelques instants un code par SMS a taper sur le formulaire ci-dessous\");\n\n    if (this.state.show === false) {\n      form = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, \"Connexion via Smarthpone\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"phone\",\n        type: \"tel\",\n        placeholder: \"Enter Phone-number ex :+33625145895\",\n        onChange: this.handleInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, this.state.error.phone), /*#__PURE__*/React.createElement(Button, {\n        id: \"recaptcha-container\",\n        disabled: this.state.disable,\n        onClick: this.sendCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, \"Envoyer code\"));\n    }\n\n    if (this.state.show) {\n      form1 = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"Entrer votre code\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"codeVerification\",\n        type: \"tel\",\n        placeholder: \"Enter the code verification \",\n        onChange: this.handleInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, this.state.error.codeVerification), /*#__PURE__*/React.createElement(Button, {\n        id: \"code\",\n        disabled: this.state.disable1,\n        onClick: this.receiveCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \"S'inscrire\"));\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, form, form1, msgCatch);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Phone));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/authPhone.jsx"],"names":["React","Component","Button","Form","firebase","regex","withRouter","actions","connect","Phone","state","phone","codeVerification","error","errorCatch","disable","disable1","userId","show","codeError","handleFormValidcode","store","values","Object","key","keys","length","setState","console","log","handleFormValidphone","handleInputValid","name_input","value_input","match","phoneNumber","handleInput","event","nameInput","target","id","valueInput","value","sendCode","e","preventDefault","auth","languageCode","window","recaptchaVerifier","RecaptchaVerifier","size","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","message","receiveCode","verificationId","confirm","result","localStorage","setItem","user","uid","ma","props","onPhone","history","push","render","form","form1","msgCatch","onSubmit","mapDispatchToProps","dispatch","token","authSuccess"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Form} from 'react-bootstrap'\nimport firebase from '../../fire';\nimport * as regex from './Regex'\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass Phone extends Component {\n    state = {\n        phone:null,\n        codeVerification:null,\n        error:{},\n        errorCatch:'',\n        disable:true,\n        disable1:true,\n        userId: null,\n        show: false,\n        codeError:null\n    }\n\n    handleFormValidcode = () => { \n        let store = ''; \n        const error = {...this.state.error};\n        const values = Object.values(error)\n        for (const key of values)\n            store += key;\n        Object.keys(error).length===1 && store.length===0? this.setState({disable1:false}):this.setState({disable1:true},()=>{console.log(this.state.disable1)});\n    }\n\n    handleFormValidphone = () => { \n        let store = ''; \n        const error = {...this.state.error};\n        const values = Object.values(error)\n        for (const key of values)\n            store += key;\n        Object.keys(error).length===1 && store.length===0? this.setState({disable:false}):this.setState({disable:true},()=>{console.log(this.state.disable)});\n    }\n\n    handleInputValid = (name_input,value_input) => {\n        let error = {...this.state.error};\n        switch(name_input){\n            case 'phone': value_input.match(regex.phoneNumber)  ? error[name_input]='' : error[name_input] = \"*votre numero nest pas valid\";\n                break;\n            case 'codeVerification':value_input.match(regex.codeVerification) && value_input.length === 5 ? error[name_input]='' : error[name_input] = \"*mauvais format 5chiffre sont attendues\";\n                 break;\n            default:\n                console.log(\"NUMBER NOT FOUND\");\n        }\n        if (name_input ==='phone')\n            this.setState({error:error}, () => {this.handleFormValidphone()});\n        else \n            this.setState({error:error}, () => {this.handleFormValidcode()}); \n    }\n    \n\n    handleInput = (event) => {\n        const nameInput = event.target.id;\n        const valueInput = event.target.value;\n        this.setState({[event.target.id]:event.target.value},\n            () => {this.handleInputValid(nameInput,valueInput)    \n        });\n    }\n\n    sendCode = (e) => {  \n        e.preventDefault();\n        firebase.auth().languageCode = 'fr';\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\",\n        {\n           size:\"invisible\"\n        });\n        let phoneNumber = this.state.phone;\n        let appVerifier = window.recaptchaVerifier;\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then(confirmationResult => { \n            this.setState({show:true})\n            window.confirmationResult = confirmationResult;\n         }).catch(error => {\n            this.setState({errorCatch:error.message})\n        });\n    }\n        \n    receiveCode= (e) => {\n        e.preventDefault();\n        const verificationId = this.state.codeVerification;\n        window.confirmationResult\n        .confirm(verificationId)\n        .then(result => {\n            localStorage.setItem('id',result.user.uid)\n            localStorage.setItem('token', result.user.ma)\n            localStorage.setItem('show', true)\n            this.props.onPhone(result.user.ma,result.user.uid);\n            this.props.history.push('/home')\n        })\n        .catch(error => {\n            this.setState({codeError:'Error lors de la verification du code: code invalide'})\n        });\n    }\n\n    render() {\n        let form;\n        let form1;\n        let msgCatch;\n\n        if (this.state.errorCatch && this.state.codeError===null)\n            msgCatch = <p>Trop d'essai votre compte a été temporairement suspendu. Reesayer plus tard</p>\n        \n        if (this.state.codeError)\n            msgCatch = <p>le code ne coresspond pas a celui qui vous a été envoyer veuillez ressayer</p>\n        \n        if (this.state.show && this.state.codeError===null)\n            msgCatch = <p>vous recevrez dans quelques instants un code par SMS a taper sur le formulaire ci-dessous</p>;\n\n        if (this.state.show===false){\n            form= (\n                <Form.Group>\n                    <Form.Label>Connexion via Smarthpone</Form.Label>\n                    <Form.Control id=\"phone\" type=\"tel\" placeholder=\"Enter Phone-number ex :+33625145895\" onChange={this.handleInput}/>\n                    <Form.Text className=\"text-muted\">         \n                        {this.state.error.phone}     \n                    </Form.Text>\n                    <Button id=\"recaptcha-container\" disabled={this.state.disable} onClick={this.sendCode}>\n                        Envoyer code\n                    </Button>\n                </Form.Group>\n            )\n        }\n\n        if (this.state.show){\n          form1 = ( \n            <Form.Group>\n                <Form.Label>Entrer votre code</Form.Label>\n                <Form.Control id=\"codeVerification\" type=\"tel\" placeholder=\"Enter the code verification \" onChange={this.handleInput} />\n                    <Form.Text className=\"text-muted\">         \n                        {this.state.error.codeVerification}  \n                    </Form.Text>\n                <Button id=\"code\" disabled={this.state.disable1} onClick={this.receiveCode}>\n                    S'inscrire\n                </Button> \n            </Form.Group>\n            )\n        }\n\n        return (\n            <Form onSubmit={this.onSubmit}>\n                {form}\n                {form1}\n                {msgCatch}\n            </Form>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n    };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps) (Phone));\n"]},"metadata":{},"sourceType":"module"}