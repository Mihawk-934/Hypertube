{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/authPhone.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport firebase from '../../fire';\nimport * as regex from './Regex';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\nclass Phone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      phone: null,\n      codeVerification: null,\n      error: {},\n      error1: {},\n      errorCatch: '',\n      disable: true,\n      disable1: true,\n      confirmResult: null,\n      userId: null,\n      value: null,\n      show: false,\n      codeError: null\n    };\n\n    this.handleFormValidcode = () => {\n      let store = '';\n      const error = { ...this.state.error1\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable1: false\n      }) : this.setState({\n        disable1: true\n      }, () => {\n        console.log(this.state.disable1);\n      });\n    };\n\n    this.handleFormValidphone = () => {\n      let store = '';\n      const error = { ...this.state.error\n      };\n      const values = Object.values(error);\n\n      for (const key of values) store += key;\n\n      Object.keys(error).length === 1 && store.length === 0 ? this.setState({\n        disable: false\n      }) : this.setState({\n        disable: true\n      }, () => {\n        console.log(this.state.disable);\n      });\n    };\n\n    this.handleInputValid = (name_input, value_input) => {\n      let error = { ...this.state.error\n      };\n      let error1 = { ...this.state.error1\n      };\n\n      switch (name_input) {\n        case 'phone':\n          value_input.match(regex.phoneNumber) ? error[name_input] = '' : error[name_input] = \"*votre numero nest pas valid\";\n          break;\n\n        case 'codeVerification':\n          value_input.match(regex.codeVerification) && value_input.length > 5 ? error1[name_input] = '' : error1[name_input] = \"*mauvais format 5chiffre sont attendues\";\n          break;\n\n        default:\n          console.log(\"NUMBER NOT FOUND\");\n      }\n\n      this.setState({\n        error: error\n      }, () => {\n        this.handleFormValidphone();\n      });\n      this.setState({\n        error1: error1\n      }, () => {\n        this.handleFormValidcode();\n      });\n    };\n\n    this.handleInput = event => {\n      const nameInput = event.target.id;\n      const valueInput = event.target.value;\n      console.log(nameInput, valueInput);\n      this.setState({\n        [event.target.id]: event.target.value\n      }, () => {\n        this.handleInputValid(nameInput, valueInput);\n      });\n    };\n\n    this.sendCode = e => {\n      e.preventDefault();\n      firebase.auth().languageCode = 'fr';\n      window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\", {\n        size: \"invisible\"\n      });\n      let phoneNumber = this.state.phone;\n      console.log('phone====', phoneNumber);\n      let appVerifier = window.recaptchaVerifier;\n      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n        this.setState({\n          show: true\n        });\n        window.confirmationResult = confirmationResult;\n      }).catch(error => {\n        console.log('error===', error);\n        this.setState({\n          errorCatch: error.message\n        });\n      });\n    };\n\n    this.receiveCode = e => {\n      e.preventDefault();\n      const verificationId = this.state.codeVerification;\n      window.confirmationResult.confirm(verificationId).then(result => {\n        // User signed in successfully.\n        localStorage.setItem('id', result.user.uid);\n        localStorage.setItem('token', result.user.ma);\n        localStorage.setItem('show', true);\n        this.props.onPhone(result.user.ma, result.user.uid);\n        this.props.history.push('/home');\n      }).catch(error => {\n        // User couldn't sign in (bad verification code?)\n        this.setState({\n          codeError: 'Error lors de la verification du code: code invalide'\n        });\n      });\n    };\n  }\n\n  render() {\n    let formcode;\n    let formphone;\n    let msgCatch;\n    if (this.state.errorCatch && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 24\n      }\n    }, \"Trop d'essai votre compte a \\xE9t\\xE9 temporairement suspendu. Reesayer plus tard\");\n    if (this.state.codeError) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 24\n      }\n    }, \"le code ne coresspond pas a celui qui vous a \\xE9t\\xE9 envoyer veuillez ressayer\");\n    if (this.state.show && this.state.codeError === null) msgCatch = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 24\n      }\n    }, \"vous recevrez dans quelques instants un code par SMS a taper sur le formulaire ci-dessous\");\n\n    if (this.state.show === false) {\n      formphone = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 24\n        }\n      }, \"Connexion via Smarthpone\"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"phone\",\n        type: \"tel\",\n        placeholder: \"Enter Phone-number ex :+33625145895\",\n        onChange: e => this.handleInput(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, this.state.error.phone), /*#__PURE__*/React.createElement(Button, {\n        id: \"recaptcha-container\",\n        disabled: this.state.disable,\n        onClick: e => this.sendCode(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, \"Envoyer code\"));\n    }\n\n    if (this.state.show) {\n      formcode = /*#__PURE__*/React.createElement(Form.Group, {\n        bg: \"light\",\n        variant: \"light\",\n        className: \" d-flex flex-column \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Form.Label, {\n        className: \" pt-3 pb-1\",\n        style: {\n          fontFamily: 'Roboto',\n          color: '#c71414',\n          fontWeight: 'bold',\n          fontSize: '25px',\n          textShadow: '2px 4px 5px rgba(0,0,0,0.3)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 18\n        }\n      }, \"Connexion via Smarthpone\"), \"  \"), /*#__PURE__*/React.createElement(Form.Control, {\n        id: \"codeVerification\",\n        style: {\n          borderRadius: '3rem',\n          fontFamily: 'Sulphur Point'\n        },\n        className: \"w-90\",\n        type: \"tel\",\n        placeholder: \"Enter the code verification \",\n        onChange: e => this.handleInput(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 16\n        }\n      }), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        style: {\n          marginTop: '4px',\n          fontFamily: 'Roboto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, \" \", this.state.error1.codeVerification)), /*#__PURE__*/React.createElement(Button, {\n        style: {\n          borderRadius: '6rem'\n        },\n        id: \"code\",\n        className: \"mt-2\",\n        variant: \"danger\",\n        type: \"danger\",\n        disabled: this.state.disable1,\n        onClick: e => this.receiveCode(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, \"S'inscrire\"));\n    }\n\n    return /*#__PURE__*/React.createElement(Form, {\n      style: {\n        width: '350px',\n        opacity: '0.7',\n        boxShadow: '5px 5px rgb(8, 7, 7)',\n        borderRadius: '20px',\n        display: 'flex',\n        flexDirection: 'inherit',\n        alignItems: 'center'\n      },\n      className: \" bg-white mt-5\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, msgCatch, formcode, formphone);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(Phone));","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Auth/authPhone.jsx"],"names":["React","Component","Button","Form","firebase","regex","withRouter","actions","connect","Phone","state","phone","codeVerification","error","error1","errorCatch","disable","disable1","confirmResult","userId","value","show","codeError","handleFormValidcode","store","values","Object","key","keys","length","setState","console","log","handleFormValidphone","handleInputValid","name_input","value_input","match","phoneNumber","handleInput","event","nameInput","target","id","valueInput","sendCode","e","preventDefault","auth","languageCode","window","recaptchaVerifier","RecaptchaVerifier","size","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","message","receiveCode","verificationId","confirm","result","localStorage","setItem","user","uid","ma","props","onPhone","history","push","render","formcode","formphone","msgCatch","fontFamily","color","fontWeight","fontSize","textShadow","borderRadius","marginTop","width","opacity","boxShadow","display","flexDirection","alignItems","onSubmit","mapDispatchToProps","dispatch","token","authSuccess"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Form} from 'react-bootstrap'\nimport firebase from '../../fire';\nimport * as regex from './Regex'\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\n\n\n\nclass Phone extends Component {\n    state = {\n        phone:null,\n        codeVerification:null,\n        error:{},\n        error1:{},\n        errorCatch:'',\n        disable:true,\n        disable1:true,\n        confirmResult: null,\n        userId: null,\n        value:null,\n        show: false,\n        codeError:null\n    }\n\n    handleFormValidcode = () => { \n        let store = ''; \n        const error = {...this.state.error1};\n        const values = Object.values(error)\n        for (const key of values)\n            store += key;\n        Object.keys(error).length===1 && store.length===0? this.setState({disable1:false}):this.setState({disable1:true},()=>{console.log(this.state.disable1)});\n}\n\n    handleFormValidphone = () => { \n            let store = ''; \n            const error = {...this.state.error};\n            const values = Object.values(error)\n            for (const key of values)\n                store += key;\n            Object.keys(error).length===1 && store.length===0? this.setState({disable:false}):this.setState({disable:true},()=>{console.log(this.state.disable)});\n    }\n\n    handleInputValid = (name_input,value_input) => {\n        let error = {...this.state.error};\n        let error1 ={...this.state.error1}\n        switch(name_input){\n            case 'phone': value_input.match(regex.phoneNumber)  ? error[name_input]='' : error[name_input] = \"*votre numero nest pas valid\";\n                break;\n            case 'codeVerification':value_input.match(regex.codeVerification) && value_input.length>5 ? error1[name_input]='' : error1[name_input] = \"*mauvais format 5chiffre sont attendues\";\n                 break;\n            default:\n                console.log(\"NUMBER NOT FOUND\");\n        }\n      \n        this.setState({error:error}, () => {this.handleFormValidphone()});\n    \n        this.setState({error1:error1}, () => {this.handleFormValidcode()});\n        \n       \n    }\n    \n\n    handleInput = (event) => {\n        const nameInput = event.target.id;\n        const valueInput = event.target.value;\n        console.log(nameInput,valueInput)\n\n        this.setState({[event.target.id]:event.target.value},\n            () => {this.handleInputValid(nameInput,valueInput)    \n        });\n    }\n\n\n\n    sendCode = (e) => {  \n        e.preventDefault();\n        firebase.auth().languageCode = 'fr';\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\"recaptcha-container\",\n        {\n           size:\"invisible\"\n        });\n        let phoneNumber = this.state.phone;\n        console.log('phone====',phoneNumber);\n        let appVerifier = window.recaptchaVerifier;\n        firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then(confirmationResult => { \n            this.setState({show:true})\n            window.confirmationResult = confirmationResult;\n         }).catch(error => {\n            console.log('error===',error)\n            this.setState({errorCatch:error.message})\n    });\n    }\n        \n   \n    receiveCode= (e) => {\n        e.preventDefault();\n        const verificationId = this.state.codeVerification;\n        window.confirmationResult\n          .confirm(verificationId)\n          .then(result => {\n            // User signed in successfully.\n            localStorage.setItem('id',result.user.uid)\n            localStorage.setItem('token', result.user.ma)\n            localStorage.setItem('show', true)\n            this.props.onPhone(result.user.ma,result.user.uid);\n            this.props.history.push('/home')\n          })\n          .catch(error => {\n            // User couldn't sign in (bad verification code?)\n            this.setState({codeError:'Error lors de la verification du code: code invalide'})\n          });\n\n    }\n   \n\n    render() {\n        let formcode;\n        let formphone;\n        let msgCatch;\n\n        if (this.state.errorCatch && this.state.codeError===null)\n            msgCatch = <p>Trop d'essai votre compte a été temporairement suspendu. Reesayer plus tard</p>\n        \n        if (this.state.codeError)\n            msgCatch = <p>le code ne coresspond pas a celui qui vous a été envoyer veuillez ressayer</p>\n        \n\n        if (this.state.show && this.state.codeError===null)\n            msgCatch = <p>vous recevrez dans quelques instants un code par SMS a taper sur le formulaire ci-dessous</p>;\n\n        if (this.state.show===false){\n                formphone= (\n                    \n                    <Form.Group>\n                       <Form.Label>Connexion via Smarthpone</Form.Label>\n                        <Form.Control id=\"phone\" type=\"tel\" placeholder=\"Enter Phone-number ex :+33625145895\" onChange={(e)=>this.handleInput(e)}/>\n                        <Form.Text className=\"text-muted\">         \n                         {this.state.error.phone}     \n                        </Form.Text>\n                        <Button id=\"recaptcha-container\" disabled={this.state.disable} onClick={(e)=>this.sendCode(e)}>\n                        Envoyer code\n                        </Button>\n                    </Form.Group>\n              \n    \n                )\n    \n            }\n        \n\n        if (this.state.show ){\n          formcode= ( \n         \n            <Form.Group bg=\"light\" variant=\"light\" className=\" d-flex flex-column \">\n            <h2> <Form.Label  className=' pt-3 pb-1' style={{fontFamily: 'Roboto',color:'#c71414',fontWeight: 'bold',fontSize:'25px',textShadow: '2px 4px 5px rgba(0,0,0,0.3)'}}>Connexion via Smarthpone</Form.Label>  </h2> \n               <Form.Control  id=\"codeVerification\" style={{borderRadius: '3rem',fontFamily: 'Sulphur Point'}} className=\"w-90\" type=\"tel\" placeholder=\"Enter the code verification \"    onChange={(e)=>this.handleInput(e)} />\n                <Form.Text className=\"text-muted\"  style={{ marginTop: '4px',fontFamily: 'Roboto'}}>         \n                <p > {this.state.error1.codeVerification}</p>   \n                </Form.Text>\n            <Button  style={{borderRadius:'6rem'}}  id=\"code\" className='mt-2'  variant=\"danger\" type=\"danger\" disabled={this.state.disable1} onClick={(e)=>this.receiveCode(e)}>\n                S'inscrire\n            </Button> \n            </Form.Group>\n            )\n        }\n\n        return (\n            \n            <Form style={{ width:'350px', opacity:'0.7',boxShadow:'5px 5px rgb(8, 7, 7)',borderRadius:'20px', display:'flex',flexDirection:'inherit',alignItems:'center'}} className=' bg-white mt-5' onSubmit={this.onSubmit}>\n                 {msgCatch}\n                 {formcode}\n                 {formphone}\n            </Form>\n           \n        )\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      onPhone: (token, userId) => dispatch(actions.authSuccess(token, userId))\n    \n    };\n  };\n\n  export default withRouter(connect(null, mapDispatchToProps) (Phone));\n"]},"metadata":{},"sourceType":"module"}