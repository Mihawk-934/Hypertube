{"ast":null,"code":"// import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport axios from '../../axios';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFailed = error => {\n  return {\n    type: actionTypes.AUTH_FAILED,\n    error: error\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n    }).catch(err => {\n      console.log(err);\n      dispatch(authFailed(err));\n    });\n  };\n}; // export const authCheckState = () => {\n//     return dispatch => {\n//         const token = localStorage.getItem('token');\n//         if (!token) {\n//             dispatch(logout());\n//         }\n//         else {\n//             const userId = localStorage.getItem('userId');\n//             axios.get(`http://localhost:3000/api/user/id/${userId}`, { headers: { Authorization: token } })\n//                 .then(response => {\n//                     dispatch(authSuccess(token, response.data.users)); \n//                 })\n//                 .catch(error => {\n//                     dispatch(authFail(error.response.data.message));\n//                 });\n//         }\n//     }\n// };","map":{"version":3,"sources":["/Users/miclaude/Desktop/tdd_project/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFailed","error","AUTH_FAILED","auth","email","password","dispatch","authData","returnSecureToken","post","then","response","console","log","data","localId","catch","err"],"mappings":"AAAA;AAEA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEH,WAAW,CAACQ,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHR,IAAAA,IAAI,EAAEH,WAAW,CAACY,WADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACA,UAAMe,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbG,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKAjB,IAAAA,KAAK,CAACkB,IAAN,CAAW,uGAAX,EAAoHF,QAApH,EACCG,IADD,CACMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,QAAQ,CAACX,WAAW,CAACgB,QAAQ,CAACG,IAAT,CAAcf,OAAf,EAAwBY,QAAQ,CAACG,IAAT,CAAcC,OAAtC,CAAZ,CAAR;AACH,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAX,MAAAA,QAAQ,CAACN,UAAU,CAACiB,GAAD,CAAX,CAAR;AACH,KARD;AASH,GAhBD;AAiBH,CAlBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFailed = (error) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        error: error\n    };\n};\n\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPBaoPmbCgQfEQNz9VgHt88mGg6Jv4ces', authData)\n        .then(response => {\n            console.log(response);\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch(authFailed(err));\n        })\n    };\n};\n\n// export const authCheckState = () => {\n//     return dispatch => {\n//         const token = localStorage.getItem('token');\n//         if (!token) {\n//             dispatch(logout());\n//         }\n//         else {\n//             const userId = localStorage.getItem('userId');\n//             axios.get(`http://localhost:3000/api/user/id/${userId}`, { headers: { Authorization: token } })\n//                 .then(response => {\n//                     dispatch(authSuccess(token, response.data.users)); \n//                 })\n//                 .catch(error => {\n//                     dispatch(authFail(error.response.data.message));\n//                 });\n//         }\n//     }\n// };"]},"metadata":{},"sourceType":"module"}