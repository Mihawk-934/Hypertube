{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from './api';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      page: 1,\n      hasMore: true,\n      nbPage: 0\n    };\n\n    this.newMovie = async () => {\n      try {\n        if (this.state.nbPage !== 0 && this.state.page > 5) {\n          this.setState({\n            hasMore: false\n          });\n          return;\n        }\n\n        let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_ADULT}${PATH_LANGUE}fr`;\n        let response = await axios.get(url);\n        this.setState({\n          nbPage: response.data.total_pages\n        }, () => {\n          this.setMovies(response.data.results);\n          console.log('lenght  --> ', this.state.movies.length);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.uniqueArray = a => {\n      return [...new Set(a.map(o => o.id))].map(id => a.find(i => i.id === id));\n    };\n\n    this.setMovies = movies => {\n      const oldMovies = this.state.page !== 1 ? this.state.movies : [];\n      const updateMovies = this.uniqueArray([...oldMovies, ...movies]);\n      this.setState(prevState => ({\n        movies: updateMovies,\n        page: prevState.page + 1\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.newMovie();\n  }\n\n  render() {\n    let movies = null;\n    if (this.state.movies !== null && this.state.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.state.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n    if (this.state.movies.length === 0) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat pour: \\\"\", this.props.textSearch, \"\\\".\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.state.movies.length,\n      next: this.newMovie,\n      hasMore: this.state.hasMore,\n      loader: /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, \"Loading...\"),\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 58\n        }\n      }, \"Yay! You have seen it all\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","axios","InfiniteScroll","MovieItems","API_KEY","PATH_BASE","PATH_DISCOVER","PATH_MOVIE","PATH_PAGE","PATH_ADULT","PATH_LANGUE","MoviesList","state","movies","page","hasMore","nbPage","newMovie","setState","url","response","get","data","total_pages","setMovies","results","console","log","length","error","uniqueArray","a","Set","map","o","id","find","i","oldMovies","updateMovies","prevState","componentDidMount","render","clicked","color","props","textSearch","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport { API_KEY, PATH_BASE, PATH_DISCOVER, PATH_MOVIE, PATH_PAGE, PATH_ADULT, PATH_LANGUE } from  './api';\n\nclass MoviesList extends Component {\n  state = {\n    movies: [],\n    page: 1,\n    hasMore: true,\n    nbPage: 0\n  };\n\n  componentDidMount() {\n    this.newMovie();\n  };\n\n  newMovie = async () => {\n    try {\n      if (this.state.nbPage !== 0 && this.state.page > 5) {\n        this.setState({ hasMore: false });\n        return;\n      }\n      let url = `${PATH_BASE}${PATH_DISCOVER}${PATH_MOVIE}${API_KEY}${PATH_PAGE}${this.state.page}${PATH_ADULT}${PATH_LANGUE}fr`;\n      let response = await axios.get(url);\n      this.setState({ nbPage: response.data.total_pages }, () => {\n        this.setMovies(response.data.results);\n        console.log('lenght  --> ',this.state.movies.length);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  uniqueArray = a => {\n    return [...new Set(a.map(o => o.id))].map(id => a.find(i => i.id === id));\n  };\n\n  setMovies = movies => {\n    const oldMovies = this.state.page !== 1 ? this.state.movies : [];\n    const updateMovies = this.uniqueArray([...oldMovies, ...movies]);\n    this.setState(prevState => ({movies: updateMovies, page: prevState.page + 1}));\n  };\n\n  render() {\n    let movies = null;\n    if (this.state.movies !== null && this.state.movies.length > 0) \n      movies = <MovieItems movies={this.state.movies} clicked={() => this.clicked()}/>\n    if (this.state.movies.length === 0)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat pour: \"{this.props.textSearch}\".</p>\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength={this.state.movies.length}\n          next={this.newMovie}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! You have seen it all</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}