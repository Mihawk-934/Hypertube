{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  movies: []\n};\n\nconst filtres = (state, action) => {\n  return updateObject(state, {\n    movies: action.movies\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GENRE:\n      return genre(state, action);\n\n    case actionTypes.ORDRE:\n      return ordre(state, action);\n\n    case actionTypes.YEARS:\n      return years(state, action);\n\n    case actionTypes.TEXT_SEARCH:\n      return textSearch(state, action);\n\n    case actionTypes.FILTRES:\n      return filtres(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/reducers/filtres.js"],"names":["actionTypes","updateObject","initialState","movies","filtres","state","action","reducer","type","GENRE","genre","ORDRE","ordre","YEARS","years","TEXT_SEARCH","textSearch","FILTRES"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAOL,YAAY,CAAEI,KAAF,EAAS;AAAEF,IAAAA,MAAM,EAAEG,MAAM,CAACH;AAAjB,GAAT,CAAnB;AAAyD,CAD3D;;AAGA,MAAMI,OAAO,GAAG,CAAEF,KAAK,GAAGH,YAAV,EAAwBI,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACE,IAAhB;AACE,SAAKR,WAAW,CAACS,KAAjB;AAAwB,aAAOC,KAAK,CAACL,KAAD,EAAQC,MAAR,CAAZ;;AACxB,SAAKN,WAAW,CAACW,KAAjB;AAAwB,aAAOC,KAAK,CAACP,KAAD,EAAQC,MAAR,CAAZ;;AACxB,SAAKN,WAAW,CAACa,KAAjB;AAAwB,aAAOC,KAAK,CAACT,KAAD,EAAQC,MAAR,CAAZ;;AAExB,SAAKN,WAAW,CAACe,WAAjB;AAA8B,aAAOC,UAAU,CAACX,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKN,WAAW,CAACiB,OAAjB;AAA0B,aAAOb,OAAO,CAACC,KAAD,EAAQC,MAAR,CAAd;;AAC1B;AAAS,aAAOD,KAAP;AAPX;AASD,CAVD;;AAYA,eAAeE,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  movies: [],\n};\nconst filtres = (state, action) => {\n  return updateObject( state, { movies: action.movies } );};\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.GENRE: return genre(state, action);\n    case actionTypes.ORDRE: return ordre(state, action);\n    case actionTypes.YEARS: return years(state, action);\n\n    case actionTypes.TEXT_SEARCH: return textSearch(state, action);\n    case actionTypes.FILTRES: return filtres(state, action);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}