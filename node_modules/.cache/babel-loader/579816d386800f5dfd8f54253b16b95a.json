{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  movies: [],\n  page: 0,\n  nbPage: null,\n  filtres: {\n    genre: {\n      value: null,\n      label: 'Genre'\n    },\n    years: {\n      value: null,\n      label: 'Annee'\n    },\n    sortby: {\n      value: null,\n      label: 'SortBy'\n    }\n  }\n};\n\nconst initialise = (state, action) => {\n  return updateObject(state, {\n    page: action.value,\n    movies: [],\n    nbPage: null\n  });\n};\n\nconst filtres = (state, action) => {\n  return updateObject(state, {\n    filtres: action.filtres\n  });\n};\n\nconst textSearch = (state, action) => {\n  return updateObject(state, {\n    textSearch: action.textSearch\n  });\n};\n\nconst movies = (state, action) => {\n  return updateObject(state, {\n    movies: [...state.movies, ...action.newMovies],\n    nbPage: action.nbPage,\n    page: action.page,\n    next: action.next\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVIES:\n      return movies(state, action);\n\n    case actionTypes.FILTRES:\n      return filtres(state, action);\n\n    case actionTypes.TEXT_SEARCH:\n      return textSearch(state, action);\n\n    case actionTypes.INITIALISE:\n      return initialise(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/store/reducers/filtres.js"],"names":["actionTypes","updateObject","initialState","movies","page","nbPage","filtres","genre","value","label","years","sortby","initialise","state","action","textSearch","newMovies","next","reducer","type","MOVIES","FILTRES","TEXT_SEARCH","INITIALISE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,IAAI,EAAE,CAFa;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KADA;AAEPC,IAAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFA;AAGPE,IAAAA,MAAM,EAAE;AAACH,MAAAA,KAAK,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAHD;AAJU,CAArB;;AAYA,MAAMG,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOb,YAAY,CAAEY,KAAF,EAAS;AAC1BT,IAAAA,IAAI,EAAEU,MAAM,CAACN,KADa;AAE1BL,IAAAA,MAAM,EAAE,EAFkB;AAG1BE,IAAAA,MAAM,EAAE;AAHkB,GAAT,CAAnB;AAKD,CAND;;AAQA,MAAMC,OAAO,GAAG,CAACO,KAAD,EAAQC,MAAR,KAAmB;AACjC,SAAOb,YAAY,CAAEY,KAAF,EAAS;AAC1BP,IAAAA,OAAO,EAAEQ,MAAM,CAACR;AADU,GAAT,CAAnB;AAGD,CAJD;;AAMA,MAAMS,UAAU,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOb,YAAY,CAAEY,KAAF,EAAS;AAC1BE,IAAAA,UAAU,EAAED,MAAM,CAACC;AADO,GAAT,CAAnB;AAGD,CAJD;;AAMA,MAAMZ,MAAM,GAAG,CAACU,KAAD,EAAQC,MAAR,KAAmB;AAChC,SAAOb,YAAY,CAAEY,KAAF,EAAS;AAC1BV,IAAAA,MAAM,EAAE,CAAC,GAAGU,KAAK,CAACV,MAAV,EAAkB,GAAGW,MAAM,CAACE,SAA5B,CADkB;AAE1BX,IAAAA,MAAM,EAAES,MAAM,CAACT,MAFW;AAG1BD,IAAAA,IAAI,EAAEU,MAAM,CAACV,IAHa;AAI1Ba,IAAAA,IAAI,EAAEH,MAAM,CAACG;AAJa,GAAT,CAAnB;AAMD,CAPD;;AASA,MAAMC,OAAO,GAAG,CAAEL,KAAK,GAAGX,YAAV,EAAwBY,MAAxB,KAAoC;AAClD,UAASA,MAAM,CAACK,IAAhB;AACE,SAAKnB,WAAW,CAACoB,MAAjB;AAAyB,aAAOjB,MAAM,CAACU,KAAD,EAAQC,MAAR,CAAb;;AACzB,SAAKd,WAAW,CAACqB,OAAjB;AAA0B,aAAOf,OAAO,CAACO,KAAD,EAAQC,MAAR,CAAd;;AAC1B,SAAKd,WAAW,CAACsB,WAAjB;AAA8B,aAAOP,UAAU,CAACF,KAAD,EAAQC,MAAR,CAAjB;;AAC9B,SAAKd,WAAW,CAACuB,UAAjB;AAA6B,aAAOX,UAAU,CAACC,KAAD,EAAQC,MAAR,CAAjB;;AAC7B;AAAS,aAAOD,KAAP;AALX;AAOD,CARD;;AAUA,eAAeK,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n  movies: [],\n  page: 0,\n  nbPage: null,\n  filtres: {\n    genre: {value: null, label: 'Genre'},\n    years: {value: null, label: 'Annee'},\n    sortby: {value: null, label: 'SortBy'}\n  },\n  \n};\n\nconst initialise = (state, action) => {\n  return updateObject( state, { \n    page: action.value,\n    movies: [],\n    nbPage: null\n  })\n}\n\nconst filtres = (state, action) => {\n  return updateObject( state, { \n    filtres: action.filtres,\n  })\n}\n\nconst textSearch = (state, action) => {\n  return updateObject( state, { \n    textSearch: action.textSearch,\n  })\n}\n\nconst movies = (state, action) => {\n  return updateObject( state, { \n    movies: [...state.movies, ...action.newMovies],\n    nbPage: action.nbPage,\n    page: action.page,\n    next: action.next\n  });\n};\n\nconst reducer = ( state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.MOVIES: return movies(state, action);\n    case actionTypes.FILTRES: return filtres(state, action);\n    case actionTypes.TEXT_SEARCH: return textSearch(state, action);\n    case actionTypes.INITIALISE: return initialise(state, action);\n    default: return state;\n  }\n}; \n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}