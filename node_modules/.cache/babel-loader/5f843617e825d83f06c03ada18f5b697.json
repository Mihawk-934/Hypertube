{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasMore: true\n    };\n\n    this.newMovie = () => {\n      if (this.props.nbPage !== 0 && this.props.page > this.props.nbPage) this.setState({\n        hasMore: false\n      });else if (this.props.next === 'filtres') {\n        console.log('[1]');\n      } else if (this.props.next === 'textSearch') this.props.textSearchRequest(this.props.textSearch, this.props.page + 1);else if (this.props.next === 'popular' || this.props.next === null) this.props.popularRequest(this.props.page + 1);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.movies.length);\n    if (this.props.movies.length === 0) this.newMovie();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.filtres !== this.props.filtres) {\n      console.log('[1]');\n      this.props.initialiseMovies();\n      this.props.initialisePage(0);\n      this.props.filtresRequest(this.props.filtres, 1);\n    } else if (prevProps.textSearch !== this.props.textSearch) {\n      this.props.initialiseMovies();\n      this.props.initialisePage(0);\n      this.props.textSearchRequest(this.props.textSearch, 1);\n    }\n  }\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) movies = /*#__PURE__*/React.createElement(MovieItems, {\n      movies: this.props.movies,\n      clicked: () => this.clicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    });\n    if (this.props.movies.length === 0) movies = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, \"Il y a 0 resultat.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      dataLength: this.props.movies.length,\n      next: this.newMovie,\n      hasMore: this.state.hasMore,\n      endMessage: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 58\n        }\n      }, \"Yay! Vous avez tout vu\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, movies));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.filtres.page,\n    nbPage: state.filtres.nbPage,\n    filtres: state.filtres.filtres,\n    textSearch: state.filtres.textSearch,\n    movies: state.filtres.movies,\n    next: state.filtres.next\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initialisePage: value => dispatch(actions.initialisePage(value)),\n    initialiseMovies: () => dispatch(actions.initialiseMovies()),\n    popularRequest: page => dispatch(actions.popularRequest(page)),\n    filtresRequest: (filtres, page) => dispatch(actions.filtresRequest(filtres, page)),\n    textSearchRequest: (textSearch, page) => dispatch(actions.textSearchRequest(textSearch, page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);","map":{"version":3,"sources":["/Users/miclaude/Desktop/react/Netflix/netflix2/src/containers/Home/MoviesList/MoviesList.jsx"],"names":["React","Component","InfiniteScroll","connect","MovieItems","actions","MoviesList","state","hasMore","newMovie","props","nbPage","page","setState","next","console","log","textSearchRequest","textSearch","popularRequest","componentDidMount","movies","length","componentDidUpdate","prevProps","filtres","initialiseMovies","initialisePage","filtresRequest","render","clicked","color","textAlign","mapStateToProps","mapDispatchToProps","dispatch","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { connect } from \"react-redux\";\nimport \"./MoviesList.css\";\nimport MovieItems from \"./MoviesItems/MoviesItems\";\nimport * as actions from '../../../store/actions/index';\n\nclass MoviesList extends Component {\n  state = {\n    hasMore: true,\n  }\n \n  componentDidMount () {\n    console.log(this.props.movies.length);\n    if (this.props.movies.length === 0)\n      this.newMovie();\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.filtres !== this.props.filtres) {\n      console.log('[1]');\n      this.props.initialiseMovies();\n      this.props.initialisePage(0);\n      this.props.filtresRequest(this.props.filtres, 1);\n    }\n    else if (prevProps.textSearch !== this.props.textSearch) {\n      this.props.initialiseMovies();\n      this.props.initialisePage(0);\n      this.props.textSearchRequest(this.props.textSearch, 1);\n    } \n  }\n\n  newMovie = () => {\n    if (this.props.nbPage !== 0 && this.props.page > this.props.nbPage) \n      this.setState({ hasMore: false });\n    else if (this.props.next === 'filtres') {\n      console.log('[1]');\n    }\n      \n    else if (this.props.next === 'textSearch')\n      this.props.textSearchRequest(this.props.textSearch, this.props.page + 1);\n    else if (this.props.next === 'popular' || this.props.next === null)\n      this.props.popularRequest(this.props.page + 1);\n  };\n\n  render() {\n    let movies = null;\n    if (this.props.movies !== null && this.props.movies.length > 0) \n      movies = <MovieItems movies={this.props.movies} clicked={() => this.clicked()}/>\n    if (this.props.movies.length === 0)\n      movies = <p style={{ color: \"white\" }}>Il y a 0 resultat.</p>\n\n    return (\n      <div className=\"block\">\n        <InfiniteScroll\n          dataLength={this.props.movies.length}\n          next={this.newMovie}\n          hasMore={this.state.hasMore}\n          endMessage={<p style={{ textAlign: \"center\" }}><b>Yay! Vous avez tout vu</b></p>}>\n          {movies}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.filtres.page,\n    nbPage: state.filtres.nbPage,\n    filtres: state.filtres.filtres,\n    textSearch: state.filtres.textSearch,\n    movies: state.filtres.movies,\n    next: state.filtres.next\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initialisePage: (value) => dispatch(actions.initialisePage(value)),\n    initialiseMovies: () => dispatch(actions.initialiseMovies()),\n    popularRequest: (page) => dispatch(actions.popularRequest(page)),\n    filtresRequest: (filtres, page) => dispatch(actions.filtresRequest(filtres, page)),\n    textSearchRequest: (textSearch, page)=> dispatch(actions.textSearchRequest(textSearch, page))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesList);"]},"metadata":{},"sourceType":"module"}