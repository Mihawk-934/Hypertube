{"ast":null,"code":"var _jsxFileName = \"/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Video from './Video/Video';\nimport Slider from './Slider/Slider';\nimport { Container } from 'react-bootstrap';\nimport Presentation from './Presentation/Presentation';\nimport './Movie.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\n\nclass MovieId extends Component {\n  constructor(...args) {\n    super(...args);\n    this._isMounted = false;\n\n    this.infoMovie = () => {// this.setState({id: this.props.match.params.id}, () => {\n      //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos,credits&language=fr&include_adult=false&page=1`)\n      //         .then(response => \n      //             this.setState({movie : response.data, genre : response.data.genres, years: response.data.release_date.substr(0, 4)}, console.log(response.data))\n      //         )\n      //         .catch(error => console.log(error));\n      //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`)\n      //         .then(response => {\n      //             let acteurs = response.data.cast.splice(0, 4);\n      //             acteurs = acteurs.map(acteur => {\n      //                 return {\n      //                     ...acteur,\n      //                     img: true\n      //                 }\n      //             })\n      //             this.setState({acteurs: acteurs})\n      //         })\n      //         .catch(err => console.log(err))\n      //     window.scrollTo(0, 0);\n      // });\n    };\n\n    this.idVideoYoutube = () => {\n      axios.get(`https://api.themoviedb.org/3/movie/${this.state.movie.id}?api_key=ee52528a3d2bfff0312880daeaee21b3&append_to_response=videos&language=fr&include_adult=false`).then(response => {\n        this.setState({\n          youtubeKey: response.data.videos.results[0].key\n        }, () => console.log('videos ---> ', response.data.videos.results));\n      }).catch(error => {\n        this.setState({\n          youtubeKey: null\n        });\n      }); //je remet la youtubeKey a null quand il n'y a pas d'ID youtube pour ce film.\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    Aos.init();\n    this._isMounted = true; // if (this._isMounted)\n    // this.infoMovie();\n  }\n\n  componentDidUpdate(prevProps) {// if (this.props.match.params.id !== prevProps.match.params.id)\n    // this.infoMovie();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let movieBackdropStyles = null;\n\n    if (!!this.state.movie.backdrop_path) {\n      movieBackdropStyles = {\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: '100vh',\n        backgroundColor: 'black',\n        backgroundPosition: 'center'\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Page\",\n      style: movieBackdropStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: \"Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-aos\": \"flip-left\",\n      \"data-aos-duration\": \"2000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\n;\nexport default withRouter(MovieId);","map":{"version":3,"sources":["/Users/miclaude/Desktop/Netflix_Project/src/containers/Movie/Movie.jsx"],"names":["React","Component","withRouter","axios","Video","Slider","Container","Presentation","Aos","MovieId","_isMounted","infoMovie","idVideoYoutube","get","state","movie","id","then","response","setState","youtubeKey","data","videos","results","key","console","log","catch","error","submit","e","preventDefault","componentDidMount","init","componentDidUpdate","prevProps","componentWillUnmount","render","movieBackdropStyles","backdrop_path","backgroundImage","backgroundRepeat","backgroundSize","minHeight","backgroundColor","backgroundPosition"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,kBAAP;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BS,UAD4B,GACf,KADe;;AAAA,SAqB5BC,SArB4B,GAqBhB,MAAM,CACd;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA3C2B;;AAAA,SA6C5BC,cA7C4B,GA6CX,MAAM;AACnBT,MAAAA,KAAK,CAACU,GAAN,CAAW,sCAAqC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EAAG,qGAApE,EACKC,IADL,CACUC,QAAQ,IAAI;AAAC,aAAKC,QAAL,CAAc;AAACC,UAAAA,UAAU,EAAEF,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBC,OAArB,CAA6B,CAA7B,EAAgCC;AAA7C,SAAd,EAAiE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,QAAQ,CAACG,IAAT,CAAcC,MAAd,CAAqBC,OAAjD,CAAvE;AAAkI,OADzJ,EAEKI,KAFL,CAEWC,KAAK,IAAI;AAAC,aAAKT,QAAL,CAAc;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAd;AAAkC,OAFvD,EADmB,CAGuC;AAC7D,KAjD2B;;AAAA,SAmD5BS,MAnD4B,GAmDlBC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,cAAF;AACH,KArD2B;AAAA;;AAI5BC,EAAAA,iBAAiB,GAAI;AACjBxB,IAAAA,GAAG,CAACyB,IAAJ;AACA,SAAKvB,UAAL,GAAkB,IAAlB,CAFiB,CAGjB;AAEI;AACP;;AAEDwB,EAAAA,kBAAkB,CAAEC,SAAF,EAAa,CAC3B;AACI;AACP;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAK1B,UAAL,GAAkB,KAAlB;AACH;;AAoCD2B,EAAAA,MAAM,GAAI;AACN,QAAIC,mBAAmB,GAAG,IAA1B;;AACA,QAAI,CAAC,CAAC,KAAKxB,KAAL,CAAWC,KAAX,CAAiBwB,aAAvB,EAAsC;AAClCD,MAAAA,mBAAmB,GAAG;AAClBE,QAAAA,eAAe,EAAG,2CAA0C,KAAK1B,KAAL,CAAWC,KAAX,CAAiBwB,aAAc,GADzE;AAElBE,QAAAA,gBAAgB,EAAE,WAFA;AAGlBC,QAAAA,cAAc,EAAC,OAHG;AAIlBC,QAAAA,SAAS,EAAC,OAJQ;AAKlBC,QAAAA,eAAe,EAAE,OALC;AAMlBC,QAAAA,kBAAkB,EAAC;AAND,OAAtB;AAQH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAEP,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,kBAAS,WAAd;AAA0B,2BAAkB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAgBH;;AApF2B;;AAqF/B;AAED,eAAepC,UAAU,CAACO,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport Video from './Video/Video';\nimport Slider from './Slider/Slider';\nimport { Container } from 'react-bootstrap';\nimport Presentation from './Presentation/Presentation';\nimport './Movie.css';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\n\nclass MovieId extends Component {\n    _isMounted = false;\n    \n\n    componentDidMount () {\n        Aos.init();\n        this._isMounted = true;\n        // if (this._isMounted)\n\n            // this.infoMovie();\n    };\n\n    componentDidUpdate (prevProps) {\n        // if (this.props.match.params.id !== prevProps.match.params.id)\n            // this.infoMovie();\n    };\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    };\n\n    infoMovie = () => {\n        // this.setState({id: this.props.match.params.id}, () => {\n        //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}?api_key=1e32f5c452c2267d5367589e9864ab1c&append_to_response=videos,credits&language=fr&include_adult=false&page=1`)\n        //         .then(response => \n        //             this.setState({movie : response.data, genre : response.data.genres, years: response.data.release_date.substr(0, 4)}, console.log(response.data))\n        //         )\n                \n        //         .catch(error => console.log(error));\n        //     axios.get(`https://api.themoviedb.org/3/movie/${this.state.id}/credits?api_key=1e32f5c452c2267d5367589e9864ab1c`)\n        //         .then(response => {\n        //             let acteurs = response.data.cast.splice(0, 4);\n        //             acteurs = acteurs.map(acteur => {\n        //                 return {\n        //                     ...acteur,\n        //                     img: true\n        //                 }\n        //             })\n        //             this.setState({acteurs: acteurs})\n        //         })\n        //         .catch(err => console.log(err))\n        //     window.scrollTo(0, 0);\n        // });\n    };\n\n    idVideoYoutube = () => {\n        axios.get(`https://api.themoviedb.org/3/movie/${this.state.movie.id}?api_key=ee52528a3d2bfff0312880daeaee21b3&append_to_response=videos&language=fr&include_adult=false`)\n            .then(response => {this.setState({youtubeKey: response.data.videos.results[0].key}, () => console.log('videos ---> ', response.data.videos.results))})\n            .catch(error => {this.setState({youtubeKey: null})}); //je remet la youtubeKey a null quand il n'y a pas d'ID youtube pour ce film.\n    };\n\n    submit = (e) => {\n        e.preventDefault();\n    };\n\n    render () { \n        let movieBackdropStyles = null;\n        if (!!this.state.movie.backdrop_path) {\n            movieBackdropStyles = {\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${this.state.movie.backdrop_path})`,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize:'cover',\n                minHeight:'100vh',\n                backgroundColor: 'black',\n                backgroundPosition:'center' \n            };\n        }\n\n        return (\n            <div className=\"Page\" style={movieBackdropStyles}>\n                <Container className='Container'>\n                    <div data-aos=\"flip-left\" data-aos-duration=\"2000\">\n                        {/* {this.state.movie && <Presentation\n                        movie={this.state.movie}\n                        youtubeKey={this.state.youtubeKey}\n                        years={this.state.years}\n                        acteurs={this.state.movie.credits.cast} \n                        genre={this.state.genre}/>}\n                        {this.state.youtubeKey && <Video id={this.state.youtubeKey}/>} */}\n                        {/* <Slider idMovie={this.state.id}/> */}\n                    </div>\n                </Container>\n            </div>\n        );\n    };\n};\n\nexport default withRouter(MovieId);\n"]},"metadata":{},"sourceType":"module"}